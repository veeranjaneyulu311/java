from elasticsearch import Elasticsearch, helpers
from ssl import create_default_context
import psycopg2


# https://stackoverflow.com/questions/20288770/how-to-use-bulk-api-to-store-the-keywords-in-es-by-using-python
# creates a connection to database
def connect_dev():
    return psycopg2.connect(database="drucare_dev", user="drucare_emp", password="Dru@143$care", host="192.168.1.111", port="5432")


# elastic search configuration
context = create_default_context(cafile="D:/ui/prod-docker/May-03/root-ca.pem")
context.check_hostname = False
es = Elasticsearch("https://192.168.1.109:9200", ssl_context=context, http_auth=('admin', 'admin'))

# fetch data to be inserted  from db
query = "SELECT drug_brand_id, drug_type_id,  dose_id, drug_brand_nm, dose_nm, drug_type_nm, drug_id, drug_nm  from public.drug_brand_ref"
conn = connect_dev()
curs = conn.cursor()
curs.execute(query)
rows = curs.fetchall()


# index settings
index_settings = {
   "settings": {
      "analysis": {
         "normalizer": {
            "drugs_keyword_normalizer": {
               "type": "custom",
               "filter": [
                  "lowercase"
               ]
            }
         }
      }
   },
   "mappings": {
      "drugs_type": {
         "properties": {
            "drug_nm": {
                 "type": "keyword",
                 "normalizer": "drugs_keyword_normalizer"
            },
            "drug_brand_nm": {
               "type":"keyword",
               "normalizer": "drugs_keyword_normalizer"
            },
            "dose_nm": {
               "type": "keyword",
               "normalizer": "drugs_keyword_normalizer"
            },
            "drug_type_nm": {
               "type":"keyword",
               "normalizer":"drugs_keyword_normalizer"
            },
            "drug_brand_id": {
               "type":"integer"
            },
            "drug_type_id": {
               "type":"integer"
            },
            "dose_id": {
               "type": "integer"
            },
            "drug_id": {
                "type": "integer"
            }
         }
      }
   }
}

# index data
bulk_data = [
  {
    "_index": "drugs_data_info",
    "_type": "drugs_type",
    "_source": {
        "drug_brand_id": row[0],
        "drug_type_id": row[1],
        "dose_id": row[2],
        "drug_brand_nm": row[3],
        "dose_nm": row[4],
        "drug_type_nm": row[5],
        "drug_id": row[6],
        "drug_nm": row[7]
    }
  }
  for row in rows
]


if es.indices.exists("drugs_data_info"):
    print("if")
    helpers.bulk(es, bulk_data)
else:
    print("else")
    es.indices.create(index="drugs_data_info", body=index_settings)
    helpers.bulk(es, bulk_data)

