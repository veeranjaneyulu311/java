{"version":3,"sources":["webpack:///./node_modules/ngx-filter-pipe/esm5/ngx-filter-pipe.js","webpack:///./node_modules/ngx-virtual-scroller/dist/virtual-scroller.d.ts.VirtualScrollerComponent.html","webpack:///./src/app/modules/digital-board/containers/display-board/display-board.component.html","webpack:///./src/app/modules/digital-board/containers/display-board/display-board.component.ts","webpack:///./src/app/modules/digital-board/containers/patients-waiting-board/patients-waiting-board.component.html","webpack:///./src/app/modules/digital-board/containers/patients-waiting-board/patients-waiting-board.component.ts","webpack:///./src/app/modules/digital-board/digitalBoard-routing.module.ts","webpack:///./src/app/modules/digital-board/digitalBoard.module.ts","webpack:///./src/app/modules/digital-board/pipes/doctor-filter.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2D;AAC3D;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iCAAiC,uFAAuF;AACxH;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,kCAAkC;AACnE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE,oCAAoC,wCAAwC;AACzG,2BAA2B,EAAE,oCAAoC,2CAA2C;AAC5G,2BAA2B,EAAE;AAC7B,gCAAgC,EAAE,UAAU,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iCAAiC,gDAAgD;AACjF;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"modules-digital-board-digitalBoard-module-ngfactory.js","sourcesContent":["import { Pipe, Injectable, NgModule } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar FilterPipe = /** @class */ (function () {\n    function FilterPipe() {\n    }\n    /**\n     * @param {?} value\n     * @param {?} key\n     * @return {?}\n     */\n    FilterPipe.isFoundOnWalking = function (value, key) {\n        var /** @type {?} */ walker = value;\n        var /** @type {?} */ found = false;\n        do {\n            if (walker.hasOwnProperty(key) || Object.getOwnPropertyDescriptor(walker, key)) {\n                found = true;\n                break;\n            }\n        } while (walker = Object.getPrototypeOf(walker));\n        return found;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    FilterPipe.isNumber = function (value) {\n        return !isNaN(parseInt(value, 10)) && isFinite(value);\n    };\n    /**\n     * Checks function's value if type is function otherwise same value\n     * @param {?} value\n     * @return {?}\n     */\n    FilterPipe.getValue = function (value) {\n        return typeof value === 'function' ? value() : value;\n    };\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    FilterPipe.prototype.filterByString = function (filter) {\n        if (filter) {\n            filter = filter.toLowerCase();\n        }\n        return function (value) { return !filter || (value ? ('' + value).toLowerCase().indexOf(filter) !== -1 : false); };\n    };\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    FilterPipe.prototype.filterByBoolean = function (filter) {\n        return function (value) { return Boolean(value) === filter; };\n    };\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    FilterPipe.prototype.filterByObject = function (filter) {\n        var _this = this;\n        return function (value) {\n            for (var /** @type {?} */ key in filter) {\n                if (key === '$or') {\n                    if (!_this.filterByOr(filter.$or)(FilterPipe.getValue(value))) {\n                        return false;\n                    }\n                    continue;\n                }\n                if (!value || !FilterPipe.isFoundOnWalking(value, key)) {\n                    return false;\n                }\n                if (!_this.isMatching(filter[key], FilterPipe.getValue(value[key]))) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    };\n    /**\n     * @param {?} filter\n     * @param {?} val\n     * @return {?}\n     */\n    FilterPipe.prototype.isMatching = function (filter, val) {\n        switch (typeof filter) {\n            case 'boolean':\n                return this.filterByBoolean(filter)(val);\n            case 'string':\n                return this.filterByString(filter)(val);\n            case 'object':\n                return this.filterByObject(filter)(val);\n        }\n        return this.filterDefault(filter)(val);\n    };\n    /**\n     * Filter value by $or\n     * @param {?} filter\n     * @return {?}\n     */\n    FilterPipe.prototype.filterByOr = function (filter) {\n        var _this = this;\n        return function (value) {\n            var /** @type {?} */ length = filter.length;\n            var /** @type {?} */ arrayComparison = function (i) { return value.indexOf(filter[i]) !== -1; };\n            var /** @type {?} */ otherComparison = function (i) { return _this.isMatching(filter[i], value); };\n            var /** @type {?} */ comparison = Array.isArray(value) ? arrayComparison : otherComparison;\n            for (var /** @type {?} */ i = 0; i < length; i++) {\n                if (comparison(i)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n    /**\n     * Default filterDefault function\n     * @param {?} filter\n     * @return {?}\n     */\n    FilterPipe.prototype.filterDefault = function (filter) {\n        return function (value) { return filter === undefined || filter == value; };\n    };\n    /**\n     * @param {?} array\n     * @param {?} filter\n     * @return {?}\n     */\n    FilterPipe.prototype.transform = function (array, filter) {\n        if (!array) {\n            return array;\n        }\n        switch (typeof filter) {\n            case 'boolean':\n                return array.filter(this.filterByBoolean(filter));\n            case 'string':\n                if (FilterPipe.isNumber(filter)) {\n                    return array.filter(this.filterDefault(filter));\n                }\n                return array.filter(this.filterByString(filter));\n            case 'object':\n                return array.filter(this.filterByObject(filter));\n            case 'function':\n                return array.filter(filter);\n        }\n        return array.filter(this.filterDefault(filter));\n    };\n    return FilterPipe;\n}());\nFilterPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filterBy',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/** @nocollapse */\nFilterPipe.ctorParameters = function () { return []; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar FilterPipeModule = /** @class */ (function () {\n    function FilterPipeModule() {\n    }\n    return FilterPipeModule;\n}());\nFilterPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [FilterPipe],\n                providers: [FilterPipe],\n                exports: [FilterPipe]\n            },] },\n];\n/** @nocollapse */\nFilterPipeModule.ctorParameters = function () { return []; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { FilterPipeModule, FilterPipe };\n//# sourceMappingURL=ngx-filter-pipe.js.map\n","\n    <div class=\"total-padding\" #invisiblePadding></div>\n    <div class=\"scrollable-content\" #content>\n      <ng-content></ng-content>\n    </div>\n  ","<div class=\"col-md-12 no-padding fixed-height\">\r\n  <ul class=\"card-container clearfix\">\r\n    <li *ngFor=\"let display of newDisplayData\">\r\n      <div class=\"clearfix card-container__card bg-white\">\r\n        <div fxLayout=\"row\">\r\n          <span class=\"card-container__doctor-image\" fxFlex=\"0 0 auto\" [ngStyle]=\"{ 'background-image': 'url(' + (display.imagePath || fallbackProfileImage) + ')' }\"></span>\r\n          <span class=\"card-container__doctor-desc\" fxLayoutAlign=\"center start\" fxLayout=\"column\">\r\n            <span class=\"txt-color-green\" fxLayoutAlign=\"center center\">ROOM NO -\r\n              <span class=\"txt-color-green number-size\" fxLayoutAlign=\"center center\" class=\"number-size\">{{display.consultationRoomNo || 'N/A'}} </span>\r\n            </span>\r\n            <h4 class=\"txt-color-blue name--ellipsis no-margins\">{{display.doctorName}}</h4>\r\n            <p class=\"name--ellipsis txt-speciality\">{{display.doctorSpeciality}}</p>\r\n          </span>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n          <span class=\"bg-red text-center p-t-10\">\r\n            <span class=\"txt-color-yellow \">Current\r\n              <h5 class=\"token-size\">{{display.currentTocken}}</h5>\r\n            </span>\r\n          </span>\r\n          <span class=\"bg-blue text-center p-t-10\">\r\n            <span class=\"txt-color-yellow\">Next\r\n              <h5 class=\"token-size\">{{display.nextTocken}}</h5>\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport { OpdApiService, UtilService } from '@core/services';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DoctorSettings } from '@app/modules/digital-board/models/doctor-settings';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { slideDownAnimation } from '@core/animations';\r\nimport { interval, throwError, Subscription, timer } from 'rxjs';\r\nimport { concatMap, map, share, first } from 'rxjs/operators';\r\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@ AutoUnsubscribe()\r\n@ Component({\r\n  selector: 'app-display-board',\r\n  templateUrl: './display-board.component.html',\r\n  styleUrls: ['./display-board.component.scss'],\r\n  animations: [slideDownAnimation]\r\n})\r\nexport class DoctorsDisplayBoardComponent implements OnInit, OnDestroy {\r\n  private sessionData: UserSession;\r\n  fetchdetails: any = [];   // fetchdetails is the api we are getting the data in a array.\r\n  displayList: any = [];   // DisplayList is new array we are inserting into this whatever data came from api.\r\n  currentIndex = 0;        // We are giving Current index zero.\r\n\r\n  readonly MAX_LENGTH = 10;\r\n  readonly SET_INTERVAL =  30000; // 30000; // We are givivng 30 sec time inteval for consecutive names changing.\r\n  readonly API_INTERVAL = 200000000;\r\n\r\n  newDisplayData: any = []; // We are inserting the shuffled values into this array.\r\n\r\n  constructor(\r\n    private toaster: ToastrService,\r\n    private opdService: OpdApiService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private translate: TranslateService\r\n  ) {\r\n    translate.use(translate.getBrowserLang() || 'en'); // Taking Default language as english.\r\n    this .sessionData = this .activatedRoute.snapshot.data.userData;\r\n  }\r\n\r\n  private apiCallSubscription: Subscription;\r\n  private slicerSubscription: Subscription;\r\n\r\n  public doctors: Array< DoctorSettings>;\r\n\r\n  ngOnInit() {\r\n    this .fetchData();\r\n  }\r\n\r\n  Payload() {  // common payload for the two api's used in a search fields those are visible when clicking the,\r\n    const payload = {    // those are visible when clicking the .\r\n      orgId: this .sessionData.orgId,\r\n      orgGrpId: this .sessionData.orgGroupId,\r\n      createdUsrId: this .sessionData.regId\r\n    };\r\n    return payload;\r\n  }\r\n\r\n  fetchData() {\r\n    const apiIntervalShared$ = timer(0, this .API_INTERVAL)\r\n      .pipe(\r\n        concatMap(() => {\r\n          return this .opdService\r\n            .fetchDetailsForDigitalBoard< Array< any>>(this .Payload())\r\n            .pipe(map((response) => {\r\n              if  (response.responseCode === 'E200') {\r\n                return response.data.map((val) => {\r\n                  const copiedObject = Object.assign({}, val);\r\n                  const specialties = copiedObject.doctorSpeciality.split(','); // split is for splitting the string\r\n                  copiedObject.doctorSpeciality = specialties.slice(0, 2).join(', ');\r\n                  /**\r\n                   * @param currentTocken\r\n                   * @param nextTocken\r\n                   *  This is for adding 0(zero) before the numerics upto 9 in token for better user experience.\r\n                   */\r\n                  if (copiedObject.nextTocken) {\r\n                    copiedObject.nextTocken = copiedObject.nextTocken.toString().padStart(2, '0');\r\n                  }\r\n                  if (copiedObject.currentTocken) {\r\n                    copiedObject.currentTocken = copiedObject.currentTocken.toString().padStart(2, '0');\r\n                  }\r\n                  return copiedObject;\r\n                });\r\n              } else  {\r\n                return new Error(response.responseCode);\r\n              }\r\n            }));\r\n        }),\r\n        share()\r\n      );\r\n\r\n    this .apiCallSubscription = apiIntervalShared$\r\n      .subscribe((val) => {\r\n        this .displayList = val;\r\n      });\r\n\r\n    apiIntervalShared$.pipe(first())\r\n      .subscribe(() => {\r\n        this .dataSlicer();\r\n      }, () => {\r\n        this .toaster.error('This operation is unsuccessful');\r\n      });\r\n  }\r\n\r\n  dataSlicer() {\r\n    this .slicerSubscription = timer(0, this .SET_INTERVAL)\r\n      .subscribe(() => {\r\n        this .scrolleDoctorsList();\r\n      }, () => {\r\n        this .toaster.error('This operation is unsuccessful');\r\n      });\r\n  }\r\n\r\n  scrolleDoctorsList() {  //\r\n    this .newDisplayData = this .displayList.slice(this .currentIndex, this .currentIndex + this .MAX_LENGTH);\r\n      this .currentIndex += this .MAX_LENGTH; // Assigning the max length to current length.\r\n      if (this .currentIndex >= this .displayList.length - 1) {\r\n        this .currentIndex = 0; // we are making current index zero when display list value becomes five each time.\r\n      }\r\n  }\r\n  get fallbackProfileImage() {  // calling fallbackProfileImage function to display the doctor image.\r\n    return 'https://s3.ap-south-1.amazonaws.com/dru.assets/images/app/icons/user-male.png';\r\n  }\r\n  /**\r\n   *@param ngondestroy is for destroying the component and for unsubscribe the observables and,\r\n   * to avoid the memory leaks.\r\n   */\r\n  ngOnDestroy() {}\r\n}\r\n\r\n","<div class=\"col-md-12 common-search-bar m-b-20\">\r\n  <div class=\"col-md-6 page-tittle-text\">\r\n    <h1 class=\"text-uppercase\">patient waiting list token display board settings</h1>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"box-outer-padding row m-0 p-l-10 p-r-10\">\r\n  <div class=\"box-panel-content bg-white border-all-side col-sm-12\">\r\n\r\n    <div class=\"col-md-12 no-padding\">\r\n      <div class=\"col-md-12 pb-3 box-section-title\">\r\n        <h3>PRACTITIONER LIST</h3>\r\n        <span class=\"pull-right\">\r\n          <button type=\"button\" (click)=\"selectFilter()\" class=\"cust-filter-toggler-btn\">\r\n            <i class=\"fa fa-filter\"></i>\r\n          </button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\" border-bottom bg-white\" *ngIf=\"showFilters\" @slideDown>\r\n      <div class=\"col d-flex pb-2 pl-2 m-0\">\r\n        <div class=\"col-md-4 col-sm-4 col-xs-12\">\r\n          <label>Doctor </label>\r\n          <ng-select [items]=\"doctorsList\" class=\"custom\" bindLabel=\"doctorName\" bindValue=\"empId\" (add)=\"onDoctorAdd()\"\r\n            [multiple]=\"true\" (remove)=\"onFilterItemRemoved()\" (clear)=\"onFilterItemRemoved()\" placeholder=\"Search For Doctors\"\r\n            [(ngModel)]=\"item.doctorId.$or\">\r\n          </ng-select>\r\n        </div>\r\n        <div class=\"col-md-4 col-sm-4 col-xs-12\">\r\n          <label>Specialty</label>\r\n          <ng-select [items]=\"doctorsSpecialityList\" class=\"custom\" (add)=\"onAddSpecialty()\" bindLabel=\"specialityName\"\r\n            bindValue=\"specialityName\" [multiple]=\"true\" (clear)=\"onFilterItemRemoved()\" (remove)=\"onFilterItemRemoved()\"\r\n            placeholder=\"Search For speciality\" [(ngModel)]=\"item.specialityId.$or\">\r\n          </ng-select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12 no-padding fixed-height bg-white\">\r\n\r\n      <div class=\"card-container clearfix\" *ngIf=\"doctors?.length\">\r\n        <virtual-scroller #scroll [items]=\"doctors | doctorFilter:item\">\r\n          <div class=\"clearfix card-container__card\" *ngFor=\"let doctor of scroll.viewPortItems\">\r\n            <div fxLayout=\"row\">\r\n              <div class=\"card-container__doctor-image m-r-xs\" [ngStyle]=\"{ 'background-image': 'url(' + (doctor.imagePath || fallbackProfileImage) + ')' }\"\r\n                fxFlex=\"0 0 auto\"></div>\r\n              <div fxLayoutAlign=\"center start\" fxFlex=\"0 0 calc(100% - 55px)\" fxLayout=\"column\">\r\n                <p class=\"txt-color-blue name--ellipsis m-b-0\" [title]=\"doctor.doctorNm\">{{doctor.doctorNm}}</p>\r\n                <span class=\"name--ellipsis\">{{doctor.speciality}}</span>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <span class=\"txt-color-blue\">Today Appointments -\r\n                <span class=\"txt-color-green no-size\"> {{doctor.todayAppointments}} </span>\r\n              </span>\r\n              <h6 class=\"txt-color-blue\">ROOM NO.</h6>\r\n              <input [(ngModel)]=\"doctor.consultationRoomNo\" type=\"text\" class=\"txt-field-size\" />\r\n            </div>\r\n          </div>\r\n        </virtual-scroller>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"col-sm-12 p-l-r-5 m-t-b-15 form-button-group\">\r\n  <ul class=\"mt-2\">\r\n    <li>\r\n      <button type=\"submit\" class=\"btn-app btn-save\" form=\"resultEntryForm\" (click)=\"saveDoctorSettings()\">\r\n        <i class=\"fas fa-save fa-btn-icon margin-right-5\" aria-hidden=\"true\"></i> Save</button>\r\n    </li>\r\n\r\n    <li>\r\n      <button type=\"button\" class=\"btn-app btn-clear\" (click)=\"clearFunction()\">\r\n        <i class=\"mdi mdi-reload fa-btn-icon margin-right-5\" aria-hidden=\"true\"></i>clear </button>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OpdApiService, LoginApiService, UtilService } from '@core/services';\r\nimport { DoctorSettings } from '@app/modules/digital-board/models/doctor-settings';\r\nimport { Observable, forkJoin, throwError } from 'rxjs';\r\nimport { map, finalize } from 'rxjs/operators';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { slideDownAnimation } from '@core/animations';\r\nimport { CLONEDEEP } from '@core/services';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@ Component({\r\n  selector: 'app-patients-waiting-board',\r\n  templateUrl: './patients-waiting-board.component.html',\r\n  styleUrls: ['./patients-waiting-board.component.scss'],\r\n  animations: [slideDownAnimation]\r\n})\r\nexport class PatientsWaitingBoardComponent implements OnInit {\r\n  private sessionData: UserSession;\r\n  fetchdetails: any = [];\r\n  doctorsSpecialityList: any = [];\r\n  doctorsList: any = [];\r\n  item: any = {\r\n    doctorId: {},\r\n    specialityId: {}\r\n  };\r\n\r\n  showFilters: Boolean = false;  // showfilters is for showing and hiding the search elements.\r\n\r\n  constructor(\r\n    private toaster: ToastrService,\r\n    private opdService: OpdApiService,\r\n    private utilService: UtilService,\r\n    @ Inject(CLONEDEEP) private cloner,\r\n    private loginApiService: LoginApiService,\r\n    private translate: TranslateService,\r\n    activatedRoute: ActivatedRoute\r\n  ) {\r\n    translate.use(translate.getBrowserLang() || 'en'); // translate is for converting the languge into required lang,\r\n    this .sessionData = activatedRoute.snapshot.data.userData;\r\n  }\r\n\r\n  public doctors: Array< DoctorSettings>;\r\n\r\n  ngOnInit() {    // oninit is for getting the data when browser is loading.\r\n    this .fetchDoctorSettings();\r\n    this .getEmpListBasedOnDesignation();\r\n    this .fetchListOfSpecialities();\r\n  }\r\n\r\n  getCommonPayload() { // Here We are taking common payload for api's.\r\n    const payload = {\r\n      orgId: this .sessionData.orgId,\r\n      orgGrpId: this .sessionData.orgGroupId,\r\n      createdUsrId: this .sessionData.regId\r\n    };\r\n    return payload;\r\n  }\r\n\r\n  onAddSpecialty() {\r\n    this .item = this .cloner(this .item);\r\n  }\r\n\r\n  onDoctorAdd() {\r\n    this .item = this .cloner(this .item);\r\n  }\r\n\r\n  onFilterItemRemoved() {\r\n    const itemclone = this .cloner(this .item);\r\n    if (itemclone.doctorId.$or && !itemclone.doctorId.$or.length) {\r\n      delete itemclone.doctorId.$or;\r\n    }\r\n    if (itemclone.specialityId.$or && !itemclone.specialityId.$or.length) {\r\n      delete itemclone.specialityId.$or;\r\n    }\r\n    this .item = itemclone;\r\n  }\r\n\r\n  getCommonPayload2() {  // common payload for the two api's used in a search fields those are visible when clicking the,\r\n    const payload = {    // those are visible when clicking the .\r\n      orgId: this .sessionData.orgId,\r\n      orgGroupId: this .sessionData.orgGroupId,\r\n      authenticatedUserId: this .sessionData.regId,\r\n      regId: this .sessionData.regId,\r\n      designation: 'Doctor',\r\n      orgGrpId: this .sessionData.orgGroupId,\r\n    };\r\n    return payload;\r\n  }\r\n\r\n  private makeHiddenProperty(obj: Object, property: string) {\r\n    Object.defineProperty(obj, property, {\r\n      enumerable: false,\r\n      writable: true,        // writable true is to provide the edit option for room no,\r\n      configurable: false    // And returning that value to the database for storing.\r\n    });\r\n  }\r\n\r\n  saveDoctorSettings() {\r\n    // this.filterFunction();\r\n    this .insertDoctorSettings();\r\n    // this.updateDoctorSettings();s\r\n  }\r\n\r\n  /**\r\n   * In this fetchdoctorSettings function we are calling an api\r\n   * and in that api we are recieving the avoilable doctors list while loading the browser.\r\n   */\r\n  fetchDoctorSettings() {\r\n    this .opdService\r\n      .fetchDoctorSettings< Array< DoctorSettings>>(this .getCommonPayload())\r\n      .subscribe(response => {\r\n        if (response.responseCode === 'E200') {\r\n          this .doctors = response.data;\r\n          this .doctors.forEach((val, index) => {\r\n            this .makeHiddenProperty(val, 'consultationRoomNo$$');\r\n            this .makeHiddenProperty(val, '_id');\r\n            if (\r\n              val.consultationRoomNo === undefined ||\r\n              val.consultationRoomNo === null\r\n            ) {\r\n              val.consultationRoomNo = '';\r\n            }\r\n            val.consultationRoomNo$$ = val.consultationRoomNo;\r\n            val._id = `${this .utilService.generateUniqueId()}-${index}`;\r\n          });\r\n        } else if (response.responseCode === 'E400') {\r\n          this .toaster.error('failed', 'The opertion is unsuccessful');\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * In insert api we are replacing the null with new value\r\n   */\r\n  insertDoctorSettings() {\r\n    let payloadWithConsulationRoomId$: Observable< any>;\r\n    let payloadWithoutConsulationRoomId$: Observable< any>;\r\n\r\n    const obs$ = [];\r\n\r\n    const payload = this .filterFunction();\r\n    const apiMapper = val =>\r\n      val.responseCode === 'E400' ? throwError(val.responseMessage) : val;\r\n\r\n    const payloadWithConsulationRoomId = payload.filter(\r\n      val => val.consultationRoomId\r\n    );\r\n    const payloadWithoutConsulationRoomId = payload.filter(\r\n      val => !val.consultationRoomId\r\n    );\r\n\r\n    if (payloadWithoutConsulationRoomId.length) {\r\n      payloadWithoutConsulationRoomId$ = this .opdService\r\n        .insertDoctorSettings< Array< DoctorSettings>>(\r\n          payloadWithoutConsulationRoomId\r\n        )\r\n        .pipe(apiMapper);\r\n      obs$.push(payloadWithoutConsulationRoomId$);\r\n    }\r\n\r\n    if (payloadWithConsulationRoomId.length) {\r\n      payloadWithConsulationRoomId$ = this .opdService\r\n        .updateDoctorSettings< Array< DoctorSettings>>(\r\n          payloadWithConsulationRoomId\r\n        )\r\n        .pipe(apiMapper);\r\n      obs$.push(payloadWithConsulationRoomId$);\r\n    }\r\n\r\n    forkJoin(obs$).subscribe(\r\n      () => {\r\n        payload.forEach(val => {\r\n          const foundDoctor = this .doctors.find(\r\n            doctor => val._id === doctor._id\r\n          );\r\n          foundDoctor.consultationRoomNo$$ = val.consultationRoomNo;\r\n        });\r\n      },\r\n      () => {\r\n        this .toaster.error('failed', 'The opertion is unsuccessful');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * the filter function is used to compare the room no's of a doctor, defaultly we are giving 0 as doctor room no\r\n   * if no is not equal to 0 it will update that room no and save it to the database\r\n   * @returns {Array< DoctorSettings>}\r\n   */\r\n  filterFunction() {\r\n    return this .doctors.filter(\r\n      doctor => doctor.consultationRoomNo$$ !== doctor.consultationRoomNo\r\n    );\r\n  }\r\n\r\n  clearFunction() {\r\n    this .filterFunction().forEach(data => {\r\n      const foundDoctor = this .doctors.find(doctor => data._id === doctor._id);\r\n      foundDoctor.consultationRoomNo = data.consultationRoomNo$$;\r\n    });\r\n  }\r\n\r\n  selectFilter() {\r\n    this .showFilters = !this .showFilters;\r\n  }\r\n\r\n  /**\r\n   * for dropdown.\r\n   */\r\n  getEmpListBasedOnDesignation() {  // To search the list of doctors with the name of a doctor.\r\n    this .opdService\r\n      .getEmpListBasedOnDesignation< Array< DoctorSettings>>(\r\n        this .getCommonPayload2()\r\n\r\n      )\r\n      .subscribe(Response => {\r\n        if (Response.responseCode === 'E200') {\r\n          this .doctorsList = Response.data;\r\n        } else if (Response.responseCode === 'E400') {\r\n          this .toaster.error('failed', 'this operation is unsuccessful ');\r\n        }\r\n      });\r\n  }\r\n\r\n  fetchListOfSpecialities() { // To search the docotrs with specific speciality in a input field.\r\n    this .loginApiService\r\n      .fetchListOfSpecialities< Array< DoctorSettings>>(this .getCommonPayload2())\r\n      .subscribe(Response => {\r\n        if (Response.responseCode === 'E200') {\r\n          this .doctorsSpecialityList = Response.data;\r\n        } else if (Response.responseCode === 'E400') {\r\n          this .toaster.error('failed', 'this operation is unsuccessful ');\r\n        }\r\n      });\r\n  }\r\n\r\n  get fallbackProfileImage() {  // calling fallbackProfileImage function to display the doctor image.\r\n    return 'https://s3.ap-south-1.amazonaws.com/dru.assets/images/app/icons/user-male.png';\r\n  }\r\n}\r\n","import { Routes, RouterModule, Router } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  PatientsWaitingBoardComponent\r\n} from '@app/modules/digital-board/containers/patients-waiting-board/patients-waiting-board.component';\r\nimport { DoctorsDisplayBoardComponent } from './containers/display-board/display-board.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'patientsWaitingList',\r\n    data: {\r\n      title: 'Doctor Settings Screen',\r\n    },\r\n    component: PatientsWaitingBoardComponent\r\n  },\r\n  { path: '', redirectTo: 'patientsWaitingList', pathMatch: 'prefix' },\r\n  {\r\n    path: 'display-board',\r\n    data: {\r\n      title: 'Display Board'\r\n    },\r\n    component: DoctorsDisplayBoardComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  declarations: []\r\n})\r\nexport class DigitalBoardRouterModule {}\r\n","import {\r\n  NgModule\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n// import { CommentsDialogComponent } from '@shared/components/comments-dialog/comments-dialog.component';\r\nimport { PatientsWaitingBoardComponent } from './containers/patients-waiting-board/patients-waiting-board.component';\r\nimport { DoctorsDisplayBoardComponent } from './containers/display-board/display-board.component';\r\nimport { DigitalBoardRouterModule } from './digitalBoard-routing.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FilterPipeModule } from 'ngx-filter-pipe';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { DoctorFilterPipe } from './pipes/doctor-filter.pipe';\r\nimport { VirtualScrollerModule } from 'ngx-virtual-scroller';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PatientsWaitingBoardComponent,\r\n    DoctorsDisplayBoardComponent,\r\n    DoctorFilterPipe\r\n  ],\r\n  imports: [\r\n    VirtualScrollerModule,\r\n    NgSelectModule,\r\n    FilterPipeModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    DigitalBoardRouterModule,\r\n    TranslateModule\r\n  ],\r\n  providers: []\r\n})\r\nexport class DigitalBoardModule {}\r\n","import { PipeTransform, Pipe, Inject } from \"@angular/core\";\r\n\r\nimport { ARRAY_INTERSECTOR } from \"@core/services\";\r\n\r\n@Pipe({\r\n  name: \"doctorFilter\"\r\n})\r\nexport class DoctorFilterPipe implements PipeTransform {\r\n  constructor(@Inject(ARRAY_INTERSECTOR) private arrayIntersector) {}\r\n\r\n  transform(doctors: any, searchItem) {\r\n    return doctors.filter(doctor => {\r\n      let passed = true;\r\n\r\n      if (searchItem.specialityId.$or && doctor.specialityId) {\r\n        const doctorSpecialties = doctor.speciality.split(\",\");\r\n        const intersection = this.arrayIntersector(\r\n          searchItem.specialityId.$or,\r\n          doctorSpecialties\r\n        );\r\n        passed = !!intersection.length;\r\n      }\r\n\r\n      if (searchItem.doctorId.$or && doctor.doctorId) {\r\n        passed = searchItem.doctorId.$or.includes(doctor.doctorId);\r\n      }\r\n\r\n      return passed;\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}