UserId: veeranjaneyulu.n-at-528913883676
Pasw : HD1gaGj52/HoBy3X+00fofA+B6VGgBjo2UbT7djZGFU=

"accessKeyId":"ASIAWHHNLI2UDBXZMUUA"







regex:
=====
https://www.ntu.edu.sg/home/ehchua/programming/howto/Regexe.html

https://192.168.1.123:7071/share

PF Acc No:101374013214
https://docs.oracle.com/cd/E19226-01/820-7627/bncbn/index.html[authentication types]

postgres::::::    C:\Program Files (x86)\PostgreSQL\10\data

rocketchat:::::::::::Veer@311

EmployeeID (DRUHYD01067)mp6z

ecs:
====
$(aws ecr get-login --no-include-email --region ap-southeast-2)
docker build -t aus-prod-nginx .
docker tag aus-prod-nginx:latest 329338480233.dkr.ecr.ap-southeast-2.amazonaws.com/aus-prod-nginx:latest
docker push 329338480233.dkr.ecr.ap-southeast-2.amazonaws.com/aus-prod-nginx:latest


Environment Variables
---------------------
IS_TIME_ZONE_REQUIRED
SEND_PROMO_SMS_URL =http://${GATEWAY_SERVER_IP:localhost}:8055/gateway/sendToPromoSms [for Restcall from appcore to gateway jar(Sending Promotional SMS)]



payslip:
-------
http://drucare.evaluecurve.com/General/CheckLogin[DRUHYD01067]AXJPN1273C

DRUHYD01066


swagger: http://192.168.1.101:8049/reports/swagger-ui.html#!/mis45controller/fetchOrgWiseOPDCollectionsUsingPOST
conf:    49.207.6.227:8888/dev/ipd-application-dev.properties

epsilondev
Dru@Epsilon@111%


---------------------------AWS CONSOLE----------
drucare-in-qa
veeranjaneyulu.n
Dru@Qa@Veer123
----------------
Veer311*




angular-6:

node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build -c development --aot --base-href ./
------
node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build -c development  {jenkins}
unzip dist.zip
zip -r dist.zip dist
------
ng build -c development --aot --base-href ./






http://192.168.1.1:8090[internet access]-----------[veeru_n]-------------[v]
https://mail.dru.care/[zimbra]---------------------[veeranjaneyulu]------[a]
aws console login[drucare-in-qa]-------------------[veeranjaneyulu.n]----[d]
aws console login[drucare]-------------------------[veeranjaneyulu.n]----[v]
18.208.105.25:15951[qa]----------------------------[drucareqa]-----------[d]----[/home/drucareqa/deploy(jenkins)]--[/opt/app]
192.168.1.101:2233[dev]----------------------------[alphadev]------------[d]
13.232.239.2:8080[jenkins]-------------------------[devops]--------------[d]

my operator:veer/Drucare






http://192.168.1.109:5601/app/kibana#/home?_g=()
49.207.6.227:5601[apm-kibana]
49.207.6.227:8080[dev website]
https://appqa.nv01.dru.care/#/dru/home[qa website]
18.211.1.121:8761[spring eureka]
192.168.1.109:9300 [elastic search for java client]
192.168.1.109:9200 [elastic search for http client]
-Dspring.datasource.url=jdbc:postgresql://$DB_IP:$DB_PORT/drucare_dev[192.168.1.111/5432]

Wi-Fi>>Druc@re99
Dru@143$care

forever start which verdaccio

templates 
from dev---/opt/app/templates
to archserver---/opt/app/templates
        
bation:::18.208.105.25
1a:::10.0.0.82
1b:::10.0.1.140
1c:::10.0.2.120

https://docs.djangoproject.com/en/1.11/intro/tutorial01/

python-repo:
------------
https://git-codecommit.ap-south-1.amazonaws.com/v1/repos/dru-app-mis_python
https://git-codecommit.ap-south-1.amazonaws.com/v1/repos/dru-app-core_AI_ML


config repo:
-----------
https://git-codecommit.ap-south-1.amazonaws.com/v1/repos/dru-app-core-config
https://git-codecommit.ap-south-1.amazonaws.com/v1/repos/dru-app-core-prod-config

Zuul:
----
https://git-codecommit.ap-south-1.amazonaws.com/v1/repos/dru-arch-in


ui release:
===========
https://stackoverflow.com/questions/50907736/refreshing-the-page-results-in-404-error-angular-6
DEV:
===
old::Dru@Alpha@123%
new::Alpha@Dru@111%
/var/lib/tomcat/webapps/app------------------------[1.6],
/var/lib/tomcat/webapps/ROOT-----------------------[website],
/var/lib/tomcat/webapps/new------------------------[6]

7070:
====
/opt/app/ui/commonreg/app
/opt/app/ui/commonreg/new
/opt/app/ui/commonreg/ROOT

warehouse:
==========
/opt/app/ui/warehouse/ROOT/
/opt/app/ui/warehouse/app/
/opt/app/ui/warehouse/new/

Caused by: org.postgresql.util.PSQLException: ERROR: column "website_address" of relation "license_info_trans" does not exist
QA:
==
/opt/app/ui/new-------------------------Angular6
/opt/app/ui/app-----------1.6
/opt/app/ui/ROOT----------website

Bation@Qa@1234%
Dru@User@123%
3025897539
[0 0 1 * * /usr/bin/python /home/drucareqa/logszip/logszipping.py]
[0 0 1 * * /usr/bin/python /home/drucaredev/logszipping.py]
nohup java  -jar Zuul-EdgeServer-0.0.1.jar   /tmp 2>> /dev/null >> /dev/null &
netstat -nlp | grep 9763
netstat -lnt
systemctl status activemq
nohup bin/activemq > /tmp/smlog 2>&1 &
netstat -antu
8040-8094
firewall-cmd --permanent --add-port=8040-8094/tcp
ss -tulpn
lsof -i -Pn | grep LISTEN
https://www.digitalocean.com/community/tutorials/additional-recommended-steps-for-new-centos-7-servers
mail IP:
========
http://192.168.2.72:8459/redmine/issues/1
http://192.168.1.123:3000 [rocket] 

192.168.1.101		[dev][Dev@Alpha@123%][uiteam/Dru@Ui@123#/Your new secret key is: 3XVVFAI6D2F2YQYQ3C62M7NGPI/] Uiteam@Dev@111%
192.168.1.111:5869		[dev db]
192.168.1.131		[qa db][dbuser/Dru@999]
192.168.1.107:8080	[jenkin][35798][devops/Dru@Dev0ps@123]
192.168.1.106		[qa][39485][drucareqa/Dru@User@123%][jenkins/Dru@DJen@123] 
192.168.1.108		[qa arch][37286][drucarearchqa/Qa@Arch@123%]
192.168.1.123		[rocket][35948][devops/Dru@Dev0ps@111]

Dru@Devops@111#

metricbeat:
192.168.1.106[qa.dru.care]  ----metricbeat-6.6.1-2019.02.26
192.168.1.107[jenkin]       ----metricbeat-6.6.1-2019.02.26
192.168.1.108[arch]	    ----metricbeat-6.6.1-2019.02.26	
192.168.1.123[rocket]



Dru@Admin@111%%


sudo chkconfig --add activemq
systemctl start activemq
systemctl status activemq

Dru@Dev@123%
Dru@Dev@111

18.204.85.49:3388 old-qa-db
activemq:192.168.1.108:8161
61616-active

 vi /var/lib/jenkins/secrets/initialAdminPassword/18a1af35f4b0460e9cb23c3ca6be85b9

find / -name activemq.jar
/var/activemq/bin/activemq.jar
 
 bash command not found:
 
 export
 export PATH=/usr/local/bin:/usr/bin:$PATH
 vi /etc/environment
 remove all and save

OWF430122078

sudo find . -name "*.pyc" -exec rm -f {} \;





ssh -p 65235 admin@10.0.0.89
Dru@Dev0ps@123%

npm i npm


users:(("java",pid=10548,fd=130))
[root@localhost init.d]# firewall-cmd --permanent --add-port=8888/tcp
success
[root@localhost init.d]# firewall-cmd --permanent --add-port=8761/tcp
success
[root@localhost init.d]# firewall-cmd --permanent --add-port=8161/tcp
success
[root@localhost init.d]# firewall-cmd --permanent --add-port=8888/tcp
Warning: ALREADY_ENABLED: 8888:tcp
success
[root@localhost init.d]# firewall-cmd --permanent --add-port=1345/tcp
success
[root@localhost init.d]# firewall-cmd --permanent --add-port=8765/tcp
success
[root@localhost init.d]# firewall-cmd --permanent --add-port=8052/tcp
succes


http://cloud.spring.io/spring-cloud-static/Finchley.RELEASE/single/spring-cloud.html#ignore-network-interfaces

qa:
[root@qa init.d]# firewall-cmd --permanent --add-port=8040-8094/tcp

git:
To push the current branch and set the remote as upstream, use
git push --set-upstream origin new

postgres:
psql: could not connect to server: No route to host
    Is the server running on host "ec*-**-***-***-**.eu-west-1.compute.amazonaws.com" (**.***.***.**) and accepting
    TCP/IP connections on port 5432?

net stop [service name]


docker:
docker build
docker run -p 80:80 --name opd <image ID>
docker rmi <imageid> -f

docker:
opd,inventory,pharmacy  ipd,lab,website


https://www.metaltoad.com/blog/angular-api-calls-django-authentication-jwt

C:\Users\Drucare Pvt Ltd\AppData\Local\Programs\Python\Python37\lib\site-packages\


Daily===========[dev server status,qa lambda state]

Weekly:
======
1.revoking users permissions given on repositories and code access
2.dev and qa logs data
3.backups
4.ami's management


permissions on repo's:
======================
naresh dru.ui.core repo
chaitanya communication

https://www.centos.org/forums/viewtopic.php?t=32428[/etc/init.d is a symlink to /etc/rc.d/init.d]


errors to be handle:
====================
error reading /var/lib/jenkins/.m2/repository/org/dcm4che/dcm4che-core/5.13.0/dcm4che-core-5.13.0.jar; error in opening zip file




alpha_247  [Alpha@247] - admin
devops_doc [Doctor@123] - doctor
devops_rec [Devops@123] -receptionist


deleting a service:[DELETE method]
http://192.168.1.101:8761/eureka/apps/emr-optho-siri2/dru.test01:emr-optho-siri2:8042
http://49.207.6.227:8888/dev/ipd-application-dev.properties

downing a service:[PUT method]
http://49.207.6.227:8761/eureka/apps/EMR-SERVICE-VEER/dru.test01:emr-service-veer:8058/status?value=DOWN
http://192.168.1.101:8761/eureka/apps/patient-portal-service-s/dru.test01:patient-portal-service-s:8053/status?value=DOWN

add 8056 in activemq.xml  place of 6666
communication


hostname: ${IP:localhost}
ip-address: ${IP:localhost}
instance-id: ${eureka.instance.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}

https://softwareengineering.stackexchange.com/questions/14335/biggest-mistake-youve-ever-made

zuul=nohup java -Dspring.datasource.url=jdbc:postgresql://52.66.186.206:5432/drucare_qa -Dserver.ssl.key-store=/opt/app/certs/keystore.p12 -Dserver.ssl.key-store-password=Drucare@123 -Dserver.



.keyStoreType=PKCS12 -Dserver.ssl.keyAlias=dev-qa -jar $PATH_TO_JAR /tmp 2>> /dev/null >> /dev/null &  echo $! > $PID_PATH_NAME


QA Release:
-----------
ui:
--
cd /home/drucareqa/qa/app
python ui.py qa-app
python ui.py qa-new

container:
docker build -t lab-qa .
docker run -d -p 8065:8065 --name=lab-qa-OCT17 -v /logs:/logs lab-qa

image pushing:
scp -P 35798 lab-0.0.1.jar devops@192.168.1.107:/home/devops
 

production jar release:
----------------------
STEP-1:Dru@Prod@123
=======
1.upload new jars into below location of bastion server.
    scp -P 15951 report-module-0.0.1.jar admin@13.234.78.109:/home/admin/deploy/
2.login to bastion
3.check wheather jar moved or not
    cd /home/admin/deploy/
3.now, cd /etc/init.d
4.execute below command.
      python move_java.py reports  --[jar will be copied to /home/admin/deploy of java server]
      python move_ui.py app        --[dist moved to qa server]


jars::::10.0.0.188 
ui::::::10.0.4.23 
STEP-2:
=======
5.login to java server [ ssh -p 65235 username@IP]
6.verify wheather new jar is present in /home/admin/deploy/
7.cd /etc/inti.d
8.run release script of java. 
	python run_jar.py reports



STEP:3
------
1.jenkins----cd disk1/dockers/in-prod/Ipd/
2.docker build -t in-prod-inventory .
3.docker tag in-prod-inventory:latest 329338480233.dkr.ecr.ap-south-1.amazonaws.com/in-prod-inventory:latest
4.docker push 329338480233.dkr.ecr.ap-south-1.amazonaws.com/in-prod-inventory:latest

docker build -t in-prod-ipd .
docker tag in-prod-ipd:latest 329338480233.dkr.ecr.ap-south-1.amazonaws.com/in-prod-ipd:latest
docker push 329338480233.dkr.ecr.ap-south-1.amazonaws.com/in-prod-ipd:latest









ui:
new:
backup:  cp -R /opt/app/ui/new /opt/app/uibackup/2019-JUN-12/
delete:  rm -rf /opt/app/ui/new/*
release: cp -R /home/admin/deploy/new/drucare/* /opt/app/ui/new/


microui:
new:
backup:  cp -R /opt/app/ui/microui /opt/app/uibackup/2019-Aug-26/
delete:  rm -rf /opt/app/ui/microui/*
release: cp -R /home/admin/deploy/microui/* /opt/app/ui/microui/




Dru@Prod@123
ui  : ssh -p 15951 druuiuser@10.0.4.23[druuiuser Dru@U1user@123]      
jar : ssh -p 65235  drooser@10.0.0.188[drooser Dru@Dr00ser@123]
arch: ssh -p 45349 druuserarch@10.0.0.208[druuserarch Dru@A6ch@123]         
elk: ssh -p 15951 admin@10.0.0.60[admin Dru@Prod@123]

prod file upload issue:
/tmp/tomcat.4024784983140232598.8765/work/Tomcat/localhost/


13.233.227.125:4545

sms-credits:
------------
sysadmin@dru.care
Druc@re@123


QA containers:
--------------
pharmacy
lab
patient portal
ipd




SSL:
===
https://blogs.oracle.com/blogbypuneeth/steps-to-create-a-self-signed-certificate-using-openssl
https://www.westphahl.net/blog/2012/01/03/setting-up-https-with-nginx-and-startssl/

1.openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365

passphrase:drucare

2.openssl rsa -in key.pem -out privkey.pem
3.chmod 400 privkey.pem
4.vi /etc/nginx/nginx.conf
   ssl_certificate "/opt/app/certs/cert.pem";
   ssl_certificate_key "/opt/app/certs/privkey.pem";

java:
----
openssl pkcs12 -export -in cert.pem -inkey key.pem -out qakeystore.p12 -name "dev-qa"

alias:dev-qa
password:Drucare@123

        ssl_certificate "/opt/app/certs/fullchain.pem";
        ssl_certificate_key "/opt/app/certs/privkey.pem";
 

IP Address=192.168.1.106
IP Address=49.207.6.227

						Final SSL certificate generarted
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

openssl req -x509 -nodes -days 730 -newkey rsa:2048 \
 -keyout cert.key -out cert.pem -config req.cnf -sha256

or 

1.openssl req -x509 -sha256 -nodes -days 3650 -newkey rsa:2048 -keyout key.pem -out cert.pem  -config req.cnf

req.cnf:
-------
[req]
default_bits = 2048
default_keyfile = oats.key
encrypt_key = no
utf8 = yes
distinguished_name = req_distinguished_name
x509_extensions = v3_req
prompt = no

[req_distinguished_name]
C = in
ST = ap
L = hyderabad
O  = drucare
OU = drucare
CN = 192.168.1.106

[v3_req]
keyUsage = critical, digitalSignature, keyAgreement
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

[alt_names]
IP.1 = 192.168.1.106
IP.2 = 49.207.6.227

new:/opt/app/qa_new_cert/qakeystore.p12      alias:dev-qa  p
assword:Drucare@123
old:/opt/app/certs/localqakeystore.p12		tomcat		venkat.t


2.for java:
-----------
openssl pkcs12 -export -in cert.pem -inkey key.pem -out qakeystore.p12 -name "dev-qa"

alias:dev-qa
password:Drucare@123

        ssl_certificate "/opt/app/certs/fullchain.pem";
        ssl_certificate_key "/opt/app/certs/privkey.pem";

finding tomcat version:[https://watilearnd2day.wordpress.com/2015/07/06/how-to-check-apache-tomcat-version-on-rhelcentos/]
 java -cp lib/catalina.jar org.apache.catalina.util.ServerInfo

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------


keytool -genkey -alias tomcat -keyalg RSA
keytool -importkeystore -srckeystore /root/.keystore -destkeystore /root/.keystore -deststoretype pkcs12

alfresco

1. vi conf/server.xml
2. vi /usr/local/tomcat/shared/classes/alfresco-global.properties
<Connector port="7070"
        protocol="org.apache.coyote.http11.Http11Nio2Protocol"
        sslImplementationName="org.apache.tomcat.util.net.jsse.JSSEImplementation"
        maxThreads="150"
        SSLEnabled="true">
    <SSLHostConfig certificateVerification="none" >
    <Certificate certificateKeystoreFile="<CATALINA_BASE>/alf_data/qakeystore.p12"
        certificateKeystorePassword="alfresco"
        certificateKeystoreType="PKCS12" />
    </SSLHostConfig>
</Connector>



share:
vi /usr/local/tomcat/shared/classes/alfresco/web-extension/share-config-custom.xml
https://community.alfresco.com/thread/200966-change-alfresco-to-use-ssl-and-share-stops-authenticating


dockercompose copy files to container:
docker cp src/. mycontainer:/target

https://docs.alfresco.com/6.0/tasks/configure-ssl-test.html
https://documentation.commvault.com/commvault/v11/article?p=50506.htm
https://tomcat.apache.org/tomcat-8.5-doc/ssl-howto.html#Configuration



PUT .kibana/_settings
{
"index": {
"blocks": {
"read_only_allow_delete": "false"
}
}
}

prod:
-----
3939 imaging-0.0.1.jar
25763 login-reg-0.0.1.jar
3847 website-services-0.0.1.jar
23560 Jps
4010 chat-0.0.1.jar
3821 appointment.jar
3982 setting-0.0.1.jar
3891 erx.jar
13080 opd-0.0.1.jar
26201 emr-0.0.1.jar
3963 gateway-0.0.1.jar
4031 quality.jar
22527 report-module-0.0.1.jar


Dru@Alpha@111%


git:
---
Create a new branch:
git checkout -b feature_branch_name
Edit, add and commit your files.
Push your branch to the remote repository:
git push -u origin feature_branch_name


SELECT long_common_nm, loinc_system, investigation_department, time_aspect, is_panel, order_obs, test_rank FROM lab.lab_test_ref where isactive is true and is_panel is False and order_obs = 'Both' and loinc_system='Bld' and time_aspect='Pt' and (investigation_department ='HEMATOLOGY' or investigation_department is null)
78.56289312839507
..
 

QR Codes:
dev-uiteam:https://www.google.com/chart?chs=200x200&chld=M|0&cht=qr&chl=otpauth://totp/uiteam@dru.test01%3Fsecret%3D3XVVFAI6D2F2YQYQ3C62M7NGPI%26issuer%3Ddru.test01
jenkins-devops:https://www.google.com/chart?chs=200x200&chld=M|0&cht=qr&chl=otpauth://totp/devops@jenkin.dru.care%3Fsecret%3DW6OLFYJIGXF4YF3NCN7YCIUOFY%26issuer%3Djenkin.dru.care
dev-alphadev::::https://www.google.com/chart?chs=200x200&chld=M|0&cht=qr&chl=otpauth://totp/alphadev@dru.test01%3Fsecret%3DMYJBPRPV4OHNVYWKYPMXRSE34I%26issuer%3Ddru.test01
gammadev::https://www.google.com/chart?chs=200x200&chld=M|0&cht=qr&chl=otpauth://totp/gammadev@dru.test01%3Fsecret%3DXMZOQF42F7GZPKQJZZZNMW4OUY%26issuer%3Ddru.test01



gunicorn -w 2 -b $IP:8049 controller:app --daemon
 
assign timezone:[8050 - 8059]  [unused in dev 8057,8059]
---------------
 java -Xmx1500M -Dspring.datasource.url=jdbc:postgresql://192.168.1.111:5433/drucare_dev  -DIS_TIME_ZONE_REQUIRED=true -DSEND_EMAIL_URL=192.168.1.101 -DSEND_SMS_URL=192.168.1.101 -Djava.io.tmpdir=/opt/app/javatmpdir  -jar /home/deltadev/deploy/warehouse-0.0.1.jar &




container imagepush:
====================

add properties in bootstrap.yml:
-------------------------------

hostname: ${IP:localhost}
ip-address: ${IP:localhost}
instance-id: ${eureka.instance.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}


source /root/.bash_profile
aws ecr get-login --no-include-email --region ap-south-1 | awk '{printf $6}' | docker login -u AWS 329338480233.dkr.ecr.ap-south-1.amazonaws.com --password-stdin
docker build -t in-prod-inventory:1.8.0 .
docker tag in-prod-inventory:1.8.0 329338480233.dkr.ecr.ap-south-1.amazonaws.com/in-prod-inventory:1.8.0
docker push 329338480233.dkr.ecr.ap-south-1.amazonaws.com/in-prod-inventory:1.8.0


google.com/chart?chs=200x200&chld=M|0&cht=qr&chl=otpauth://totp/veera@qa.dru.care?secret=5ZREQIEEORMHOFK5IEME3UDS64&issuer=qa.dru.care
Your new secret key is: 5ZREQIEEORMHOFK5IEME3UDS64
Your verification code is 820593
Your emergency scratch codes are:
43546141
13047945
69188510
92003484
87812294


python:
docker build -t in-prod-erx-ml .
docker tag in-prod-erx-ml:latest 329338480233.dkr.ecr.ap-south-1.amazonaws.com/in-prod-erx-ml:latest
docker push 329338480233.dkr.ecr.ap-south-1.amazonaws.com/in-prod-erx-ml:latest


dev,qa,elk---[veera,Veer@Dru@311#]






production scripts:
00 * * * *  /usr/bin/sh  /home/admin/deploy/prod_scripts/disk_space_daily_mail_alert_prod.sh
00 09 * * *  /usr/bin/sh  /home/admin/deploy/prod_scripts/disk_space_mail_alert_prod.sh
00 09 */7 * *  /usr/bin/sh  /home/admin/deploy/prod_scripts/logs_zipping_prod.sh



java run command:
nohup java -Xmx1500M -Dspring.datasource.url=jdbc:postgresql://$DB_IP:$DB_PORT/drucare_dev -javaagent:$APM_AGENT_JAR -Delastic.apm.server_url=http://$APM_SERVER_IP:$APM_SERVER_PORT -Delastic.apm.service_name=admin-dev -Delastic.apm.application_packages=com.drucare -jar $PATH_TO_JAR --server.port=8072 /tmp 2>> /dev/null >> /dev/null &





