{"version":3,"sources":["webpack:///./src/app/modules/counselling/components/containers/counselling-patient/counselling-patient.component.html","webpack:///./src/app/modules/counselling/components/containers/counselling-patient/counselling-patient.component.ts","webpack:///./src/app/modules/counselling/components/containers/counselling-status/counselling-status.component.html","webpack:///./src/app/modules/counselling/components/containers/counselling-status/counselling-status.component.ts","webpack:///./src/app/modules/counselling/counselling-routing.module.ts","webpack:///./src/app/modules/counselling/counselling.module.ts","webpack:///./src/app/modules/counselling/counselling.service.ts","webpack:///./src/app/shared/directives/disable-control.directive.ts"],"names":[],"mappings":"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","file":"modules-counselling-counselling-module-ngfactory.js","sourcesContent":["<div class=\"col-md-12 p-0 top-search-bar\">\r\n  <div class=\"col-md-12 pl-0 pb-1 page-tittle\">\r\n    <h1 class=\"m-l-10 mb-1\">COUNSELLING PATIENT</h1>\r\n  </div>\r\n  <div class=\"col-md-12 search-menu-cont p-0\">\r\n    <div class=\"row m-0\">\r\n      <div class=\"col-sm-3 padding-vertical-middle clearfix\">\r\n        <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.PATIENT_ID_TEXT' | translate }}</label>\r\n        <div class=\"search-input-group\" (keyup.enter)=\"searchPatient(patientId,'patientIdSearch')\">\r\n          <input type=\"text\" id=\"patientId\" [(ngModel)]=\"patientId\" minLength=\"6\" maxLength=\"15\" ng-pattern=\"/^[0-9a-zA-Z ]*$/\">\r\n          <button type=\"button\" [disabled]=\"!patientId||patientId.length<6\" (click)=\"searchPatient(patientId,'patientIdSearch')\" class=\"button-align\">\r\n            <i class=\"fa fa-search\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-3 padding-vertical-middle clearfix\">\r\n        <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.AADHAR_MOBILE_TEXT' | translate }}</label>\r\n        <div class=\"search-input-group\" (keyup.enter)=\"searchPatient(mobileAadhar, 'mobileAadhar')\">\r\n          <input type=\"text\" #mobileAadharSearchType=\"ngModel\" id=\"mobileAadhar\" [(ngModel)]=\"mobileAadhar\" minLength=\"10\" maxLength=\"12\" pattern=\"[0-9]+\">\r\n          <button type=\"button\" [disabled]=\"!mobileAadhar||mobileAadhar.length<10\" (click)=\"searchPatient(mobileAadhar, 'mobileAadhar' )\"\r\n            class=\"button-align\">\r\n            <i class=\"fa fa-search\" aria-hidden=\" true\"></i>\r\n          </button>\r\n        </div>\r\n        <div *ngIf=\"mobileAadharSearchType.invalid\" class=\"has-error popover-style\">\r\n            <div class=\"dynamic_popover\">Only Numbers are allowed\r\n              <span class=\"doArrow\"></span>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12 col-sm-12 col-xs-12 p-0\" *ngIf=\"showMessage && !patientStatusList.length\">\r\n      <!-- <div class=\"grid-msg-text-branch\" role=\"alert\">Please search a patient using Patient ID / Aadhar Number / Mobile Number</div> -->\r\n      <div class=\"grid-msg-text-branch margin-top-40\" *ngIf=\"showMessage && !patientStatusList.length\" role=\"alert\">{{ 'COMMONLABELS.SEARCH_INFO_MSG_TEXT' | translate }}</div>\r\n    </div>\r\n    <div class=\"col-md-12 col-sm-12 col-xs-12 p-0\" *ngIf=\"this.patientVistList?.patientStatus === 'IPD'\">\r\n      <div class=\"grid-msg-text-branch \" role=\"alert\">IPD patient not allowed for services recording</div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class=\"selected-patient-container\" *ngIf=\"patientVistList\" layout=\"row\" layout-align=\"center center\">\r\n        <!-- *ngIf=\"patientVistList &&this.patientVistList.patientStatus !== 'IPD'\" -->\r\n        <!-- *ngIf=\"patientVistList &&this.patientVistList.length\" -->\r\n        <div class=\"patinet-img\" *ngIf=\"this.patientVistList !== null\">\r\n          <span class=\"patient-image\" *ngIf=\"!patientVistList.imagePath\">\r\n            <i class=\"def-patient-image fa fa-user-circle\"></i>\r\n          </span>\r\n          <span *ngIf=\"patientVistList.imagePath\">\r\n              <img *ngIf=\"patientVistList.imagePath \" class=\"profile-bg-img\" src=\"{{patientVistList.imagePath}} \">\r\n          </span>\r\n        </div>\r\n        <div class=\"patient-data\" *ngIf=\"this.patientVistList !==null\">\r\n          <!-- this.patientVistList.patientStatus == 'IPD' -->\r\n\r\n          <span class=\"margin-right-10\" *ngIf=\"patientVistList.hosPatientId\">\r\n            <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.ID_TEXT' | translate }}:</label>\r\n            <p class=\"pdata-text\">{{ patientVistList.hosPatientId }}</p>\r\n          </span>\r\n          <span class=\"margin-right-10\" *ngIf=\"patientVistList.patientNm\">\r\n            <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.NAME_TEXT' | translate }}:</label>\r\n            <p class=\"pdata-text\">{{ patientVistList.patientNm }}</p>\r\n          </span>\r\n          <span class=\"margin-right-10\" *ngIf=\"patientVistList.gender\">\r\n            <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.GENDER_TEXT' | translate }}:</label>\r\n            <p class=\"pdata-text\">{{ patientVistList.gender}}</p>\r\n          </span>\r\n          <span class=\"margin-right-10\" *ngIf=\"patientVistList.ageYears\">\r\n            <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.AGE_TEXT' | translate }}: </label>\r\n            <p> {{patientVistList.ageYears}}</p>\r\n            <!-- <p class=\"pdata-text\">{{ patientVistList.age }} years</p> -->\r\n            <!-- <p class=\"pdata-text\">{{patientAgeYear}}Years {{patientAgeMonth}}Months {{patientAgeDays}}Days</p> -->\r\n          </span>\r\n          <span class=\"margin-right-10\" *ngIf=\"patientVistList.mobileNo\">\r\n            <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.MOBILE_NO_TEXT' | translate }}:</label>\r\n            <p class=\"pdata-text\">{{ patientVistList.mobileNo }}</p>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <form id=\"counselling_Patients_Form\" [formGroup]=\"counsellingPatientsForm\"  #formDir=\"ngForm\">\r\n      <!-- *ngIf=\"selectdList.length >0 || patientStatusList.length>0\" -->\r\n      <div *ngIf=\"this.patientVistList?.patientStatus !== 'IPD'\"></div>\r\n      <div class=\"col-md-12 operation-detail-sec\" *ngIf=\"patientVistList  || patientStatusList.length>0\">\r\n        <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.SURGERY_DETAILS_TEXT' | translate }}:</label>\r\n        <div class=\"col-md-12 operation-details-div padding-0\">\r\n          <div class=\"row m-0\">\r\n            <div class=\"col-md-2\">\r\n              <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.DEPARTMENT_TEXT' | translate }}</label>\r\n              <select (change)=\"onSelectedDepartment()\" id=\"deptName\" formControlName=\"deptName\" [appDisableControl]=\"isDisableDepartment\">\r\n                <option></option>\r\n                <option *ngFor=\"let department of deparmentList\" [ngValue]=\"department\">{{department.deptName}}</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n              <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.DOCTOR_TEXT' | translate }}</label>\r\n              <select id=\"firstNm\" formControlName=\"firstNm\" [appDisableControl]=\"isDisableDoctor\">\r\n                <option></option>\r\n                <option *ngFor=\"let doctor of doctorList\" [ngValue]=\"doctor\">{{doctor.doctorName}}</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n              <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.DATE_TIME_TEXT' | translate }}</label>\r\n              <input type=\"text\" [min]=\"min\" [max]=\"max\" class=\"bg-dark-white-smoke\" placeholder=\"Date Time:\" formControlName=\"operationDttm\"\r\n                [owlDateTimeTrigger]=\"injectedTimePicker\" [owlDateTime]=\"injectedTimePicker\" [appDisableControl]=\"isDisableDateTime\">\r\n              <owl-date-time #injectedTimePicker></owl-date-time>\r\n            </div>\r\n          </div>\r\n          <div class=\"row m-0\">\r\n            <div class=\"col-md-2\">\r\n              <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.SERVICE_NAME_TEXT' | translate }}</label>\r\n              <select id=\"serviceName\" formControlName=\"serviceName\" (change)=\"serviceUnitPrice('editsave')\">\r\n                <option></option>\r\n                <option *ngFor=\"let services of servicenameList\" [ngValue]=\"services\">{{services.serviceName}} </option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-md-1\">\r\n              <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.AMOUNT_TEXT' | translate }}</label>\r\n              <input type=\"number\" id=\"serviceAmount\" formControlName=\"serviceAmount\" disabled=\"true\">\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n              <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.REMARKS_TEXT' | translate }}</label>\r\n              <input type=\"text\" id=\"serviceRemarks\" formControlName=\"serviceRemarks\" disabled=\"true\">\r\n            </div>\r\n            <div class=\"col-md-1\">\r\n              <button id=\"button-id-1\" class=\"fa fa-plus-square fa_add_font  add-detailsbtn labOrder_addBtn pointerEvents\" [disabled]=\"!counsellingPatientsForm.get('serviceAmount')?.value\"\r\n                (click)=\"onSubmitservices()\"></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12 table-data\" *ngIf=\"selectdList && selectdList.length\">\r\n        <table class=\"scroll-table table counselling-patient-table border\">\r\n          <thead>\r\n            <tr class=\"fixedHeader\">\r\n              <th class=\"dept-name\">Department Name</th>\r\n              <th class=\"doctor-name\">Doctor Name</th>\r\n              <th class=\"service-name\">Service Name</th>\r\n              <th class=\"amount\">Amount</th>\r\n              <th class=\"date-time\">Date&Time</th>\r\n              <th class=\"remarks\">Remarks</th>\r\n              <th class=\"payment-status\">Status</th>\r\n              <th class=\"action\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let list of selectdList\">\r\n              <td class=\"dept-name\">{{list.deptNm}}</td>\r\n              <td class=\"doctor-name\">{{list.doctorNm}}</td>\r\n              <td class=\"service-name\">{{list.serviceName}}</td>\r\n              <td class=\"amount\">{{list.serviceAmount}}</td>\r\n              <td class=\"date-time\">{{list.operationDttm | date : 'dd-MM-yyyy HH:mm a'}}</td>\r\n              <td *ngIf=\"!list.isFetched\" class=\"remarks\">\r\n                <input id=\"service_Remarks\" type=\"text\" formControlName=\"serviceRemarks\">\r\n              </td>\r\n              <td *ngIf=\"list.isFetched\" class=\"remarks\">\r\n                {{list.serviceRemarks}}\r\n              </td>\r\n              <td class=\"payment-status\">{{list.serviceStatus}}</td>\r\n              <td class=\"action\">\r\n                <div class=\"top-corner-icons deletebutton\" (click)=\"deleteService(list)\" *ngIf=\"list.serviceStatus\">\r\n                  <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                  <!-- *ngIf=\"list.serviceStatus\"  -->\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div>\r\n          <p>\r\n            <label *ngIf=\"patientStatusList && patientStatusList.length\">Total Services Amount:</label>{{totalServiceAmt}}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <!-- <div class=\"button_cancel pull-right margin-top-20\">\r\n      <button type=\"button\" id=\"button-id-2\" class=\"btn-app btn-edit\" (click)=\"saveServices()\" *ngIf=\"selectdList && selectdList.length>0\">\r\n        <i class=\"fa fa-arrow-circle-up fa-btn-icon\" aria-hidden=\"true\" disble=\"list.isPastService:true\"></i> Save</button>\r\n      <button type=\"button\" *ngIf=\"selectdList && selectdList.length>0\" class=\"btn-app btn-clear\" (click)=\"clearFunction()\">\r\n        <i class=\"mdi mdi-reload fa-btn-icon margin-right-5\" aria-hidden=\"true\"></i> clear </button>\r\n    </div> -->\r\n    <div\r\n    class=\"col-sm-12  p-l-r-5 m-t-b-15 form-button-group pull-right\">\r\n    <ul>\r\n      <li>\r\n          <button type=\"button\" id=\"button-id-2\" class=\"btn-app btn-edit\" (click)=\"saveServices()\" *ngIf=\"selectdList && selectdList.length>0\">\r\n              <i class=\"fa fa-arrow-circle-up fa-btn-icon\" aria-hidden=\"true\" disble=\"list.isPastService:true\"></i> Save</button>\r\n             </li>\r\n      <li>\r\n          <button type=\"button\" *ngIf=\"selectdList && selectdList.length>0\" class=\"btn-app btn-clear\" (click)=\"clearFunction()\">\r\n              <i class=\"mdi mdi-reload fa-btn-icon margin-right-5\" aria-hidden=\"true\"></i> clear </button>\r\n      </li>\r\n\r\n     </ul>\r\n  </div>\r\n    <div class=\"col-md-12\" *ngFor=\"let patient of patientStatusList\">\r\n        <div *ngIf=\"patient.patientStatus === 'IPD'\">\r\n          <!-- <p>IPD patient Services are not saved</p> -->\r\n          <div class=\"grid-msg-text-branch \" role=\"alert\">IPD Patient Services are not saved</div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport {\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  ActivatedRoute\r\n} from '@angular/router';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {\r\n  OpdApiService,\r\n  BillingApiService,\r\n  EmrApiService,\r\n  UtilService,\r\n  RegisterationBillingService\r\n} from '@core/services';\r\n\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CounsellingApiService } from '@core/services/couselling-api.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { CounsellingService } from '@app/modules/counselling/counselling.service';\r\nimport { ConfirmationDialogComponent } from '@shared/components/confirmation-dialog/confirmation-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-counselling-patient',\r\n  templateUrl: './counselling-patient.component.html',\r\n  styleUrls: ['./counselling-patient.component.scss']\r\n})\r\nexport class CounsellingPatientComponent implements OnInit {\r\n  isDisplayPatientData = false;\r\n  isFetchingData = false;\r\n  showMessage = true;\r\n  public isDisableDoctor = false;\r\n  public isDisableAddbutton = true;\r\n  public isDisableDepartment = true;\r\n  public isDisableDateTime = false;\r\n  public isDisableService = false;\r\n  patientId: any;\r\n  mobileAadhar: any;\r\n  deparmentList: any[] = [];\r\n  public patientVistList: any;\r\n  doctorList: any[] = [];\r\n  // servicesList: any[] = [];\r\n  counsellingServices: any[] = [];\r\n  patientStatusList: any[] = [];\r\n  serviceName: any;\r\n  serviceAmount: any;\r\n  totalServiceAmt: any;\r\n  deptName: any;\r\n  firstNm: any;\r\n  patientAgeYear: any;\r\n  patientAgeMonth: any;\r\n  patientAgeDays: any;\r\n  counselling: any[];\r\n  operationDttm;\r\n  minMonth;\r\n  maxMonth;\r\n  min;\r\n  max;\r\n  services = [];\r\n  amountDefinedServices = [];\r\n\r\n  // public min = new Date();\r\n  // public max = new Date();\r\n  public infodata = [];\r\n  public infodocdata = [];\r\n  private patientData: any;\r\n  public isFetchEdit = 'fetchedit';\r\n  private serviceRemarks: string;\r\n  public selectdList = [];\r\n  public isSavedOrUpdated: boolean;\r\n  public servicenameList = [];\r\n  private sessionData: UserSession;\r\n  counsellingPatientsForm: FormGroup;\r\n  constructor(\r\n    public router: Router,\r\n    private toaster: ToastrService,\r\n    private formbuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private counsellingService: CounsellingService,\r\n    private toastr: ToastrService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    userService: UserService,\r\n    private opdApiService: OpdApiService,\r\n    // private billingApiService: BillingApiService,\r\n    private registerationBillingSerivice: RegisterationBillingService,\r\n    private utilService: UtilService,\r\n    private emrApiService: EmrApiService\r\n  ) {\r\n    this.sessionData = userService.getUser();\r\n    this.activatedRoute.queryParams.subscribe(params => {});\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchDepartments();\r\n    this.initForm();\r\n    this.servicesList();\r\n   this.minMonth = new Date();\r\n  //  this.minMonth.setMonth(this.minMonth .getMonth() - 1);\r\n  this.min = new Date(this.minMonth);\r\n   this.maxMonth = new Date();\r\n   this.maxMonth.setMonth(this.maxMonth .getMonth() + 1);\r\n   this.max = new Date(this.maxMonth);\r\n    this.operationDttm = new Date();\r\n    // fetchCounsellingDetails\r\n    this.patientData = this.counsellingService.getPatientData();\r\n    if (this.patientData) {\r\n      this.fetchCounsellingDetails('isEdit');\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * @description This method is used to declare list of form control names with validation in a counsellingPatientFom\r\n   */\r\n  initForm() {\r\n    this.counsellingPatientsForm = this.formbuilder.group({\r\n      deptName: this.formbuilder.control(null, Validators.required),\r\n      firstNm: this.formbuilder.control(null, Validators.required),\r\n      serviceName: this.formbuilder.control(null),\r\n      serviceAmount: this.formbuilder.control(null),\r\n      operationDttm: this.formbuilder.control(null, Validators.required),\r\n      serviceRemarks: this.formbuilder.control(null, Validators.required),\r\n      quantity: 1\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description this api is used to search patients latest visit details based on mobile/aadhar/patient id\r\n   * @function fetchLatestVisitDetails\r\n   */\r\n  searchPatient(val, type) {\r\n    const payload = {\r\n      orgId: this.sessionData.orgId,\r\n      orgGrpId: this.sessionData.orgGroupId,\r\n      authenticatedUserId: this.sessionData.regId\r\n    };\r\n    if (type === 'patientIdSearch') {\r\n      payload['hosPatientId'] = val;\r\n    }\r\n    if (type === 'mobileAadhar') {\r\n      if (val.length === 10) {\r\n        payload['mobileNo'] = val;\r\n      } else {\r\n        payload['aadhaarNo'] = val;\r\n      }\r\n\r\n    }\r\n    this.emrApiService.fetchLatestVisitDetails<any>(payload).subscribe(\r\n      response => {\r\n        if (response.responseCode === 'E200') {\r\n          this.mobileAadhar = null;\r\n          this.patientId = null;\r\n          this.showMessage = false;\r\n          if (response.data === null) {\r\n            this.patientVistList = response.data;\r\n            this.toaster.error('', 'RECORDS NOT FOUND');\r\n          } else {\r\n            this.mobileAadhar = null;\r\n            this.patientId = null;\r\n            this.patientVistList = response.data;\r\n          if (this.patientVistList = response.data) {\r\n            // if (this.patientVistList.age) {\r\n            //   this.patientAgeYear = Math.floor(this.patientVistList.age / 365);\r\n            //   this.patientAgeMonth = Math.floor((this.patientVistList.age % 365) / 31);\r\n            //   this.patientAgeDays = this.patientVistList.age - (this.patientAgeYear * 365) - (this.patientAgeMonth * 31);\r\n            // }\r\n            // if (this.patientVistList.birthDt) {\r\n            //    this.patientAgeYear = this.utilService\r\n            //     .parseDob(this.patientVistList.birthDt)\r\n            //    .get('years');\r\n            //    this.patientAgeMonth = this.utilService\r\n            //    .parseDob(this.patientVistList.birthDt)\r\n            //   .get('months');\r\n            //    this.patientAgeDays = this.utilService\r\n            //    .parseDob(this.patientVistList.birthDt)\r\n            //   .get('days');\r\n            // }\r\n            // this.patientVistList.patientStatus == 'IPD';\r\n            // this.patientVistList = response.data.map(patient => {\r\n            //   patient.mobileOrAadhaarNo = this.patientData;\r\n              if (this.patientVistList.age) {\r\n                this.patientVistList.ageYears = this.utilService\r\n                  .parseAgeIndays(this.patientVistList.age)\r\n                  .get('patientAge');\r\n              }\r\n              if (this.patientVistList.birthDt) {\r\n                this.patientVistList.ageYears = this.utilService\r\n                  .parseDob(this.patientVistList.birthDt)\r\n                  .get('patientAge');\r\n              }\r\n              return  this.patientVistList.ageYears;\r\n            // });\r\n            }\r\n            // this.showMessage = false;\r\n            this.isDisplayPatientData = true;\r\n            this.isDisableDepartment = true;\r\n            this.isDisableDoctor = true;\r\n            this.counsellingPatientsForm.reset();\r\n            this.patientStatusList = [];\r\n            this.selectdList = [];\r\n          }\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toaster.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      _ => {\r\n        this.toaster.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @description This api is initially called from departments names\r\n   * @function fetchDepartmentList\r\n   */\r\n  fetchDepartments() {\r\n    const payload = {\r\n      orgId: this.sessionData.orgId,\r\n      orgGroupId: this.sessionData.orgGroupId,\r\n      authenticatedUserId: this.sessionData.regId\r\n    };\r\n    this.emrApiService.fetchDepartments<any>(payload).subscribe(\r\n      response => {\r\n        if (response.responseCode === 'E200') {\r\n          this.deparmentList = response.data;\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toaster.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      _ => {\r\n        this.toaster.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @description This api is used to get different doctors based on depatment name\r\n   * @function fetchDeptDoctorList\r\n   */\r\n  onSelectedDepartment() {\r\n    const dept = this.counsellingPatientsForm.get('deptName').value;\r\n    const payload = {\r\n      orgId: this.sessionData.orgId,\r\n      orgGroupId: this.sessionData.orgGroupId,\r\n      createdUsrId: this.sessionData.regId,\r\n      authenticatedUserId: this.sessionData.regId,\r\n      deptId: dept.deptId,\r\n      // authenticatedUserId: this.sessionData.regId,\r\n      designation: 'Doctor'\r\n    };\r\n    this.emrApiService.fetchDeptDoctorList<any>(payload).subscribe(\r\n      response => {\r\n        if (response.responseCode === 'E200') {\r\n          this.doctorList = response.data;\r\n          this.isDisableDoctor = true;\r\n          this.isDisableDateTime = true;\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      _ => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @description this api is used to get list of serviceses, it is initially called when page is loaded\r\n   * @function listOfAmountDefinedServices\r\n   */\r\n  servicesList() {\r\n    const payload = {\r\n      orgId: this.sessionData.orgId,\r\n      orgGroupId: this.sessionData.orgGroupId,\r\n      authenticatedUserId: this.sessionData.regId\r\n    };\r\n    this.registerationBillingSerivice.servicesList<any>(payload).subscribe(\r\n      response => {\r\n        if (response.responseCode === 'E200') {\r\n          this.counsellingServices = response.data;\r\n          this.counsellingServices.forEach(servicesesData => {\r\n            if (servicesesData.billServiceType === 'Clinical') {\r\n              this.servicenameList.push(servicesesData);\r\n            }\r\n          });\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toaster.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      _ => {\r\n        this.toaster.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @description this api is used to get service amount based on amount defined services\r\n   * @function getServiceUnitPrice\r\n   */\r\n  serviceUnitPrice() {\r\n    const servicedata = this.counsellingPatientsForm.get('serviceName').value;\r\n    let patientCategoryName;\r\n    if (this.patientData) {\r\n      patientCategoryName = this.patientData.patientCategoryNm;\r\n    } else {\r\n      patientCategoryName = this.patientVistList['patientCategoryNm'];\r\n    }\r\n    const payload = {\r\n      serviceId: servicedata.serviceId,\r\n      billServiceType: servicedata.billServiceType,\r\n      orgId: this.sessionData.orgId,\r\n      orgGroupId: this.sessionData.orgGroupId,\r\n      authenticatedUserId: this.sessionData.regId,\r\n      startDate: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n      patientCategoryName\r\n    };\r\n    this.registerationBillingSerivice.serviceUnitPrice<any>(payload).subscribe(\r\n      response => {\r\n        if (response.responseCode === 'E200') {\r\n          this.isDisableAddbutton = false;\r\n          this.counsellingPatientsForm.controls['serviceAmount'].setValue(\r\n            response.data.serviceAmount\r\n          );\r\n          const amountDefinedServices = response.data;\r\n          this.servicenameList.forEach(val => {\r\n            if (val.serviceId === servicedata.serviceId) {\r\n              val.serviceAmountData = amountDefinedServices;\r\n            }\r\n          });\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toaster.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      _ => {\r\n        this.toaster.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @description this function is used to add list of services in a table\r\n   */\r\n  onSubmitservices() {\r\n    const selectedService = this.counsellingPatientsForm.value;\r\n    const selectedDoctorNm = this.counsellingPatientsForm.value;\r\n    const selectedDeptNm = this.counsellingPatientsForm.value;\r\n    const serviceNm = selectedService.serviceName;\r\n\r\n    serviceNm['quantity'] = 1;\r\n    this.services.push(serviceNm);\r\n    this.infodata.push(selectedDoctorNm);\r\n    this.infodocdata.push(selectedDeptNm);\r\n    let obj: any = {};\r\n    obj = {\r\n      deptNm: this.infodata[0].deptName.deptName,\r\n      doctorNm: this.infodocdata[0].firstNm.doctorName,\r\n      serviceName: selectedService.serviceName.serviceName,\r\n      serviceRemarks: selectedService.serviceRemarks,\r\n      serviceAmount: selectedService.serviceAmount,\r\n      operationDttm: this.infodata[0].operationDttm,\r\n      services: selectedService,\r\n      isFetched: false\r\n    };\r\n    this.selectdList.push(obj);\r\n\r\n    this.isDisableDoctor = false;\r\n    this.isDisableDepartment = false;\r\n    this.isDisableDateTime = false;\r\n    this.counsellingPatientsForm.reset();\r\n  }\r\n\r\n  onCounsellingPatientsFormSubmit(formDir) {}\r\n\r\n  /**\r\n   * @description This api is used to delete the services\r\n   * @function updateCounsellingDetails\r\n   */\r\n  deleteService(service, index) {\r\n    let type;\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Delete  ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === true) {\r\n        let visitId = null;\r\n        let patientStatus = null;\r\n        if (!service.patientVisitId) {\r\n          visitId = service.patientVisitId;\r\n          patientStatus = service.patientStatus;\r\n        } else {\r\n          visitId = this.patientStatusList[0].patientVisitId;\r\n          patientStatus = this.patientStatusList[0].patientStatus;\r\n        }\r\n        const payload = {\r\n          orgId: this.sessionData.orgId,\r\n          orgGroupId: this.sessionData.orgGroupId,\r\n          authenticatedUserId: this.sessionData.regId,\r\n          cancelDate: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n          cancelUsrId: this.sessionData.regId,\r\n          isDaycarePatient: true,\r\n          visitId,\r\n          patientStatus\r\n        };\r\n        if (this.selectdList.length && this.selectdList.length > 0) {\r\n          payload['patientServiceId'] = service.patientServiceId;\r\n        }\r\n        if (service.serviceStatus === 'Bill Pending') {\r\n          this.emrApiService.updateCounsellingDetails<any>(payload).subscribe(\r\n            response => {\r\n              if (response.responseCode === 'E200') {\r\n                this.isSavedOrUpdated = response.data;\r\n                if (this.patientData) {\r\n                  type = 'isEdit';\r\n                } else if (!this.patientData) {\r\n                  type = 'fetch';\r\n                }\r\n                this.fetchCounsellingDetails(type);\r\n                this.toaster.success(response.responseMessage);\r\n              } else if (response.responseCode === 'E400') {\r\n                this.toaster.error('Failure!', response.responseMessage);\r\n              }\r\n            },\r\n            _ => {\r\n              this.toaster.error('Failure!', 'Something went wrong');\r\n            }\r\n          );\r\n        } else {\r\n          this.toaster.warning('Not allowed deletion for amount paid Service');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description This api is used to  save the singile services (or) multiple services\r\n   * @function updateCounsellingDetails\r\n   */\r\n  saveServices() {\r\n    const serviceListData = [];\r\n    this.selectdList.forEach(val => {\r\n      if (!val.isAlreadySaved) {\r\n        const serviceName = val.services.serviceName;\r\n        const totalServiceAmount =\r\n          serviceName.serviceAmountData.serviceAmount * 1;\r\n        let taxAmount: any =\r\n          (totalServiceAmount * serviceName.serviceAmountData.taxPercentage) /\r\n          100;\r\n        taxAmount = taxAmount.toFixed(2) / 1;\r\n        let sgstTaxAmount: any = taxAmount / 2;\r\n        sgstTaxAmount = sgstTaxAmount.toFixed(2) / 1;\r\n        let cgstTaxAmount: any = taxAmount / 2;\r\n        cgstTaxAmount = cgstTaxAmount.toFixed(2) / 1;\r\n        const obj = {\r\n          serviceRemarks: this.counsellingPatientsForm.get('serviceRemarks')\r\n            .value,\r\n          deptId: val.deptId,\r\n          doctorId: val.doctorId,\r\n          billGrpNm: serviceName.billGrpNm,\r\n          operationDttm: val.operationDttm\r\n            ? new Date(val.operationDttm).getTime()\r\n            : '',\r\n          isPackage: serviceName.isPackage,\r\n          isPanel: serviceName.isPanel,\r\n          subGrpNm: serviceName.subGrpNm,\r\n          serviceId: serviceName.serviceId,\r\n          serviceType: serviceName.billServiceType,\r\n          serviceAmount:\r\n            serviceName.serviceAmountData &&\r\n            serviceName.serviceAmountData.serviceAmount,\r\n          quantity: 1,\r\n          serviceDt: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n          serviceName: serviceName.serviceName,\r\n          totalServiceAmount: serviceName.serviceAmountData.serviceAmount * 1,\r\n          taxAmount: taxAmount,\r\n          cgstTaxAmount: cgstTaxAmount,\r\n          sgstTaxAmount: sgstTaxAmount,\r\n          sgstTaxPercentage:\r\n            serviceName.serviceAmountData &&\r\n            serviceName.serviceAmountData.sgstTaxPercentage,\r\n          cgstTaxPercentage:\r\n            serviceName.serviceAmountData &&\r\n            serviceName.serviceAmountData.cgstTaxPercentage,\r\n          taxCategoryCode:\r\n            serviceName.serviceAmountData &&\r\n            serviceName.serviceAmountData.taxCategoryCode,\r\n          taxPercentage:\r\n            serviceName.serviceAmountData &&\r\n            serviceName.serviceAmountData.taxPercentage,\r\n          totalAmount:\r\n            serviceName.serviceAmountData &&\r\n            serviceName.serviceAmountData.serviceAmount * 1,\r\n          taxId:\r\n            serviceName.serviceAmountData && serviceName.serviceAmountData.taxId\r\n          // operationDttm: serviceName.operationDttm.getTime()\r\n        };\r\n        serviceListData.push(obj);\r\n      }\r\n    });\r\n    const servicesObj = this.selectdList[0];\r\n    let dateinmilliseconds = servicesObj.operationDttm;\r\n    // dateinmilliseconds = dateinmilliseconds.getTime();\r\n    dateinmilliseconds = new Date(servicesObj.operationDttm);\r\n    dateinmilliseconds = dateinmilliseconds.getTime();\r\n    let patientStatus;\r\n    let hospitalPatientId;\r\n    let visitId;\r\n    let patientId;\r\n    if (this.patientData) {\r\n      patientStatus = this.patientData.patientStatus;\r\n      hospitalPatientId = this.patientData.hosPatientId;\r\n      visitId = this.patientData.patientVisitId;\r\n      patientId = this.patientData.patientId;\r\n    } else {\r\n      (patientId = this.patientVistList['patientId']),\r\n        (patientStatus = this.patientVistList['patientStatus']);\r\n      hospitalPatientId = this.patientVistList['hosPatientId'];\r\n      visitId = this.patientVistList['patientVisitId'];\r\n    }\r\n    // dateinmilliseconds.getTime();\r\n    const payload = {\r\n      serviceList: serviceListData,\r\n      operationDttm: dateinmilliseconds,\r\n      orgId: this.sessionData.orgId,\r\n      orgGroupId: this.sessionData.orgGroupId,\r\n      authenticatedUserId: this.sessionData.regId,\r\n      patientStatus,\r\n      deptId: this.infodocdata[0].deptName.deptId,\r\n      doctorId: this.infodocdata[0].firstNm.empId,\r\n      patientId,\r\n      hospitalPatientId,\r\n      visitId\r\n      // serviceRemarks: this.counsellingPatientsForm.get('serviceRemarks').value\r\n    };\r\n    if (\r\n      (this.patientVistList && this.patientVistList.patientStatus === 'OPD') ||\r\n      (this.patientData && this.patientData.patientStatus === 'OPD')\r\n    ) {\r\n      payload['isDaycarePatient'] = true;\r\n    } else {\r\n      payload['isDaycarePatient'] = false;\r\n    }\r\n    this.emrApiService.updateCounsellingDetails<any>(payload).subscribe(\r\n      (response) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.toaster.success(response.responseMessage);\r\n          this.isSavedOrUpdated = response.data;\r\n          // this.doctorList = response.data;\r\n          let type;\r\n          if (this.patientData) {\r\n            type = 'isEdit';\r\n          }\r\n          if (!this.patientData) {\r\n            type = 'fetch';\r\n          }\r\n          this.fetchCounsellingDetails(type);\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      _ => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @description This api is used fetch  the services\r\n   * @function fetchCounsellingDetails\r\n   */\r\n  fetchCounsellingDetails(type) {\r\n    let visitId = null;\r\n    if (type === 'isEdit') {\r\n      visitId = this.patientData.patientVisitId;\r\n    } else {\r\n      visitId = this.patientVistList['patientVisitId'];\r\n    }\r\n    const payload = {\r\n      orgId: this.sessionData.orgId,\r\n      orgGrpId: this.sessionData.orgGroupId,\r\n      authenticatedUserId: this.sessionData.regId,\r\n      visitId\r\n    };\r\n    this.emrApiService.fetchCounsellingDetails<any>(payload).subscribe(\r\n      response => {\r\n        if (response.responseCode === 'E200') {\r\n          this.patientStatusList = response.data;\r\n          console.log( this.patientStatusList, 'null');\r\n          const getTotalcostPrice =  this.patientStatusList.reduce(\r\n            (acc, val) => (acc += val.serviceAmt),\r\n            0\r\n          );\r\n          this.totalServiceAmt = getTotalcostPrice;\r\n          if (this.patientStatusList.length === 0) {\r\n            this.toaster.success('', response.responseMessage);\r\n          }\r\n          if (this.patientStatusList.length === null) {\r\n            this.toaster.success('', response.responseMessage);\r\n          }\r\n          if (\r\n            this.patientStatusList.length > 0 &&\r\n            this.patientStatusList[0].serviceList &&\r\n            this.patientStatusList[0].serviceList.length\r\n          ) {\r\n            this.patientStatusList[0].serviceList.forEach(val => {\r\n              val.isAlreadySaved = true;\r\n            });\r\n          }\r\n          this.selectdList = this.patientStatusList[0].serviceList;\r\n          if (this.patientStatusList.length > 0) {\r\n            // added condition for zero recoreds condition start\r\n            this.selectdList = this.patientStatusList[0].serviceList ? this.patientStatusList[0].serviceList : [];\r\n\r\n            if (this.selectdList) {\r\n              this.selectdList.forEach(element => {\r\n                element.deptNm = this.patientStatusList[0].deptNm;\r\n                element.doctorNm = this.patientStatusList[0].doctorNm;\r\n                element.operationDttm = this.patientStatusList[0].operationDttm;\r\n                element.patientVisitId = this.patientStatusList[0].patientVisitId;\r\n                element.patientStatus = this.patientStatusList[0].patientStatus;\r\n                element.isFetched = true;\r\n              });\r\n            }\r\n          }\r\n          // added condition for zero recoreds condition end\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toaster.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      _ => {\r\n        this.toaster.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  clearFunction() {\r\n    if (this.patientStatusList.length) {\r\n      this.patientStatusList[0].serviceList.forEach(element => {\r\n        if (!element.serviceStatus) {\r\n          this.selectdList = [];\r\n          this.isDisableDepartment = true;\r\n          this.totalServiceAmt = '';\r\n        }\r\n      });\r\n    } else if (this.selectdList) {\r\n      this.selectdList = [];\r\n      this.isDisableDepartment = true;\r\n      this.totalServiceAmt = '';\r\n    }\r\n    // this.selectdList =[];\r\n\r\n  }\r\n}\r\n","<div class=\"col-sm-12 p-0 top-search-bar\">\r\n  <div class=\"col-sm-12 p-2 page-tittle\">\r\n    <h1 class=\"m-l-10 p-5\">COUNSELLING STATUS</h1>\r\n  </div>\r\n  <div class=\"col-sm-12 search-menu-cont p-0\">\r\n    <div class=\"row m-0 pl-2\">\r\n    <div class=\"col-sm-3 p-l-r-10 p-t-10 clearfix\">\r\n      <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.PATIENT_ID_TEXT' | translate }}</label>\r\n      <div class=\"search-input-group\" (keyup.enter)=\"fetchCounselingStatusDetails(patientId,'patientIdSearch')\">\r\n        <input type=\"text\" id=\"patientId\" [(ngModel)]=\"patientId\" minLength=\"6\" maxLength=\"15\" ng-pattern=\"/^[0-9a-zA-Z ]*$/\">\r\n        <button id=\"search_Patient_Id\" type=\"button\" [disabled]=\"!patientId||patientId.length<6\" (click)=\"fetchCounselingStatusDetails(patientId,'patientIdSearch')\"\r\n          class=\"button-align\">\r\n          <i class=\"fa fa-search\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-3 p-l-r-10 p-t-10 clearfix\">\r\n      <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.AADHAR_MOBILE_TEXT' | translate }}</label>\r\n      <div class=\"search-input-group\" (keyup.enter)=\"fetchCounselingStatusDetails(mobileAadhar, 'mobileAadhar')\">\r\n        <input type=\"text\" id=\"mobileAadhar\" [(ngModel)]=\"mobileAadhar\" minLength=\"10\" maxLength=\"12\">\r\n        <button id=\"search_Patient_MobileAadhar\" type=\"button\" [disabled]=\"!mobileAadhar||mobileAadhar.length<10\" (click)=\"fetchCounselingStatusDetails(mobileAadhar, 'mobileAadhar' )\"\r\n          class=\"button-align\">\r\n          <i class=\"fa fa-search\" aria-hidden=\" true\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    <div class=\"col-sm-12  p-t-10\">\r\n      <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.STATUS_DETAILS_TEXT' | translate }} :</label>\r\n    </div>\r\n    <div class=\"col-sm-12 pl-2 fileter-sec m-b-10\">\r\n      <div class=\"col-md-12 filter-section p-t-15\" ng-if=\"filtersVisible\">\r\n        <div class=\"row m-0\">\r\n          <div class=\"offset-sm-11 col-sm-1 text-right\">\r\n            <button type=\"button\"  id=\"toggle-filter\" (click)=\"toggleFilters()\" class=\"filter-btn\">\r\n              <i class=\"fa fa-filter\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"patient-data status-div\" *ngIf=\"patientStatusList.length > 0\" class=\"row m-0\">\r\n          <span *ngIf=\"patientStatusList[0].hosPatientId\" class=\"col-sm-3 d-flex p-0\">\r\n            <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.HOSPITAL_PATIENT_ID_TEXT' | translate }}:</label>\r\n            &nbsp;{{ patientStatusList[0].hosPatientId}}\r\n            <!-- <p class=\"pdata-text\"></p> -->\r\n          </span>\r\n          <span *ngIf=\"patientStatusList[0].mobileNo\" class=\"col-sm-2 d-flex p-0\">\r\n            <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.MOBILE_NO_TEXT' | translate }}:</label>\r\n            &nbsp;{{patientStatusList[0].mobileNo}}\r\n          </span>\r\n          <span *ngIf=\"patientStatusList[0].aadhaarNo && patientStatusList[0].aadhaarNo !== 0\" class=\"d-flex col-sm-2 p-0\">\r\n            <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.AADHAR_NUMBER_TEXT' | translate }}:</label>\r\n            &nbsp;{{patientStatusList[0].aadhaarNo}}\r\n          </span>\r\n          <span class=\"col-sm-2 d-flex p-0\">\r\n            <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.FROM_DATE_TEXT' | translate }}:\r\n            </label>\r\n            &nbsp;{{ counsellingStatusForm.value.fromDt | date : 'dd-MM-yyyy' }}\r\n          </span>\r\n          <span class=\"col-sm-2 d-flex p-0\">\r\n            <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.TO_DATE_TEXT' | translate }}:\r\n            </label>\r\n            &nbsp;{{counsellingStatusForm.value.toDt | date : 'dd-MM-yyyy' }}\r\n          </span>\r\n        </div>\r\n\r\n        <form [formGroup]=\"counsellingStatusForm\" id=\"counsellingStatusForm\" #formDir=\"ngForm\" *ngIf=\"isFiltersVisible\">\r\n          <div class=\"row m-o ml-2\">\r\n            <div class=\"col-md-2 col-xs-12 p-0\">\r\n              <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.FROM_DATE_TEXT' | translate }}:</label>\r\n              <p class=\"input-group m-b-0 \">\r\n                <input type=\"text\"  id=\"fromDt\" [matDatepicker]=\"fromDt\" [max]=\"dateMax\" class=\"form-control\" formControlName=\"fromDt\" (dateChange)=\"changeDateFunction()\">\r\n                <mat-datepicker #fromDt></mat-datepicker>\r\n                <span class=\"input-group-btn\">\r\n                  <button class=\"btn btn-default\" id=\"toggle-fromDt\" type=\"button\" (click)=\"datePickerToggler(fromDt)\">\r\n                    <i class=\"fa fa-calendar\"></i>\r\n                  </button>\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div class=\"col-md-2 col-xs-12\">\r\n              <label class=\"txt-iris-blue text-uppercase\">{{ 'COMMONLABELS.TO_DATE_TEXT' | translate }}:</label>\r\n              <p class=\"input-group m-b-0 \">\r\n                <input type=\"text\" id=\"toDt\" [matDatepicker]=\"toDt\" (dateChange)=\"changeDateFunction()\" [max]=\"dateMax\" class=\"form-control\" formControlName=\"toDt\">\r\n                <mat-datepicker #toDt></mat-datepicker>\r\n                <span class=\"input-group-btn\">\r\n                  <button class=\"btn btn-default\" id=\"toggle-toDt\" type=\"button\" (click)=\"datePickerToggler(toDt)\">\r\n                    <i class=\"fa fa-calendar\"></i>\r\n                  </button>\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-12 p-l-r-10 pb-3\" *ngIf=\"patientStatusList.length>0\">\r\n      <table id=\"counselling-status-table\" class=\"scroll-table table common-border counselling-status-table\">\r\n        <thead class=\"fixedHeader\">\r\n          <tr>\r\n            <th class=\"patient-id\">Patient Id</th>\r\n            <th class=\"patient-name\">Patient Name</th>\r\n            <th class=\"phone-number\">Phone Number</th>\r\n            <th class=\"age\">Age</th>\r\n            <th class=\"service-name\">Service Name</th>\r\n\r\n            <th class=\"doctor-name\">Doctor Name</th>\r\n            <th class=\"payment-status\">Payment Status</th>\r\n            <th class=\"action\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody *ngFor=\"let patientData of patientStatusList\">\r\n          <tr>\r\n            <td class=\"patient-id\">{{patientData.hosPatientId}}</td>\r\n            <td class=\"patient-name\">{{patientData.patientNm}}</td>\r\n            <td class=\"phone-number\">{{patientData.mobileNo}}</td>\r\n            <!-- <td>{{patientData.age}}</td> -->\r\n            <!-- <td>{{patientData.y}}Years {{patientData.m}}Months {{patientData.d}}Days</td> -->\r\n            <td class=\"age\">{{patientData.age}}</td>\r\n            <td class=\"service-name\">\r\n              {{patientData.serviceNm}}\r\n            </td>\r\n            <td class=\"doctor-name\">{{patientData.doctorNm}}</td>\r\n            <td class=\"payment-status\">{{patientData.serviceStatus}}</td>\r\n            <td class=\"action\">\r\n              <span (click)=\"onEditService(patientData)\" id=\"edit-button-icon\">\r\n                <i class=\"fas fa-pencil-alt edit-button\" aria-hidden=\"true\"></i>\r\n              </span>\r\n              <span class=\"deletebutton\" id=\"delete-button-icon\">\r\n                <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"deleteCounsellingService(patientData)\"></i>\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDatepicker } from '@angular/material';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { EmrApiService, UtilService } from '@core/services';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { CounsellingService } from '@app/modules/counselling/counselling.service';\r\nimport { ConfirmationDialogComponent } from '@shared/components/confirmation-dialog/confirmation-dialog.component';\r\nimport { MatDialog } from '@angular/material';\r\n@Component({\r\n  selector: 'app-counselling-status',\r\n  templateUrl: './counselling-status.component.html',\r\n  styleUrls: ['./counselling-status.component.scss']\r\n})\r\nexport class CounsellingStatusComponent implements OnInit {\r\n  counsellingStatusForm: FormGroup;\r\n  isFiltersVisible = false;\r\n  isDisplayPatientData = false;\r\n  patientStatusList: any[] = [];\r\n  patientVistList: any;\r\n  private sessionData: UserSession;\r\n  patientId: any;\r\n  mobileAadhar: any;\r\n  showMessage = true;\r\n  selectdList: any;\r\n  patientAgeYear: any;\r\n  patientAgeMonth: any;\r\n  patientAgeDays: any;\r\n  dateMax = new Date();\r\n  public isSavedOrUpdated: boolean;\r\n  datePickerToggler(datePicker: MatDatepicker<Date>) {\r\n    datePicker[datePicker.opened ? 'close' : 'open']();\r\n  }\r\n  toggleFilters() {\r\n    this.isFiltersVisible = !this.isFiltersVisible;\r\n  }\r\n\r\n  changeDateFunction() {\r\n    this.fetchFromDateTodateFn();\r\n  }\r\n\r\n  constructor(\r\n    private emrApiService: EmrApiService,\r\n    private toaster: ToastrService,\r\n    userService: UserService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private formbuilder: FormBuilder,\r\n    private utilService: UtilService,\r\n    private counsellingService: CounsellingService\r\n  ) {\r\n    this.sessionData = userService.getUser();\r\n    this.counsellingStatusForm = this.formbuilder.group({\r\n      fromDt: this.formbuilder.control(''),\r\n      toDt: this.formbuilder.control('')\r\n    });\r\n    const currentDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\r\n    let formDate: any = new Date();\r\n    formDate.setMonth(formDate.getMonth() - 1);\r\n    formDate = new Date(formDate);\r\n    formDate = new Date(formDate);\r\n    formDate = this.datePipe.transform(formDate, 'yyyy-MM-dd');\r\n    this.counsellingStatusForm.controls['fromDt'].setValue(formDate);\r\n    this.counsellingStatusForm.controls['toDt'].setValue(currentDate);\r\n  }\r\n  ngOnInit() {\r\n    // this.fetchCounselingStatusDetails();\r\n    this.fetchFromDateTodateFn();\r\n  }\r\n\r\n  /**\r\n   * @description fetch counselling status  details based on moibile and aadhar Number\r\n   * @function fetchCounsellingDetails\r\n   */\r\n  fetchCounselingStatusDetails(val, type) {\r\n    const payload = {\r\n      orgId: this.sessionData.orgId,\r\n      orgGrpId: this.sessionData.orgGroupId,\r\n      authenticatedUserId: this.sessionData.regId,\r\n      createdUsrId: this.sessionData.regId,\r\n    };\r\n    if (type === 'patientIdSearch') {\r\n      payload['hosPatientId'] = val;\r\n    } else if (type === 'mobileAadhar') {\r\n      if(val.length ===10){\r\n        payload['mobileNo'] = val;\r\n      }else{\r\n        payload['aadhaarNo'] = val;\r\n        // payload['mobileNo'] = val;\r\n      }\r\n    }\r\n    this.emrApiService.fetchCounsellingDetails<any>(payload).subscribe(\r\n      (response) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.patientStatusList = response.data;\r\n          this.mobileAadhar = '';\r\n          this.patientId = '';\r\n          this.patientStatusList.forEach(servicesesData => {\r\n            // if (servicesesData.age) {\r\n            //   servicesesData.age = this.utilService\r\n            //     .parseAgeIndays(servicesesData.age)\r\n            //     .get('years');\r\n            //   return servicesesData;\r\n            // }\r\n            // if (servicesesData.birthDt) {\r\n            //   servicesesData.age = this.utilService\r\n            //     .parseDob(servicesesData.birthDt)\r\n            //     .get('years');\r\n            //   return servicesesData;\r\n            // }\r\n            // if (servicesesData.age) {\r\n            //   servicesesData.y = Math.floor(servicesesData.age / 365);\r\n            //   servicesesData.m = Math.floor((servicesesData.age % 365) / 31);\r\n            //   servicesesData.d = servicesesData.age - (servicesesData.y * 365) - (servicesesData.m * 31);\r\n            // }\r\n            // if (servicesesData.birthDt) {\r\n            //   servicesesData.y = this.utilService\r\n            //     .parseDob(servicesesData.birthDt)\r\n            //    .get('years');\r\n            //    servicesesData.m = this.utilService\r\n            //    .parseDob(servicesesData.birthDt)\r\n            //   .get('months');\r\n            //   servicesesData.d = this.utilService\r\n            //    .parseDob(servicesesData.birthDt)\r\n            //   .get('days');\r\n            // }\r\n            if (servicesesData.age) {\r\n              servicesesData.age = this.utilService\r\n                .parseAgeIndays(servicesesData.age)\r\n                .get('patientAge');\r\n            }\r\n            if (servicesesData.birthDt) {\r\n              servicesesData.age = this.utilService\r\n                .parseDob(servicesesData.birthDt)\r\n                .get('patientAge');\r\n            }\r\n            return  servicesesData.age;\r\n          // });\r\n          });\r\n          if (this.patientStatusList.length === 0) {\r\n            this.toaster.success('', response.responseMessage);\r\n          }\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toaster.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      _ => {\r\n        this.toaster.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @description fetch counselling status  details based on From date and Todate\r\n   * @function fetchCounsellingDetails\r\n   */\r\n  fetchFromDateTodateFn() {\r\n    const payload = {\r\n      orgId: this.sessionData.orgId,\r\n      orgGrpId: this.sessionData.orgGroupId,\r\n      authenticatedUserId: this.sessionData.regId,\r\n       createdUsrId: this.sessionData.regId,\r\n      fromDt: this.datePipe.transform(\r\n        this.counsellingStatusForm.value.fromDt,\r\n        'yyyy-MM-dd'\r\n      ),\r\n      toDt: this.datePipe.transform(\r\n        this.counsellingStatusForm.value.toDt,\r\n        'yyyy-MM-dd'\r\n      )\r\n    };\r\n    this.emrApiService.fetchCounsellingDetails<any>(payload).subscribe(\r\n      (response) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.patientStatusList = response.data;\r\n          this.patientStatusList.forEach(servicesesData => {\r\n            // if (servicesesData.age) {\r\n            //   servicesesData.age = this.utilService\r\n            //     .parseAgeIndays(servicesesData.age)\r\n            //     .get('years');\r\n            //   return servicesesData;\r\n            // }\r\n            // if (servicesesData.birthDt) {\r\n            //   servicesesData.age = this.utilService\r\n            //     .parseDob(servicesesData.birthDt)\r\n            //     .get('years');\r\n            //   return servicesesData;\r\n            // }\r\n            // if (servicesesData.age) {\r\n            //   servicesesData.y = Math.floor(servicesesData.age / 365);\r\n            //   servicesesData.m = Math.floor((servicesesData.age % 365) / 31);\r\n            //   servicesesData.d = servicesesData.age - (servicesesData.y * 365) - (servicesesData.m * 31);\r\n            //   return servicesesData;\r\n            // }\r\n            // if (servicesesData.birthDt) {\r\n            //   servicesesData.y = this.utilService\r\n            //     .parseDob(servicesesData.birthDt)\r\n            //    .get('years');\r\n            //    servicesesData.m = this.utilService\r\n            //    .parseDob(servicesesData.birthDt)\r\n            //   .get('months');\r\n            //   servicesesData.d = this.utilService\r\n            //    .parseDob(servicesesData.birthDt)\r\n            //   .get('days');\r\n            //   return servicesesData;\r\n            // }\r\n            if (servicesesData.age) {\r\n              servicesesData.age = this.utilService\r\n                .parseAgeIndays(servicesesData.age)\r\n                .get('patientAge');\r\n            }\r\n            if (servicesesData.birthDt) {\r\n              servicesesData.age = this.utilService\r\n                .parseDob(servicesesData.birthDt)\r\n                .get('patientAge');\r\n            }\r\n            return  servicesesData.age;\r\n          // });\r\n          });\r\n          if (this.patientStatusList.length === 0) {\r\n            this.toaster.success('', response.responseMessage);\r\n          }\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toaster.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      _ => {\r\n        this.toaster.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  /**\r\n   * @description fetch counselling details\r\n   * @function fetchCounsellingDetails\r\n   */\r\n  fetchCounsellingDetails(type) {\r\n    const payload = {\r\n      orgId: this.sessionData.orgId,\r\n      orgGrpId: this.sessionData.orgGroupId,\r\n      authenticatedUserId: this.sessionData.regId,\r\n      hosPatientId: this.patientVistList['hosPatientId'],\r\n      visitId: this.patientVistList['patientVisitId']\r\n    };\r\n    this.emrApiService.fetchCounsellingDetails<any>(payload).subscribe(\r\n      (response) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.patientStatusList = response.data;\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toaster.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      _ => {\r\n        this.toaster.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @description This api is used to delete the list of counselling details based on patientVisitId\r\n   * @function updateCounsellingDetails\r\n   */\r\n  deleteCounsellingService(service, index) {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Delete  ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === true) {\r\n        const payload = {\r\n          orgId: this.sessionData.orgId,\r\n          orgGroupId: this.sessionData.orgGroupId,\r\n          authenticatedUserId: this.sessionData.regId,\r\n          cancelDate: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n          cancelUsrId: this.sessionData.regId,\r\n          visitId: service.patientVisitId,\r\n          patientStatus: service.patientStatus,\r\n          patientServiceId: service.patientServiceId,\r\n          isDaycarePatient: true\r\n        };\r\n        if (service.serviceStatus === 'Bill Pending') {\r\n          this.emrApiService.updateCounsellingDetails<any>(payload).subscribe(\r\n            (response) => {\r\n              if (response.responseCode === 'E200') {\r\n                this.isSavedOrUpdated = response.data;\r\n                this.toaster.success(response.responseMessage);\r\n                this.fetchFromDateTodateFn();\r\n              }\r\n              if (response.data === null) {\r\n                this.toaster.error('', response.responseMessage);\r\n              } else if (response.responseCode === 'E400') {\r\n                this.toaster.error('Failure!', response.responseMessage);\r\n              }\r\n            },\r\n            _ => {\r\n              this.toaster.error('Failure!', 'Something went wrong');\r\n            }\r\n          );\r\n        } else {\r\n          this.toaster.warning(\r\n            'Not allowed deletion for amount paid Services'\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * @description This method is used to navigate the list of services in to service patient screen due to editing functionality\r\n   * @function onEditService()\r\n   */\r\n  onEditService(patientData) {\r\n    this.counsellingService.setPatientData(patientData);\r\n    this.router.navigate(['counselling', 'counselling-patient']);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, Router } from '@angular/router';\r\nimport { CounsellingPatientComponent } from '@app/modules/counselling/components/containers/counselling-patient/counselling-patient.component';\r\nimport { CounsellingStatusComponent } from '@app/modules/counselling/components/containers/counselling-status/counselling-status.component';\r\nexport const CounsellingRoutings: Routes = [\r\n    { path: 'counselling-patient', component: CounsellingPatientComponent },\r\n    { path: 'counselling-status', component: CounsellingStatusComponent },\r\n    { path: '', redirectTo: 'counselling-patient', pathMatch: 'prefix' }\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(CounsellingRoutings)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CounsellingRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CounsellingStatusComponent } from './components/containers/counselling-status/counselling-status.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { CounsellingPatientComponent } from '@app/modules/counselling/components/containers/counselling-patient/counselling-patient.component';\r\nimport { CounsellingRoutingModule } from '@app/modules/counselling/counselling-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport {\r\n  MatDialogModule,\r\n  MatRadioModule,\r\n  MatCheckboxModule,\r\n} from '@angular/material';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ConfirmationDialogComponent } from '@shared/components/confirmation-dialog/confirmation-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    CounsellingRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    TranslateModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule\r\n\r\n  ],\r\n  entryComponents: [\r\n    ConfirmationDialogComponent,\r\n  ],\r\n  declarations: [CounsellingPatientComponent, CounsellingStatusComponent]\r\n})\r\nexport class CounsellingModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CounsellingService {\r\n  public patientData: any;\r\n  constructor() { }\r\n  getPatientData() {\r\n    return this.patientData;\r\n  }\r\n  setPatientData(data) {\r\n    this.patientData = data;\r\n  }\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appDisableControl]'\r\n})\r\nexport class DisableControlDirective {\r\n  constructor(private ngControl: NgControl) {}\r\n  @Input()\r\n  set appDisableControl(disabledState: boolean) {\r\n    const action = disabledState ? 'enable' : 'disable';\r\n    this.ngControl.control[action]();\r\n  }\r\n}\r\n"],"sourceRoot":""}