{"version":3,"sources":["webpack:///./node_modules/@angular/material/tooltip/typings/index.d.ts.TooltipComponent.html","webpack:///./src/app/modules/opd/components/addpatient/addpatient.component.html","webpack:///./src/app/modules/opd/components/addpatient/addpatient.component.ts","webpack:///./src/app/modules/opd/components/addreferencedoctors/addreferencedoctors.component.html","webpack:///./src/app/modules/opd/components/addreferencedoctors/addreferencedoctors.component.ts","webpack:///./src/app/modules/opd/components/allpatients/allpatients.component.html","webpack:///./src/app/modules/opd/components/allpatients/allpatients.component.ts","webpack:///./src/app/modules/opd/components/allpatients/patientdata.service.ts","webpack:///./src/app/modules/opd/components/allpatients/searchfilter.pipe.ts","webpack:///./src/app/modules/opd/components/billing/billing.component.html","webpack:///./src/app/modules/opd/components/billing/billing.component.ts","webpack:///./src/app/modules/opd/components/billing/billingservice.service.ts","webpack:///./src/app/modules/opd/components/billing/clinical/clinical.component.html","webpack:///./src/app/modules/opd/components/billing/clinical/clinical.component.ts","webpack:///./src/app/modules/opd/components/billing/imaging/imaging.component.html","webpack:///./src/app/modules/opd/components/billing/imaging/imaging.component.ts","webpack:///./src/app/modules/opd/components/billing/lab/lab.component.html","webpack:///./src/app/modules/opd/components/billing/lab/lab.component.ts","webpack:///./src/app/modules/opd/components/billing/payment/payment.component.html","webpack:///./src/app/modules/opd/components/billing/payment/payment.component.ts","webpack:///./src/app/modules/opd/components/conform-model/conform-model.component.html","webpack:///./src/app/modules/opd/components/conform-model/conform-model.component.ts","webpack:///./src/app/modules/opd/components/otpgeneration/otpgeneration.component.html","webpack:///./src/app/modules/opd/components/otpgeneration/otpgeneration.component.ts","webpack:///./src/app/modules/opd/components/search-patient/search-patient.component.html","webpack:///./src/app/modules/opd/components/search-patient/search-patient.component.ts","webpack:///./src/app/modules/opd/opd-routing.module.ts","webpack:///./src/app/modules/opd/opd-service.service.ts","webpack:///./src/app/modules/opd/opd.component.html","webpack:///./src/app/modules/opd/opd.component.ts","webpack:///./src/app/modules/opd/opd.module.ts","webpack:///./src/app/modules/opd/page-not-found-component/page-not-found-component.component.html","webpack:///./src/app/modules/opd/page-not-found-component/page-not-found-component.component.ts","webpack:///./src/app/modules/opd/services/opd.service.ts","webpack:///./src/app/shared/directives/disable-control.directive.ts"],"names":[],"mappings":"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","file":"modules-opd-opd-module-ngfactory.js","sourcesContent":["<div class=\"mat-tooltip\" [ngClass]=\"tooltipClass\" [class.mat-tooltip-handset]=\"(_isHandset | async)?.matches\" [@state]=\"_visibility\" (@state.start)=\"_animationStart()\" (@state.done)=\"_animationDone($event)\">{{message}}</div>","<div class=\"col-sm-12 addpatient no-padding\">\r\n  <form [formGroup]=\"formGroup\" #formDir=\"ngForm\" id=\"registration-form\" (ngSubmit)=\"onRegisterationFormSubmit()\"\r\n    autocomplete=\"on\">\r\n\r\n    <div class=\"row m-0\">\r\n      <!-- Left Column Starts Here -->\r\n      <div class=\"col-sm-2 p-5\">\r\n        <div class=\"col-sm-12 p-l-r-5 p-b-5\" *ngIf=\"!isQuickRegistration\">\r\n          <label>{{ 'COMMONLABELS.PATIENT_ID_TEXT' | translate }}</label>\r\n          <input type=\"text\" id=\"hospatientId\" formControlName=\"hosPatientId\" [attr.disabled]=\"true\" tabindex=\"3\" />\r\n        </div>\r\n        <!-- Patient Image View/Upload Section Starts -->\r\n        <div class=\"select-image col-sm-12 p-l-r-5 p-b-5\" [ngClass]=\"{ 'image-uploaded': imgUrl }\">\r\n          <div class=\"selected-img\">\r\n            <img [src]=\"imgUrl\" *ngIf=\"imgUrl\" />\r\n          </div>\r\n          <input id=\"file\" type=\"file\" (change)=\"onFileChanged($event.target.files)\" #fileInput />\r\n          <div *ngIf=\"!imgUrl\" class=\"profile-image-upload\">\r\n            <div class=\"button upload-img\" (click)=\"onFileChanged($event.target.files)\">\r\n              <img class=\"profile-rounded-box\" src=\"assets/images/user-male.png\" />\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"imgUrl\">\r\n            <div class=\"button upload-img\" (click)=\"onFileChanged($event.target.files)\">\r\n              <a> {{ 'OPD.CHOOSE_TEXT' | translate }} </a>\r\n            </div>\r\n            <br />\r\n            <div class=\"button remove-img\" *ngIf=\"imgUrl\" (click)=\"removeImage()\">\r\n              <a> {{ 'OPD.REMOVE_IMAGE_TEXT' | translate }} </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Patient Image View/Upload Section Ends -->\r\n\r\n        <!-- Finger print start -->\r\n        <div class=\"row m-0 mt-2 pl-1\" *ngIf=\"fingerPrint.length && isFinger\">\r\n          <div class=\"col-sm-6 p-0\" *ngFor=\"let finger of fingerPrint; index as i\" [class.col-sm-12]=\"fingerPrint.length === 1\" [class.pl-5]=\"fingerPrint.length === 1\" [class.text-center]=\"i === 0 && fingerPrint.length === 2\">\r\n            <i class=\"mdi mdi-fingerprint\" *ngIf=\"finger.fingerprint\"></i>\r\n            <h3 class=\"finger-indicator\" [class.pl-2]=\"fingerPrint.length === 1\" *ngIf=\"finger.fingerprint\"> {{finger.leftRightIndicator}} </h3>\r\n            <ng-container [ngSwitch]=\"finger.fingerType\" *ngIf=\"finger.fingerprint\">\r\n              <div *ngSwitchCase=\"'THUMB'\"> {{ 'OPD.THUMB' | translate }} </div>\r\n              <div *ngSwitchCase=\"'FOREFINGER'\"> {{ 'OPD.FORE_FINGER' | translate }} </div>\r\n              <div *ngSwitchCase=\"'MIDDILEFINGER'\"> {{ 'OPD.MIDDLE_FINGER' | translate }} </div>\r\n              <div *ngSwitchCase=\"'RINGFINGER'\"> {{ 'OPD.RING_FINGER' | translate }} </div>\r\n              <div *ngSwitchCase=\"'LITTLEFINGER'\"> {{ 'OPD.LITTLE_FINGER' | translate }} </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12 add-more-dtls p-0 mt-2 p-l-r-10\" [class.ml-3]=\"isFinger\">\r\n          <a (click)=\"captureFinger(false)\" *ngIf=\"!isFinger\">{{ 'OPD.CAPTURE_FINGER_PRINT' | translate }}</a>\r\n          <a (click)=\"captureFinger(true)\" *ngIf=\"fingerPrint.length && isFinger\">{{ 'OPD.EDIT_FINGER_PRINT' | translate }}</a>\r\n        </div>\r\n        <!-- Finger print end -->\r\n\r\n        <!-- Patient Aadhaar Number input Starts -->\r\n        <div class=\"col-sm-12 p-l-r-5 p-t-10 p-b-5\">\r\n          <label>{{ 'COMMONLABELS.AADHAR_NO_TEXT' | translate }}</label>\r\n          <input id=\"aadhaaNo\" type=\"text\" id=\"aadhaarNo\" formControlName=\"aadhaarNo\" minLength=\"12\" maxLength=\"12\"\r\n            tabindex=\"1\" />\r\n          <div *ngIf=\"\r\n              formGroup.controls['aadhaarNo'].invalid &&\r\n              (formGroup.controls['aadhaarNo'].dirty ||\r\n                formGroup.controls['aadhaarNo'].touched ||\r\n                formDir.submitted)\r\n            \" class=\"has-error popover-style\" role=\"alert\">\r\n            <div *ngIf=\"formGroup.controls['aadhaarNo'].errors.pattern\" class=\"dynamic_popover\">\r\n              * Enter numbers\r\n              <span class=\"doArrow\"></span>\r\n            </div>\r\n            <div *ngIf=\"formGroup.controls['aadhaarNo'].errors.minlength\" class=\"dynamic_popover\">\r\n              * aadhaar number is too small\r\n              <span class=\"doArrow\"></span>\r\n            </div>\r\n            <div *ngIf=\"formGroup.controls['aadhaarNo'].errors.maxlength\" class=\"dynamic_popover\">\r\n              * aadhaar number is too long\r\n              <span class=\"doArrow\"></span>\r\n            </div>\r\n          </div>\r\n          <!-- Patient Aadhaar Number input Ends -->\r\n\r\n          <!-- Patient Blood Group input Starts -->\r\n          <!-- <div class=\"col-sm-12 p-l-r-5 p-b-5\">\r\n            <label>{{ 'OPD.BLOOD_GROUP_TEXT' | translate }}</label>\r\n            <select id=\"bloodGrpNm\" formControlName=\"bloodGrpNm\" tabindex=\"2\">\r\n              <option [ngValue]=\"null\"></option>\r\n              <option *ngFor=\"let bloodGroup of commonValues.BLOOD_GROUP\" [value]=\"bloodGroup.attributeCode\">\r\n                {{bloodGroup.attributeCode}}</option>\r\n            </select>\r\n          </div> -->\r\n          <!-- Patient Blood Group input Ends -->\r\n        </div>\r\n        <!-- Patient Aadhaar Number input Ends -->\r\n\r\n        <!-- Patient Blood Group input Starts -->\r\n        <div class=\"col-sm-12 p-l-r-5 p-b-5\">\r\n          <label>{{ 'OPD.BLOOD_GROUP_TEXT' | translate }}</label>\r\n          <select id=\"bloodGrpNm\" formControlName=\"bloodGrpNm\" tabindex=\"2\">\r\n            <option [ngValue]=\"null\"></option>\r\n            <option *ngFor=\"let bloodGroup of commonValues.BLOOD_GROUP\" [value]=\"bloodGroup.attributeCode\">\r\n              {{ bloodGroup.attributeCode }}</option>\r\n          </select>\r\n        </div>\r\n        <!-- Patient Blood Group input Ends -->\r\n      </div>\r\n      <!-- Left Column Ends Here -->\r\n\r\n      <div class=\"col-sm-10 row m-0 p-0\">\r\n        <div class=\"col-sm-12 p-0\">\r\n          <div class=\"col-sm-9 m-t-b-10\" *ngIf=\"!editable\">\r\n            <div class=\"menu-radio-group\">\r\n              <input type=\"radio\" name=\"registrationType\" id=\"opd\" value=\"opdRegistration\"\r\n                formControlName=\"registrationType\" />\r\n              <label for=\"opd\">OPD REGISTRATION</label>\r\n              <input type=\"radio\" name=\"registrationType\" id=\"ipd\" value=\"ipdRegistration\"\r\n                formControlName=\"registrationType\" />\r\n              <label for=\"ipd\">IPD REGISTRATION</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Middle Column Start Here -->\r\n        <div class=\"col-sm-8 p-l-r-5\">\r\n          <div class=\"bg-white common-radius box-shadow col-sm-12 p-l-r-5 p-t-b-10\">\r\n            <div class=\"row m-0 p-l-r-0 p-b-5\">\r\n              <!-- Patient First Name input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5\">\r\n                <div class=\"col-sm-12 p-0\">\r\n                  <label>{{ 'OPD.FIRST_NAME_TEXT' | translate }}\r\n                    <span class=\"astrik-symbol \">\r\n                      <i class=\"fa fa-asterisk \"></i>\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n                <div class=\"row m-0\">\r\n                  <div class=\"col-sm-2 p-l-0 p-r-5 \">\r\n                    <select id=\"honorificNm\" formControlName=\"honorificNm\" tabindex=\"3\">\r\n                      <option [ngValue]=\"null\"></option>\r\n                      <option *ngFor=\"let honorific of commonValues.HONORIFICS\" [value]=\"honorific.attributeCode\">\r\n                        {{ honorific.description }}</option>\r\n                    </select>\r\n                    <div *ngIf=\"\r\n                        formGroup.controls['honorificNm'].invalid &&\r\n                        (formGroup.controls['honorificNm'].dirty ||\r\n                          formGroup.controls['honorificNm'].touched ||\r\n                          formDir.submitted)\r\n                      \" class=\"has-error popover-style\" role=\"alert\">\r\n                      <div *ngIf=\"formGroup.controls['honorificNm'].errors.required\" class=\"dynamic_popover\">\r\n                        * Honorific is required\r\n                        <span class=\"doArrow\"></span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-10 no-padding\">\r\n                    <input id=\"firstNm\" type=\"text\" formControlName=\"firstNm\" tabindex=\"4\" />\r\n                    <div *ngIf=\"\r\n                        formGroup.controls['firstNm'].invalid &&\r\n                        (formGroup.controls['firstNm'].dirty ||\r\n                          formGroup.controls['firstNm'].touched ||\r\n                          formDir.submitted)\r\n                      \" class=\"has-error popover-style\" role=\"alert\">\r\n                      <div *ngIf=\"formGroup.controls['firstNm'].errors.pattern\" class=\"dynamic_popover\">\r\n                        * Enter valid name\r\n                        <span class=\"doArrow\"></span>\r\n                      </div>\r\n                      <div *ngIf=\"formGroup.controls['firstNm'].errors.required\" class=\"dynamic_popover\">\r\n                        * First Name is required\r\n                        <span class=\"doArrow\"></span>\r\n                      </div>\r\n                      <div *ngIf=\"formGroup.controls['firstNm'].errors.minlength\" class=\"dynamic_popover\">\r\n                        * First Name is too small\r\n                        <span class=\"doArrow\"></span>\r\n                      </div>\r\n                      <div *ngIf=\"formGroup.controls['firstNm'].errors.maxlength\" class=\"dynamic_popover\">\r\n                        * First Name is too long\r\n                        <span class=\"doArrow\"></span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- Patient First Name input Ends -->\r\n\r\n              <!-- Patient Middle Name input Starts -->\r\n              <div class=\"col-sm-3 p-l-r-5\">\r\n                <label>{{ 'OPD.MIDDLE_NAME_TEXT' | translate }}</label>\r\n                <input id=\"middleNm\" type=\"text\" formControlName=\"middleNm\" tabindex=\"5\" />\r\n              </div>\r\n              <!-- Patient Middle Name input Ends -->\r\n\r\n              <!-- Patient Last Name input Starts -->\r\n              <div class=\"col-sm-3 p-l-r-5\">\r\n                <label>{{ 'OPD.LAST_NAME_TEXT' | translate }}\r\n                  <span class=\"astrik-symbol \">\r\n                    <i class=\"fa fa-asterisk \"></i>\r\n                  </span>\r\n                </label>\r\n                <input type=\"text\" id=\"lastNm\" formControlName=\"lastNm\" tabindex=\"6\" />\r\n                <div *ngIf=\"\r\n                    formGroup.controls['lastNm'].invalid &&\r\n                    (formGroup.controls['lastNm'].dirty ||\r\n                      formGroup.controls['lastNm'].touched ||\r\n                      formDir.submitted)\r\n                  \" class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"formGroup.controls['lastNm'].errors.pattern\" class=\"dynamic_popover\">\r\n                    * Enter valid name\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"formGroup.controls['lastNm'].errors.required\" class=\"dynamic_popover\">\r\n                    * Last Name is required\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"formGroup.controls['lastNm'].errors.minlength\" class=\"dynamic_popover\">\r\n                    * Last Name is too small\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"formGroup.controls['lastNm'].errors.maxlength\" class=\"dynamic_popover\">\r\n                    * Last Name is too long\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- Patient Last Name input Ends -->\r\n            </div>\r\n            <div class=\"row m-0 p-l-r-0 p-b-5\">\r\n              <!-- Patient Gender input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5\">\r\n                <label>{{ 'OPD.GENDER_TEXT' | translate }}\r\n                  <span class=\"astrik-symbol \">\r\n                    <i class=\"fa fa-asterisk \"></i>\r\n                  </span>\r\n                </label>\r\n                <select id=\"gender\" formControlName=\"gender\" tabindex=\"7\">\r\n                  <option value=\"Male\" class=\"md-primary \">Male</option>\r\n                  <option value=\"Female\" class=\"md-primary \">Female</option>\r\n                  <option value=\"Transgender\" class=\"md-primary \">Transgender</option>\r\n                </select>\r\n                <div *ngIf=\"\r\n                    formGroup.controls['gender'].invalid &&\r\n                    (formGroup.controls['gender'].dirty ||\r\n                      formGroup.controls['gender'].touched ||\r\n                      formDir.submitted)\r\n                  \" class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"formGroup.controls['gender'].errors.required\" class=\"dynamic_popover\">\r\n                    * Gender is required\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <!-- Patient Email input Ends -->\r\n                </div>\r\n              </div>\r\n\r\n                  <!-- Patient Mobile Number input Starts -->\r\n                <div class=\"col-sm-6 p-l-r-5\">\r\n                  <label>{{ 'COMMONLABELS.MOBILE_NO_TEXT' | translate }}</label>\r\n                  <input type=\"text\" id=\"mobileNo\" formControlName=\"mobileNo\" minLength=\"10\" maxLength=\"10\"\r\n                    tabindex=\"8\" />\r\n                  <div *ngIf=\"\r\n                  formGroup.controls['mobileNo'].invalid &&\r\n                  (formGroup.controls['mobileNo'].dirty ||\r\n                    formGroup.controls['mobileNo'].touched ||\r\n                    formDir.submitted)\r\n                \" class=\"has-error popover-style\" role=\"alert\">\r\n                    <div *ngIf=\"formGroup.controls['mobileNo'].errors.required\" class=\"dynamic_popover\">\r\n                      * mobile number is required\r\n                      <span class=\"doArrow\"></span>\r\n                    </div>\r\n                    <div *ngIf=\"formGroup.controls['mobileNo'].errors.pattern\" class=\"dynamic_popover\">\r\n                      * Enter valid mobile number\r\n                      <span class=\"doArrow\"></span>\r\n                    </div>\r\n                    <div *ngIf=\"formGroup.controls['mobileNo'].errors.minlength\" class=\"dynamic_popover\">\r\n                      * mobile number is too small\r\n                      <span class=\"doArrow\"></span>\r\n                    </div>\r\n                    <div *ngIf=\"formGroup.controls['mobileNo'].errors.maxlength\" class=\"dynamic_popover\">\r\n                      * mobile number is too long\r\n                      <span class=\"doArrow\"></span>\r\n                    </div>\r\n                    <!-- Patient Occupation Organisation input Ends -->\r\n                  </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"row m-0 p-l-r-0 p-b-5\">\r\n              <!-- Patient DOB input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5\">\r\n                <label>{{ 'OPD.DOB_TEXT' | translate }}</label>\r\n                <div class=\"dateTime-picker-p\">\r\n                  <p class=\" input-group\">\r\n                    <input type=\"text\" placeholder=\"DD/MM/YYYY\" id=\"dateOfBirth\" class=\"dob-input-width\"\r\n                      (click)=\"datePickerToggler(dateOfBirth)\" [min]=\"minDate\" [max]=\"formGroup.get('maxDate').value\"\r\n                      [matDatepicker]=\"dateOfBirth\" formControlName=\"birthDt\" tabindex=\"9\" readonly />\r\n                    <mat-datepicker #dateOfBirth></mat-datepicker>\r\n                    <span class=\"input-group-btn w-10 \">\r\n                      <button type=\"button\" class=\"btn btn-default btn-calender datepicker calender-button-height\"\r\n                        (click)=\"datePickerToggler(dateOfBirth)\">\r\n                        <i class=\"fa fa-calendar \"></i>\r\n                      </button>\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <!-- Patient DOB input Ends -->\r\n\r\n              <!-- Patient Age input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5 age-input-group\">\r\n                <label>{{ 'OPD.AGE_TEXT' | translate }}\r\n                  <p>(Years/Months/Days)</p>\r\n                  <span class=\"astrik-symbol \">\r\n                    <i class=\"fa fa-asterisk \"></i>\r\n                  </span>\r\n                </label>\r\n                <div class=\"input-group\">\r\n                  <input type=\"text\" id=\"ageYears\" class=\"year-element\" maxlength=\"3\" formControlName=\"ageYears\"\r\n                    tabindex=\"10\" />\r\n                  <input type=\"text\" id=\"ageMonths\" class=\"month-element\" maxlength=\"3\" formControlName=\"ageMonths\"\r\n                    tabindex=\"11\" />\r\n                  <input type=\"text\" id=\"ageDays\" class=\"day-element\" maxlength=\"3\" formControlName=\"ageDays\"\r\n                    tabindex=\"12\" />\r\n                </div>\r\n                <div *ngIf=\"!isInvalidAge\" class=\"has-error popover-style\" role=\"alert\">\r\n                  <div class=\"dynamic_popover has-error popover-style\">\r\n                    * Enter valid age\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                </div>\r\n                <div *ngIf=\"\r\n                formGroup.controls['age'].invalid &&\r\n                (formGroup.controls['age'].dirty ||\r\n                  formGroup.controls['age'].touched ||\r\n                  formDir.submitted)\r\n              \" class=\"has-error popover-style\">\r\n                  <div *ngIf=\"formGroup.controls['age'].errors.required\" class=\"dynamic_popover\">\r\n                    * Age is required\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                </div>\r\n                <div *ngIf=\"formGroup.controls['ageYears'].invalid\" class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"formGroup.controls['ageYears'].errors.pattern\" class=\"dynamic_popover\">\r\n                    * Enter numbers\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                </div>\r\n                <div *ngIf=\"formGroup.controls['ageMonths'].invalid\" class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"formGroup.controls['ageMonths'].errors.pattern\" class=\"dynamic_popover\">\r\n                    * Enter numbers\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <!-- Patient City input Ends -->\r\n                </div>\r\n                <div *ngIf=\"formGroup.controls['ageDays'].invalid\" class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"formGroup.controls['ageDays'].errors.pattern\" class=\"dynamic_popover\">\r\n                    * Enter numbers\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- Patient Age input Ends -->\r\n            </div>\r\n            <div class=\"row m-0 p-l-r-0 p-b-5\">\r\n              <!-- Patient Email input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5\">\r\n                <label>{{ 'OPD.EMAIL_TEXT' | translate }}</label>\r\n                <input type=\"text\" id=\"emailId\" formControlName=\"emailId\" tabindex=\"13\" />\r\n\r\n                <div *ngIf=\"\r\n                formGroup.controls['emailId'].invalid &&\r\n                (formGroup.controls['emailId'].dirty ||\r\n                  formGroup.controls['emailId'].touched ||\r\n                  formDir.submitted)\r\n              \" class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"formGroup.controls['emailId'].errors.pattern\" class=\"dynamic_popover\">\r\n                    * Enter valid email\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- Patient Email input Ends -->\r\n\r\n              <!-- Patient Alternate Contact input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5\">\r\n                <label>{{ 'OPD.ALTERNATE_NO_TEXT' | translate }}</label>\r\n                <input type=\"text\" id=\"alternateContactNo\" formControlName=\"alternateContactNo\" minLength=\"10\"\r\n                  maxLength=\"10\" tabindex=\"14\" />\r\n                <div *ngIf=\"\r\n                formGroup.controls['alternateContactNo'].invalid &&\r\n                (formGroup.controls['alternateContactNo'].dirty ||\r\n                  formGroup.controls['alternateContactNo'].touched ||\r\n                  formDir.submitted)\r\n              \" class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"\r\n                  formGroup.controls['alternateContactNo'].errors.required\r\n                \" class=\"dynamic_popover\">\r\n                    * mobile number is required\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"\r\n                  formGroup.controls['alternateContactNo'].errors.pattern\r\n                \" class=\"dynamic_popover\">\r\n                    * Enter valid mobile number\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"\r\n                  formGroup.controls['alternateContactNo'].errors.minlength\r\n                \" class=\"dynamic_popover\">\r\n                    * mobile number is too small\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"\r\n                  formGroup.controls['alternateContactNo'].errors.maxlength\r\n                \" class=\"dynamic_popover\">\r\n                    * mobile number is too long\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <!-- Patient Country input Ends -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row m-0 p-l-r-0 p-b-5\" *ngIf=\"!isQuickRegistration\">\r\n              <!-- Patient Religion input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5\">\r\n                <label>{{ 'OPD.RELIGION_TEXT' | translate }}</label>\r\n                <select id=\"religionNm\" formControlName=\"religionNm\" tabindex=\"15\">\r\n                  <option [ngValue]=\"null\"></option>\r\n                  <option *ngFor=\"let religion of commonValues.RELIGION\" [value]=\"religion.attributeCode\">\r\n                    {{ religion.description }}</option>\r\n                </select>\r\n              </div>\r\n              <!-- Patient Religion input Ends -->\r\n\r\n              <!-- Patient Occupation input Starts -->\r\n              <div class=\"col-sm-3 p-l-r-5\">\r\n                <label>{{ 'OPD.OCCUPATION_TEXT' | translate }}</label>\r\n                <select id=\"occupation\" formControlName=\"occupation\" tabindex=\"16\">\r\n                  <option [ngValue]=\"null\"></option>\r\n                  <option *ngFor=\"let occupation of commonValues.OCCUPATION\" [value]=\"occupation.attributeCode\">\r\n                    {{ occupation.description }}</option>\r\n                </select>\r\n              </div>\r\n              <!-- Patient Occupation input Ends -->\r\n\r\n              <!-- Patient Occupation Organisation input Starts -->\r\n              <div class=\"col-sm-3 p-l-r-5\">\r\n                <label>{{ 'OPD.ORG_NAME_TEXT' | translate }}</label>\r\n                <input type=\"text\" id=\"patientEmployer\" minlength=\"3\" maxlength=\"30\" formControlName=\"patientEmployer\"\r\n                  tabindex=\"17\" />\r\n                <div *ngIf=\"\r\n                formGroup.controls['patientEmployer'].invalid &&\r\n                (formGroup.controls['patientEmployer'].dirty ||\r\n                  formGroup.controls['patientEmployer'].touched ||\r\n                  formDir.submitted)\r\n              \" class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"formGroup.controls['patientEmployer'].errors.minlength\" class=\"dynamic_popover\">\r\n                    * Name is too small\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"formGroup.controls['patientEmployer'].errors.maxlength\" class=\"dynamic_popover\">\r\n                    * Name is too long\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Middle Column Ends Here -->\r\n\r\n        <!-- Right Column Starts Here -->\r\n        <div class=\"col-sm-4 p-l-r-5\">\r\n          <div class=\"bg-white common-radius box-shadow row m-0 p-l-r-5 p-t-b-10\">\r\n            <!-- Patient Full Address input Starts -->\r\n            <div class=\"col-sm-12 p-l-r-5\">\r\n              <label>{{ 'OPD.ADDRESS_TEXT' | translate }}\r\n                <span class=\"astrik-symbol \">\r\n                  <i class=\"fa fa-asterisk \"></i>\r\n                </span>\r\n              </label>\r\n              <textarea id=\"addressLine1\" rows=\"4\" formControlName=\"addressLine1\" tabindex=\"18\"\r\n                [ngStyle]=\"{ height: isQuickRegistration ? '92px' : '150px' }\"></textarea>\r\n              <div *ngIf=\"\r\n              formGroup.controls['addressLine1'].invalid &&\r\n              (formGroup.controls['addressLine1'].dirty ||\r\n                formGroup.controls['addressLine1'].touched ||\r\n                formDir.submitted)\r\n            \" class=\"has-error popover-style\" role=\"alert\">\r\n                <div *ngIf=\"formGroup.controls['addressLine1'].errors.required\"\r\n                  class=\"dynamic_popover address-pop-over\">\r\n                  * Address is required\r\n                  <span class=\"doArrow\"></span>\r\n                </div>\r\n                <div *ngIf=\"formGroup.controls['addressLine1'].errors.minlength\"\r\n                  class=\"dynamic_popover address-pop-over\">\r\n                  * Address is too small\r\n                  <span class=\"doArrow\"></span>\r\n                </div>\r\n                <div *ngIf=\"formGroup.controls['addressLine1'].errors.maxlength\"\r\n                  class=\"dynamic_popover address-pop-over\">\r\n                  * Address is too long\r\n                  <span class=\"doArrow\"></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Patient Full Address input Ends -->\r\n            <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n              <label>{{ 'OPD.LOCATION_TEXT' | translate }}</label>\r\n              <input type=\"text\" id=\"location\" formControlName=\"localityNm\" tabindex=\"19\" />\r\n            </div>\r\n            <!-- Patient Pincode input Starts -->\r\n            <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n              <label>{{ 'OPD.PIN_TEXT' | translate }}</label>\r\n              <input type=\"text\" id=\"pincode\" formControlName=\"pincode\" minLength=\"6\" maxLength=\"6\" tabindex=\"19\" />\r\n              <div *ngIf=\"\r\n              formGroup.controls['pincode'].invalid &&\r\n              (formGroup.controls['pincode'].dirty ||\r\n                formGroup.controls['pincode'].touched ||\r\n                formDir.submitted)\r\n            \" class=\"has-error popover-style\" role=\"alert\">\r\n                <div *ngIf=\"formGroup.controls['pincode'].errors.pattern\" class=\"dynamic_popover\">\r\n                  * Enter numbers\r\n                  <span class=\"doArrow\"></span>\r\n                </div>\r\n                <div *ngIf=\"formGroup.controls['pincode'].errors.minlength\" class=\"dynamic_popover\">\r\n                  * pincode is too small\r\n                  <span class=\"doArrow\"></span>\r\n                </div>\r\n                <div *ngIf=\"formGroup.controls['pincode'].errors.maxlength\" class=\"dynamic_popover\">\r\n                  * pincode is too long\r\n                  <span class=\"doArrow\"></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Patient City input Starts -->\r\n            <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n              <label>{{ 'OPD.CITY_TEXT' | translate }}\r\n                <span class=\"astrik-symbol \">\r\n                  <i class=\"fa fa-asterisk \"></i>\r\n                </span>\r\n              </label>\r\n              <input type=\"text\" id=\"cityNm\" minlength=\"3\" maxlength=\"20\" formControlName=\"cityNm\"\r\n                tabindex=\"20\" />\r\n              <div *ngIf=\"\r\n          formGroup.controls['cityNm'].invalid &&\r\n          (formGroup.controls['cityNm'].dirty ||\r\n            formGroup.controls['cityNm'].touched ||\r\n            formDir.submitted)\r\n        \" class=\"has-error popover-style\" role=\"alert\">\r\n                <div *ngIf=\"formGroup.controls['cityNm'].errors.required\" class=\"dynamic_popover\">\r\n                  * City is required\r\n                  <span class=\"doArrow\"></span>\r\n                </div>\r\n                <div *ngIf=\"formGroup.controls['cityNm'].errors.minlength\" class=\"dynamic_popover\">\r\n                  * City is too small\r\n                  <span class=\"doArrow\"></span>\r\n                </div>\r\n                <div *ngIf=\"formGroup.controls['cityNm'].errors.maxlength\" class=\"dynamic_popover\">\r\n                  * City is too long\r\n                  <span class=\"doArrow\"></span>\r\n                </div>\r\n                <div *ngIf=\"formGroup.controls['cityNm'].errors.pattern\" class=\"dynamic_popover\">\r\n                  * Enter valid City name\r\n                  <span class=\"doArrow\"></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Patient City input Ends -->\r\n\r\n            <!-- Patient District input Starts -->\r\n            <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n              <label class=\"center-block\">{{ 'OPD.DISTRICT_TEXT' | translate }}\r\n              </label>\r\n              <select id=\"districtNm\" formControlName=\"districtNm\" tabindex=\"21\"\r\n                [compareWith]=\"districtComparator\">\r\n                <option [ngValue]=\"null\"></option>\r\n                <option *ngFor=\"let district of districtList\" [value]=\"district.districtNm\">\r\n                  {{ district.districtNm }}</option>\r\n              </select>\r\n            </div>\r\n            <!-- Patient District input Ends -->\r\n\r\n            <!-- Patient State input Starts -->\r\n            <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n              <label class=\"center-block\">{{ 'OPD.STATE_TEXT' | translate }}\r\n                <span class=\"astrik-symbol \">\r\n                  <i class=\"fa fa-asterisk \"></i>\r\n                </span>\r\n              </label>\r\n              <select id=\"stateNm\" formControlName=\"stateNm\" (change)=\"fetchDistricts()\"\r\n                [compareWith]=\"stateIdComparator\" tabindex=\"22\">\r\n                <option [ngValue]=\"null\"></option>\r\n                <option *ngFor=\"let state of statesList\" [ngValue]=\"state\">{{\r\n          state.stateName\r\n        }}</option>\r\n              </select>\r\n              <div *ngIf=\"\r\n          formGroup.controls['stateNm'].invalid &&\r\n          (formGroup.controls['stateNm'].dirty ||\r\n            formGroup.controls['stateNm'].touched ||\r\n            formDir.submitted)\r\n        \" class=\"has-error popover-style\" role=\"alert\">\r\n                <div *ngIf=\"formGroup.controls['stateNm'].errors.required\" class=\"dynamic_popover\">\r\n                  * State is required\r\n                  <span class=\"doArrow\"></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Patient State input Ends -->\r\n\r\n            <!-- Patient Country input Starts -->\r\n            <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n              <label>{{ 'OPD.COUNTRY_TEXT' | translate }}\r\n                <span class=\"astrik-symbol \">\r\n                  <i class=\"fa fa-asterisk \"></i>\r\n                </span>\r\n              </label>\r\n              <input type=\"text\" id=\"countryNm\" formControlName=\"countryNm\" tabindex=\"23\" />\r\n              <div *ngIf=\"\r\n              formGroup.controls['countryNm'].invalid &&\r\n              (formGroup.controls['countryNm'].dirty ||\r\n              formGroup.controls['countryNm'].touched ||\r\n              formDir.submitted)\r\n              \" class=\"has-error popover-style\" role=\"alert\">\r\n              <div *ngIf=\"formGroup.controls['countryNm'].errors.required\" class=\"dynamic_popover\">\r\n                * Country is required\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n              <div *ngIf=\"formGroup.controls['countryNm'].errors.minlength\" class=\"dynamic_popover\">\r\n                * Country is too small\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n              <div *ngIf=\"formGroup.controls['countryNm'].errors.maxlength\" class=\"dynamic_popover\">\r\n                * Country is too long\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n            </div>\r\n            </div>\r\n            <!-- Patient Country input Ends -->\r\n          </div>\r\n        </div>\r\n        <!-- Right Column Ends Here -->\r\n\r\n        <!-- Ths section is only for the ipd patients .Ipd related section start here  -->\r\n        <div *ngIf=\"isIpdOrOpdregistration === 'ipdRegistration'\" class=\"row m-0\">\r\n            <div class=\"m-t-2 col-sm-12 p-l-r-5 m-t-10\">\r\n              <div class=\"bg-white common-radius box-shadow p-0 col-sm-12\">\r\n                <div class=\"row m-0 p-0 border-bottom form-section-tittle\">\r\n                  <h3 class=\"p-l-5\">REFERRED BY PRACTITIONER/HOSPITAL/CLINIC</h3>\r\n                </div>\r\n                <div class=\"row m-0 m-0 p-t-b-10\">\r\n                  <div class=\"col-sm-3 p-l-r-5 p-b-5\">\r\n                    <label class=\"center-block\">{{'COMMONLABELS.REFERRAL_TYPE' | translate}}</label>\r\n                    <select id=\"referralType\" formControlName=\"referralType\" tabindex=\"24\"\r\n                      [compareWith]=\"refTypeComparator\" (change)=\"orgReferenceDoctors('referralChange')\">\r\n                      <option></option>\r\n                      <option *ngFor=\"let referrence of referenceList\" [ngValue]=\"referrence.attributeCode\">\r\n                        {{ referrence.attributeCode }}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-sm-3 p-l-r-5 p-b-5\">\r\n                    <label>{{'COMMONLABELS.HOSPITAL_ORGANISATION_NAME' | translate}}</label>\r\n                    <select id=\"refOrgNm\" formControlName=\"refOrgNm\" tabindex=\"24\"\r\n                      [compareWith]=\"refOrgComparator\" (change)=\"orgReferenceDoctors('organisationChange')\">\r\n                      <option></option>\r\n                      <option *ngFor=\"let orgDoctor of refOrgList\" [value]=\"orgDoctor.refOrgNm\">\r\n                        {{ orgDoctor.refOrgNm }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-sm-3 p-l-r-5 p-b-5\">\r\n                    <label>{{ 'COMMONLABELS.DOCTOR_NAME_TEXT' | translate }}</label>\r\n                    <select id=\"refDoctorNm\" formControlName=\"refDoctorNm\" tabindex=\"24\"\r\n                      [compareWith]=\"refDoctorComparator\" (change)=\"onselctingconsultantNm()\">\r\n                      <option></option>\r\n                      <option *ngFor=\"let orgDoctor of orgRefDoctorsList\" [ngValue]=\"orgDoctor\">\r\n                        {{ orgDoctor.honorificNm }}{{ orgDoctor.refDoctorNm }}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-sm-3 p-l-r-5 p-b-5\">\r\n                    <label>{{ 'COMMONLABELS.MOBILE_NO_TEXT' | translate }}</label>\r\n                    <input id=\"refDoctorContactNo\" type=\"text\" tabindex=\"24\"\r\n                      formControlName=\"refDoctorContactNo\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- department and doctor related details section start -->\r\n            <div class=\"m-t-2 col-sm-12 p-l-r-5 m-t-10\">\r\n              <div class=\"bg-white common-radius box-shadow p-0 col-sm-12\">\r\n                <!-- <label class=\"p-l-5\">Emergency contact information</label><hr> -->\r\n                <div class=\"row m-0 p-0 border-bottom form-section-tittle\">\r\n                  <h3 class=\"p-l-5\">Whom To Meet</h3>\r\n                </div>\r\n                <div class=\"row m-0 p-l-r-5 p-t-b-10 \">\r\n                  <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n                    <label>{{ 'OPD.DEPARTMENTS_TEXT' | translate }}\r\n                      <span class=\"astrik-symbol \">\r\n                        <i class=\"fa fa-asterisk \"></i>\r\n                      </span>\r\n                    </label>\r\n                    <select id=\"deptId\" formControlName=\"deptId\" tabindex=\"24\"\r\n                      (change)=\"deptwiseDoctors('clinical')\" [compareWith]=\"departmentComparator\">\r\n                      <option></option>\r\n                      <option *ngFor=\"let department of departmentList\" [ngValue]=\"department.deptId\">\r\n                        {{ department.deptName }}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"\r\n          formGroup.controls['deptId'].invalid &&\r\n          (formGroup.controls['deptId'].dirty ||\r\n            formGroup.controls['deptId'].touched ||\r\n            formDir.submitted)\r\n        \" class=\"has-error popover-style\" role=\"alert\">\r\n                      <div *ngIf=\"formGroup.controls['deptId'].errors.required\" class=\"dynamic_popover\">\r\n                        * Department is required\r\n                        <span class=\"doArrow\"></span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n                    <label>{{ 'OPD.CONSULTANT_NAME_TEXT' | translate }}\r\n                      <span class=\"astrik-symbol\">\r\n                        <i class=\"fa fa-asterisk\"></i>\r\n                      </span>\r\n                    </label>\r\n                    <select id=\"doctorId\" formControlName=\"doctorId\" tabindex=\"24\"\r\n                      [compareWith]=\"doctorComparator\">\r\n                      <option [ngValue]=\"undefined\"></option>\r\n                      <option *ngFor=\"let doctor of deptWiseDoctorsList\" [ngValue]=\"doctor\">\r\n                        {{ doctor.firstNm }}</option>\r\n                    </select>\r\n                    <div *ngIf=\"\r\n          formGroup.controls['doctorId'].invalid &&\r\n          (formGroup.controls['doctorId'].dirty ||\r\n            formGroup.controls['doctorId'].touched ||\r\n            formDir.submitted)\r\n        \" class=\"has-error popover-style\" role=\"alert\">\r\n                      <div *ngIf=\"formGroup.controls['doctorId'].errors.required\" class=\"dynamic_popover\">\r\n                        * Doctor is required\r\n                        <span class=\"doArrow\"></span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n                    <label>{{ 'OPD.PATIENT_CATEGORY_TEXT' | translate }}\r\n                      <span class=\"astrik-symbol \">\r\n                        <i class=\"fa fa-asterisk \"></i>\r\n                      </span>\r\n                    </label>\r\n                    <select id=\"patientCategoryNm\" formControlName=\"patientCategoryNm\" tabindex=\"24\"\r\n                      [compareWith]=\"patientCategoryComparator\">\r\n                      <option [ngValue]=\"null\"></option>\r\n                      <option *ngFor=\"let category of patientCategoriesList\" [ngValue]=\"category\">\r\n                        {{ category.displayName }}\r\n                      </option>\r\n                    </select>\r\n                    <div *ngIf=\"\r\n          formGroup.controls['patientCategoryNm'].invalid &&\r\n          (formGroup.controls['patientCategoryNm'].dirty ||\r\n            formGroup.controls['patientCategoryNm'].touched ||\r\n            formDir.submitted)\r\n        \" class=\"has-error popover-style\" role=\"alert\">\r\n                      <div *ngIf=\"\r\n            formGroup.controls['patientCategoryNm'].errors.required\r\n          \" class=\"dynamic_popover\">\r\n                        * PatientCategory is required\r\n                        <span class=\"doArrow\"></span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- department and doctor related details section ends -->\r\n\r\n            <!--  admit related section start here  -->\r\n            <div class=\"m-t-2 col-sm-12 p-l-r-5 m-t-10\">\r\n              <div class=\"bg-white common-radius box-shadow p-0 col-sm-12\">\r\n                <div class=\"row m-0 border-bottom form-section-tittle\">\r\n                  <h3 class=\"p-l-5\">IPD DETAILS</h3>\r\n                </div>\r\n                <div class=\"row m-0 p-l-r-5 p-t-b-10 \">\r\n                  <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n                    <label>{{ 'OPD.WARD_TYPE' | translate }}\r\n                      <span class=\"astrik-symbol\">\r\n                        <i class=\"fa fa-asterisk\"></i>\r\n                      </span>\r\n                    </label>\r\n\r\n                    <select id=\"wardType\" formControlName=\"wardType\" tabindex=\"24\" (change)=\"fetchWardList()\">\r\n                      <option [ngValue]=\"null\"></option>\r\n                      <option *ngFor=\"let wardType of commonValues.WARD_TYPE\"\r\n                        [value]=\"wardType.attributeCode\">\r\n                        {{ wardType.description }}</option>\r\n                    </select>\r\n                    <div *ngIf=\"\r\n          formGroup.controls['wardType'].invalid &&\r\n          (formGroup.controls['wardType'].dirty ||\r\n            formGroup.controls['wardType'].touched ||\r\n            formDir.submitted)\r\n        \" class=\"has-error popover-style\" role=\"alert\">\r\n                      <div *ngIf=\"formGroup.controls['wardType'].errors.required\" class=\"dynamic_popover\">\r\n                        * Ward Type is required\r\n                        <span class=\"doArrow\"></span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n                    <label>{{ 'OPD.WARD' | translate }}\r\n                      <span class=\"astrik-symbol\">\r\n                        <i class=\"fa fa-asterisk\"></i>\r\n                      </span>\r\n                    </label>\r\n                    <select id=\"wardId\" formControlName=\"wardId\" tabindex=\"24\" (change)=\"listOfRoomNames()\">\r\n                      <option [ngValue]=\"null\"></option>\r\n                      <option *ngFor=\"let ward of wardList\" [ngValue]=\"ward.wardId\">{{ ward.wardNm }}</option>\r\n                    </select>\r\n                    <div *ngIf=\"\r\n          formGroup.controls['wardId'].invalid &&\r\n          (formGroup.controls['wardId'].dirty ||\r\n            formGroup.controls['wardId'].touched ||\r\n            formDir.submitted)\r\n        \" class=\"has-error popover-style\" role=\"alert\">\r\n                      <div *ngIf=\"formGroup.controls['wardId'].errors.required\" class=\"dynamic_popover\">\r\n                        * Ward is required\r\n                        <span class=\"doArrow\"></span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n                    <label>{{ 'OPD.ROOM' | translate }}\r\n                      <span class=\"astrik-symbol\">\r\n                        <i class=\"fa fa-asterisk\"></i>\r\n                      </span>\r\n                    </label>\r\n                    <select id=\"room\" formControlName=\"roomId\" tabindex=\"24\">\r\n                      <option [ngValue]=\"null\"></option>\r\n                      <option *ngFor=\"let room of roomList\" [ngValue]=\"room.roomId\">{{ room.roomNo }}</option>\r\n                    </select>\r\n                    <div *ngIf=\"\r\n          formGroup.controls['roomId'].invalid &&\r\n          (formGroup.controls['roomId'].dirty ||\r\n            formGroup.controls['roomId'].touched ||\r\n            formDir.submitted)\r\n        \" class=\"has-error popover-style\" role=\"alert\">\r\n                      <div *ngIf=\"formGroup.controls['roomId'].errors.required\" class=\"dynamic_popover\">\r\n                        * Room is required\r\n                        <span class=\"doArrow\"></span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!--  admit related section  ends -->\r\n        </div>\r\n        <!-- Ths section is only for the ipd patients .Ipd related section ends here -->\r\n\r\n        <!-- Add more details starts Here -->\r\n        <div class=\"col-sm-12 add-more-dtls\" *ngIf=\"isShow\">\r\n          <a (click)=\"showData()\"><i class=\"mdi mdi-plus-circle\"></i>&nbsp;Add More Details...</a>\r\n        </div>\r\n          <!-- Add more details Ends Here -->\r\n\r\n        <!-- Emergency Contact Information Section Starts Here -->\r\n        <div class=\"col-sm-8 p-l-r-5 m-t-10\" *ngIf=\"!isQuickRegistration\">\r\n          <div class=\"bg-white common-radius box-shadow p-0 col-sm-12\">\r\n            <div class=\"col-sm-12 p-0 border-bottom form-section-tittle\">\r\n              <h3 class=\"p-l-10\">\r\n                {{ 'OPD.EMERGENCY_CONTACT_INFORMATION_TEXT' | translate }}\r\n              </h3>\r\n            </div>\r\n            <div class=\"row m-0 p-l-r-5 p-t-b-10\">\r\n              <!-- Patient Emergency Contact Full Name input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5 p-b-5\">\r\n                <label>{{ 'OPD.FULL_NAME_TEXT' | translate }}</label>\r\n                <input type=\"text\" id=\"emergencyContactNm\" formControlName=\"emergencyContactNm\"\r\n                  tabindex=\"24\" />\r\n                <div *ngIf=\"formGroup.controls['emergencyContactNm'].invalid &&\r\n                            (formGroup.controls['emergencyContactNm'].dirty ||\r\n                            formGroup.controls['emergencyContactNm'].touched ||\r\n                            formDir.submitted)\" class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"formGroup.controls['emergencyContactNm'].errors.pattern\" class=\"dynamic_popover\">\r\n                    * Enter valid name\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"formGroup.controls['emergencyContactNm'].errors.minlength\" class=\"dynamic_popover\">\r\n                    * Name is too small\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"formGroup.controls['emergencyContactNm'].errors.maxlength\" class=\"dynamic_popover\">\r\n                    * Name is too long\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- Patient Emergency Contact Full Name input Ends -->\r\n\r\n              <!-- Patient Emergency Contact Relationship input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5 p-b-5\">\r\n                <label class=\"m-t-6\">{{ 'OPD.RELATIONSHIP_TEXT' | translate }}</label>\r\n                <select id=\"relationship_Code\" formControlName=\"relationshipCode\" tabindex=\"27\">\r\n                  <option [ngValue]=\"null\"></option>\r\n                  <option *ngFor=\"let relationship of commonValues.RELATIONSHIP\"\r\n                    [value]=\"relationship.attributeCode\">{{ relationship.description }}</option>\r\n                </select>\r\n              </div>\r\n              <!-- Patient Emergency Contact Relationship input Ends -->\r\n\r\n              <!-- Patient Emergency Contact Mobile Number input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5 p-b-5\">\r\n                <label>{{ 'COMMONLABELS.MOBILE_NO_TEXT' | translate }} </label>\r\n                <input type=\"text\" id=\"emergencyContactNo\" formControlName=\"emergencyContactNo\"\r\n                  minLength=\"10\" maxLength=\"10\" tabindex=\"25\" />\r\n                <div *ngIf=\"formGroup.controls['emergencyContactNo'].invalid &&\r\n                            (formGroup.controls['emergencyContactNo'].dirty ||\r\n                              formGroup.controls['emergencyContactNo'].touched ||\r\n                              formDir.submitted)\" class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"formGroup.controls['emergencyContactNo'].errors.required\" class=\"dynamic_popover\">\r\n                    * mobile number is required\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"formGroup.controls['emergencyContactNo'].errors.pattern\" class=\"dynamic_popover\">\r\n                    * Enter valid mobile number\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"formGroup.controls['emergencyContactNo'].errors.minlength\" class=\"dynamic_popover\">\r\n                    * mobile number is too small\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"formGroup.controls['emergencyContactNo'].errors.maxlength\" class=\"dynamic_popover\">\r\n                    * mobile number is too long\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n              <!-- Patient Emergency Contact Email input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5 p-b-5\">\r\n                <label class=\"center-block m-t-6\">{{'OPD.EMAIL_TEXT' | translate}}</label>\r\n                <input type=\"text\" id=\"emergencyContactEmailId\"\r\n                  formControlName=\"emergencyContactEmailId\" tabindex=\"28\" />\r\n                <div *ngIf=\"formGroup.controls['emergencyContactEmailId'].invalid &&\r\n                            (formGroup.controls['emergencyContactEmailId'].dirty ||\r\n                              formGroup.controls['emergencyContactEmailId'].touched ||\r\n                              formDir.submitted)\" class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"formGroup.controls['emergencyContactEmailId'].errors.pattern\" class=\"dynamic_popover\">\r\n                    * Enter valid EmailId\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <!-- Patient Emergency Contact Full Address input Ends -->\r\n                </div>\r\n              </div>\r\n              <!-- Patient Emergency Contact Email input Ends -->\r\n\r\n              <!-- Patient Emergency Contact Full Address input Starts -->\r\n              <div class=\"col-sm-12 p-l-r-5 p-b-5 \">\r\n                <label>{{ 'OPD.ADDRESS_TEXT' | translate }}</label>\r\n                <textarea id=\"emergencyContactAddress\" rows=\"3 \" class=\"emegency-contact-address\"\r\n                  formControlName=\"emergencyContactAddress\" tabindex=\"26\"></textarea>\r\n              </div>\r\n              <!-- Patient Emergency Contact Full Address input Ends -->\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Emergency Contact Information Section Ends Here -->\r\n\r\n        <!-- Insurance Policy Section Starts Here -->\r\n        <div class=\"col-sm-4 p-l-r-5 m-t-10\" *ngIf=\"!isQuickRegistration\">\r\n          <div class=\"bg-white common-radius box-shadow p-0 col-sm-12\">\r\n            <div class=\"col-sm-12 p-0 border-bottom form-section-tittle\">\r\n              <h3 class=\"p-l-10 \">\r\n                {{ 'OPD.INSURANCE_POLICY_TEXT' | translate }}\r\n              </h3>\r\n            </div>\r\n            <div class=\"row m-0 p-l-r-5 p-t-10\">\r\n              <!-- Patient Primary Insurance Provider input Starts -->\r\n              <div class=\"col-sm-12 p-l-r-5 p-b-5\">\r\n                <ng-container formGroupName=\"primary\">\r\n                  <label>{{ 'OPD.PRIMARY_INSURANCE_PROVIDER_TEXT' | translate }}</label>\r\n                  <select id=\"pinsuranceProviderId\" formControlName=\"pinsuranceProviderId\"\r\n                    [compareWith]=\"insuranceProviderIdComparator\" tabindex=\"29\">\r\n                    <option [ngValue]=\"null\"></option>\r\n                    <option *ngFor=\"let insurance of providerInsuranceList\"\r\n                      [value]=\"insurance.insuranceProviderId\">{{ insurance.insuranceProviderName }}\r\n                    </option>\r\n                  </select>\r\n                </ng-container>\r\n              </div>\r\n              <!-- Patient Primary Insurance Provider input Ends -->\r\n\r\n              <!-- Patient Primary Insurance Number input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5 p-b-5\">\r\n                <ng-container formGroupName=\"primary\">\r\n                  <label class=\"center-block\">{{ 'OPD.PRIMARY_INSURANCE_NO_TEXT' | translate }}</label>\r\n                  <input type=\"number\" id=\"ppatientInsuranceNo\"\r\n                    formControlName=\"ppatientInsuranceNo\" minLength=\"2\" maxLength=\"30\"\r\n                    tabindex=\"30\" />\r\n                </ng-container>\r\n              </div>\r\n              <!-- Patient Primary Insurance Number input Ends -->\r\n\r\n              <!-- Patient Primary Insurance Expiry input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5 p-b-10\">\r\n                <ng-container id=\"primary\" formGroupName=\"primary\">\r\n                  <label>{{ 'OPD.EXPIRY_DATE_TEXT' | translate }}</label>\r\n                  <div class=\"dateTime-picker-p\">\r\n                    <p class=\" input-group  \">\r\n                      <input type=\"text\" id=\"pexpiryDt\" (click)=\"datePickerToggler(primaryExpireDt)\"\r\n                        [matDatepicker]=\"primaryExpireDt\" formControlName=\"pexpiryDt\" tabindex=\"31\"\r\n                        readonly class=\"expiry-input-width\"/>\r\n                      <mat-datepicker #primaryExpireDt></mat-datepicker>\r\n                      <span class=\"input-group-btn w-10 \">\r\n                        <button\r\n                          class=\"btn btn-default btn-calender datepicker calender-button-height\"\r\n                          type=\"button\" (click)=\"datePickerToggler(primaryExpireDt)\">\r\n                          <i class=\"fa fa-calendar \"></i>\r\n                        </button>\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </ng-container>\r\n              </div>\r\n              <!-- Patient Primary Insurance Expiry input Ends -->\r\n            </div>\r\n            <div class=\"row m-0 p-l-r-5 p-t-b-10\">\r\n              <!-- Patient Secondary Insurance Provider input Starts -->\r\n              <div class=\"col-sm-12 p-l-r-5 p-b-5\">\r\n                <ng-container formGroupName=\"secondary\">\r\n                  <label>{{ 'OPD.SECONDARY_INSURANCE_PROVIDER_TEXT' | translate }}\r\n                  </label>\r\n                  <select id=\"sinsuranceProviderId\" formControlName=\"sinsuranceProviderId\" tabindex=\"32\">\r\n                    <option [ngValue]=\"null\"></option>\r\n                    <option *ngFor=\"let insurance of providerInsuranceList\"\r\n                      [value]=\"insurance.insuranceProviderId\">{{ insurance.insuranceProviderName }}\r\n                    </option>\r\n                  </select>\r\n                </ng-container>\r\n              </div>\r\n              <!-- Patient Secondary Insurance Provider input Ends -->\r\n\r\n              <!-- Patient Secondary Insurance Number input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5 p-b-5\">\r\n                <ng-container id=\"secondary\" formGroupName=\"secondary\">\r\n                  <label>{{ 'OPD.SECONDARY_INSURANCE_NO_TEXT' | translate }}</label>\r\n                  <input type=\"number\" id=\"spatientInsuranceNo\"\r\n                    formControlName=\"spatientInsuranceNo\" minLength=\"2\" maxLength=\"30\"\r\n                    tabindex=\"33\" />\r\n                </ng-container>\r\n              </div>\r\n              <!-- Patient Secondary Insurance Number input Ends -->\r\n\r\n              <!-- Patient Secondary Insurance Expiry input Starts -->\r\n              <div class=\"col-sm-6 p-l-r-5 p-b-5\">\r\n                <ng-container formGroupName=\"secondary\">\r\n                  <label>{{ 'OPD.EXPIRY_DATE_TEXT' | translate }}</label>\r\n                  <div class=\"dateTime-picker-p\">\r\n                    <p class=\" input-group\">\r\n                      <input type=\"text\" id=\"secondaryExpireDt\" [matDatepicker]=\"secondaryExpireDt\"\r\n                        (click)=\"datePickerToggler(secondaryExpireDt)\" formControlName=\"sexpiryDt\"\r\n                        tabindex=\"34\" readonly class=\"expiry-input-width\"/>\r\n                      <mat-datepicker #secondaryExpireDt></mat-datepicker>\r\n                      <span class=\"input-group-btn w-10 \">\r\n                        <button\r\n                          class=\"btn btn-default btn-calender datepicker calender-button-height\"\r\n                          type=\"button\" (click)=\"datePickerToggler(secondaryExpireDt)\">\r\n                          <i class=\"fa fa-calendar \"></i>\r\n                        </button>\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n            <!-- Insurance Policy Section Ends Here -->\r\n          </div>\r\n        </div>\r\n        <!-- Insurance Policy Section Ends Here -->\r\n        <div class=\"col-sm-10 add-more-dtls\" *ngIf=\"!isShow\">\r\n          <a (click)=\"showLessData()\"><i class=\"mdi mdi-minus-circle\"></i>&nbsp;Hide Details</a>\r\n        </div>\r\n        <div class=\"col-sm-10 p-l-r-5 m-t-b-15 form-button-group\">\r\n          <ul>\r\n            <li *ngIf=\"!this.patientId\">\r\n              <button form=\"registration-form\" type=\"submit\" class=\"btn-app btn-save \">\r\n                <i class=\" mdi mdi-arrow-up-bold\"> </i>\r\n                {{ 'COMMONLABELS.SUBMIT_TEXT' | translate }}\r\n              </button>\r\n            </li>\r\n            <li *ngIf=\"this.patientId && !this.appointmentPatient\">\r\n              <button form=\"registration-form\" type=\"submit\" class=\"btn-app btn-save \">\r\n                <i class=\" mdi mdi-arrow-up-bold\"> </i>\r\n                UPDATE\r\n              </button>\r\n            </li>\r\n            <li *ngIf=\"!editable\">\r\n              <button form=\"registration-form\" type=\"button\" class=\"btn-app btn-clear\" (click)=\"clearFormData()\">\r\n                <i class=\"fas fa-redo-alt\"></i>\r\n                {{ 'COMMONLABELS.CLEAR_TEXT' | translate }}\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button form=\"registration-form\" type=\"button\" class=\"btn-app btn-delete \" (click)=\"cancelForm()\">\r\n                <i class=\"fa fa-times fa-btn-icon\" aria-hidden=\"true\"></i>\r\n                {{ 'COMMONLABELS.CANCEL' | translate }}\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n  Inject\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Validators, NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\nimport {\r\n  OpdApiService,\r\n  UtilService,\r\n  UserService,\r\n  MOMENT\r\n} from '@core/services';\r\nimport { PatientdataService } from '@app/modules/opd/components/allpatients/patientdata.service';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { OtpgenerationComponent } from '@app/modules/opd/components/otpgeneration/otpgeneration.component';\r\nimport * as S3 from 'aws-sdk/clients/s3';\r\nimport { OpdServiceService } from '@app/modules/opd/opd-service.service';\r\nimport { BillingserviceService } from '@app/modules/opd/components/billing/billingservice.service';\r\nimport { ConformModelComponent } from '@app/modules/opd/components/conform-model/conform-model.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { ProfileImageSelectorComponent } from '@core/components/profile-image/profile-image.component';\r\nimport { ProfileImageSelectorResult } from '@core/models/profile-image-selector';\r\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\r\nimport { ConfirmationDialogComponent } from '@shared/components/confirmation-dialog/confirmation-dialog.component';\r\nimport { OpdService } from '../../services/opd.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MultipleApiResponse } from '@app/modules/opd/models/multiple-api-response-model';\r\nimport { APP_CONSTANTS } from '@app/app.constant';\r\nimport { AppConstant } from '@core/models/app-constant';\r\nimport { DatePipe } from '@angular/common';\r\nimport { FingerPrintComponent } from '../../../../shared/components/finger-print/finger-print.component';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@AutoUnsubscribe()\r\n@Component({\r\n  selector: 'app-addpatient',\r\n  templateUrl: './addpatient.component.html',\r\n  styleUrls: ['./addpatient.component.scss']\r\n})\r\nexport class AddpatientComponent implements OnInit, OnDestroy {\r\n  formGroup: FormGroup;\r\n  private screen: string;\r\n  public appointmentPatient: string;\r\n  private mobileOrAadhaarNo;\r\n  public submitAttempt: boolean;\r\n  public isShow = true;\r\n  public editable = true;\r\n  public navigateToAllPatients = false;\r\n  public navigateToSearchPatient = false;\r\n  public minDate = new Date(1900, 0, 1);\r\n  public isInvalidAge = true;\r\n  public isIpdOrOpdregistration: string;\r\n  statesList: any;\r\n  districtList: any;\r\n  CommonList: any;\r\n  imgUrl: string;\r\n  patientData: any;\r\n  patientDataForOtpGeneration: any;\r\n  insuranceList: any[] = [];\r\n  patientId: any;\r\n  patientDemographicData: any;\r\n  showList: boolean;\r\n  providerInsuranceList: any;\r\n  patientDataForEdit: any;\r\n  private primaryInsurance: any;\r\n  private secondaryInsurance: any;\r\n  queryParamSubscription: Subscription;\r\n  isQuickRegistration: boolean;\r\n  patientVisitId: number;\r\n  registrationType: string;\r\n  patientDataFromAppointment: any;\r\n  allPatientScreen: string;\r\n  public isDisable = false;\r\n  public refOrgList = [];\r\n  public wardList = [];\r\n  public roomList = [];\r\n  public orgRefDoctorsList: any[] = [];\r\n  public referenceList: any;\r\n  @ViewChild('fileInput')\r\n  fileInput: ElementRef;\r\n  @ViewChild('formDir')\r\n  registrationForm: NgForm;\r\n  public imageFile;\r\n  public url;\r\n  acceptedMimeTypes = ['image/gif', 'image/jpeg', 'image/png'];\r\n  public imageUploadSubscription: Subscription;\r\n  public apiSubscription: Subscription;\r\n  public bucket = new S3(this.componentOpdServiceService.getBucketsConfig());\r\n  public apisubscription: Subscription;\r\n  public departmentList: MultipleApiResponse;\r\n  public deptWiseDoctorsList: any[] = [];\r\n  public patientCategoriesList: MultipleApiResponse;\r\n  public isDisableDoctor = true;\r\n  public fingerPrintImg: any;\r\n  public isFinger = false;\r\n  public fingerPrint = [];\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public dialog: MatDialog,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private billingserviceService: BillingserviceService,\r\n    private toastr: ToastrService,\r\n    private utilService: UtilService,\r\n    private patientdataService: PatientdataService,\r\n    private opdApiService: OpdApiService,\r\n    private userService: UserService,\r\n    private componentOpdServiceService: OpdServiceService,\r\n    private opdService: OpdService,\r\n    private datePipe: DatePipe,\r\n    private http: HttpClient,\r\n    @Inject(MOMENT) private moment,\r\n    @Inject(APP_CONSTANTS) private appConstants\r\n  ) {\r\n    this.userSession = this.userService.getUser();\r\n  }\r\n  private userSession: UserSession;\r\n\r\n\r\n  commonValues = <any>{};\r\n\r\n  ngOnInit() {\r\n    this.opdService.fingerPrintApiData.subscribe(res => {\r\n      if (res) {\r\n        this.fingerPrint = res;\r\n        if (this.fingerPrint.length) {\r\n          this.isFinger = true;\r\n        } else {\r\n          this.isFinger = false;\r\n        }\r\n      }\r\n    });\r\n    // this is for enabling the search icon in opd component\r\n    this.opdService.editable.subscribe((data: any) => {\r\n      this.editable = data;\r\n    });\r\n    // get data from service to navigate all patient page\r\n    this.navigateToAllPatients = this.patientdataService.getNavigateToAllPatients();\r\n    // getting query params from the searchPatient screen\r\n    this.queryParamSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (params: Params) => {\r\n        this.screen = params['screen'];\r\n        this.registrationType = params['type'] || '';\r\n        if (this.registrationType === 'quick') {\r\n          this.patientId = null;\r\n          this.patientdataService.setUserData(null);\r\n          this.patientdataService.setUserVisitIdData(null);\r\n          this.patientdataService.setPatienDataForBilling(null);\r\n          this.patientDataFromAppointment = null;\r\n          this.imgUrl = null;\r\n        }\r\n        this.appointmentPatient = params['appointment'];\r\n        this.patientDataFromAppointment = params['ptinfo'];\r\n        // allPatientScreen\r\n        if (this.patientDataFromAppointment) {\r\n          this.patientDataFromAppointment = JSON.parse(\r\n            atob(this.patientDataFromAppointment)\r\n          );\r\n        }\r\n        this.isQuickRegistration = true;\r\n        this.isShow = true;\r\n        this.isQuickRegistration = true;\r\n        this.isShow = true;\r\n        if (this.registrationForm && this.formGroup) {\r\n          this.registrationForm.resetForm();\r\n          this.changingValidators();\r\n          this.updatingValueAndValidityOfForm();\r\n          this.formGroup.patchValue({ registrationType: 'opdRegistration' });\r\n        }\r\n      }\r\n    );\r\n    this.listOfInsuranceDetails();\r\n    this.fetchStates();\r\n    this.initForm();\r\n    //   here we are getting patient id from the service file and after that we are\r\n    // calling fetchPatientDemographic api for getting the patient details .\r\n    // This patient datails are patched to the form at the time of update\r\n    this.fetchDataFromService();\r\n    this.orgReferenceDoctors('referralChange');\r\n    this.fetchOrgReferenceTypes();\r\n    [\r\n      'BLOOD_GROUP',\r\n      'HONORIFICS',\r\n      'OCCUPATION',\r\n      'RELIGION',\r\n      'RELATIONSHIP',\r\n      'WARD_TYPE',\r\n      'REL'\r\n    ].map(masterData => {\r\n      this.fetchCommonValues(masterData, data => {\r\n        this.commonValues[masterData] = data;\r\n      });\r\n    });\r\n    if (this.screen === 'otherOrgPatient') {\r\n      this.otpGeneration();\r\n    }\r\n    this.multipleApiRespone();\r\n    // const deptId = this.formGroup.get('deptId').value;\r\n    // if (deptId) {\r\n    //   this.deptwiseDoctors('clinical');\r\n    // }\r\n  }\r\n  // ngDoCheck() {\r\n  //   console.log(this.commonValues);\r\n  // }\r\n  initForm() {\r\n    this.formGroup = this.formBuilder.group({\r\n      registrationType: 'opdRegistration',\r\n      honorificNm: [null, [Validators.required]],\r\n      maxDate: new Date(),\r\n      firstNm: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(/^[a-zA-Z ]*$/),\r\n          Validators.minLength(3),\r\n          Validators.maxLength(50)\r\n        ]\r\n      ],\r\n      middleNm: null,\r\n      birthDt: null,\r\n      patientId: null,\r\n      patientOrgId: null,\r\n      localityNm: null,\r\n      lastNm: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.pattern('^[a-zA-Z ]*$'),\r\n          Validators.minLength(1),\r\n          Validators.maxLength(50)\r\n        ]\r\n      ],\r\n      emailId: [\r\n        null,\r\n        Validators.pattern(/^[a-z]+[a-z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/)\r\n      ],\r\n      alternateContactNo: [\r\n        null,\r\n        [\r\n          Validators.pattern(/(5|6|7|8|9)\\d{9}$/),\r\n          Validators.minLength(10),\r\n          Validators.maxLength(10)\r\n        ]\r\n      ],\r\n\r\n      age: [null, [Validators.pattern('[0-9]*'), Validators.required]],\r\n      gender: [null, Validators.required],\r\n      religionNm: null,\r\n      occupation: null,\r\n      patientEmployer: [\r\n        null,\r\n        [\r\n          Validators.minLength(3),\r\n          Validators.maxLength(30),\r\n          Validators.pattern(/^[a-zA-Z ]*$/)\r\n        ]\r\n      ],\r\n      addressLine1: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(1),\r\n          Validators.maxLength(300)\r\n        ]\r\n      ],\r\n      pincode: [\r\n        null,\r\n        [\r\n          Validators.pattern('[0-9]*'),\r\n          Validators.minLength(6),\r\n          Validators.maxLength(6)\r\n        ]\r\n      ],\r\n      cityNm: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(20),\r\n          Validators.pattern(/^[a-zA-Z ]*$/)\r\n        ]\r\n      ],\r\n      stateNm: [null, Validators.required],\r\n      stateId: null,\r\n      districtNm: null,\r\n      countryNm: [\r\n        'India',\r\n        [Validators.required, Validators.minLength(3), Validators.maxLength(30)]\r\n      ],\r\n      emergencyContactNm: [\r\n        null,\r\n        [\r\n          Validators.pattern(/^[a-zA-Z ]*$/),\r\n          Validators.minLength(3),\r\n          Validators.maxLength(50)\r\n        ]\r\n      ],\r\n      emergencyContactNo: [\r\n        null,\r\n        [\r\n          Validators.pattern(/(5|6|7|8|9)\\d{9}$/),\r\n          Validators.minLength(10),\r\n          Validators.maxLength(10)\r\n        ]\r\n      ],\r\n      relationshipCode: null,\r\n      emergencyContactEmailId: [\r\n        null,\r\n        Validators.pattern(/^[a-z]+[a-z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/)\r\n      ],\r\n      emergencyContactAddress: null,\r\n      bloodGrpNm: null,\r\n      aadhaarNo: [\r\n        null,\r\n        [\r\n          Validators.pattern('[0-9]*'),\r\n          Validators.minLength(12),\r\n          Validators.maxLength(12)\r\n        ]\r\n      ],\r\n      hosPatientId: null,\r\n      imagePath: null,\r\n      mobileNo: [\r\n        null,\r\n        [\r\n          Validators.pattern(/(5|6|7|8|9)\\d{9}$/),\r\n          Validators.minLength(10),\r\n          Validators.maxLength(10)\r\n        ]\r\n      ],\r\n      primary: this.formBuilder.group({\r\n        pinsuranceProviderId: this.formBuilder.control(''),\r\n        ppatientInsuranceNo: [\r\n          null,\r\n          [\r\n            Validators.pattern('[0-9]*'),\r\n            Validators.minLength(2),\r\n            Validators.maxLength(30)\r\n          ]\r\n        ],\r\n        pexpiryDt: null,\r\n        patientInsuranceId: null,\r\n        type: 'primary'\r\n      }),\r\n      secondary: this.formBuilder.group({\r\n        sinsuranceProviderId: this.formBuilder.control(''),\r\n        spatientInsuranceNo: [\r\n          null,\r\n          [\r\n            Validators.pattern('[0-9]*'),\r\n            Validators.minLength(2),\r\n            Validators.maxLength(30)\r\n          ]\r\n        ],\r\n        sexpiryDt: null,\r\n        patientInsuranceId: null,\r\n        type: 'secondary'\r\n      }),\r\n      ageYears: [\r\n        null,\r\n        [\r\n          Validators.pattern('[0-9]*'),\r\n          Validators.minLength(0),\r\n          Validators.maxLength(3)\r\n        ]\r\n      ],\r\n      ageMonths: [\r\n        null,\r\n        [\r\n          Validators.pattern('[0-9]*'),\r\n          Validators.minLength(0),\r\n          Validators.maxLength(3)\r\n        ]\r\n      ],\r\n      ageDays: [\r\n        null,\r\n        [\r\n          Validators.pattern('[0-9]*'),\r\n          Validators.minLength(0),\r\n          Validators.maxLength(3)\r\n        ]\r\n      ],\r\n      // this below fields are used only for the ipd patient\r\n      referralType: null,\r\n      refOrgNm: null,\r\n      refDoctorNm: null,\r\n      refDoctorContactNo: null,\r\n      deptId: null,\r\n      doctorId: null,\r\n      patientCategoryNm: null,\r\n      wardType: null,\r\n      wardId: null,\r\n      roomId: null,\r\n      patientVisitId: null\r\n    });\r\n    this.formGroup.get('ageYears').valueChanges.subscribe(val => {\r\n      this.isInvalidAge = true;\r\n      if (val > 118) {\r\n        this.isInvalidAge = false;\r\n      }\r\n      this.ageCalculation();\r\n    });\r\n\r\n    this.formGroup.get('registrationType').valueChanges.subscribe(val => {\r\n      //   this is for validating the ipd related fields\r\n      this.isIpdOrOpdregistration = val;\r\n      if (val === 'ipdRegistration') {\r\n        this.formGroup.controls['deptId'].setValidators([Validators.required]);\r\n        this.formGroup.controls['doctorId'].setValidators([\r\n          Validators.required\r\n        ]);\r\n        this.formGroup.controls['patientCategoryNm'].setValidators([\r\n          Validators.required\r\n        ]);\r\n        this.formGroup.controls['wardType'].setValidators([\r\n          Validators.required\r\n        ]);\r\n        this.formGroup.controls['wardId'].setValidators([Validators.required]);\r\n        this.formGroup.controls['roomId'].setValidators([Validators.required]);\r\n        this.updatingValueAndValidityOfForm();\r\n      } else {\r\n        this.changingValidators();\r\n        this.updatingValueAndValidityOfForm();\r\n      }\r\n    });\r\n\r\n    this.formGroup.get('ageMonths').valueChanges.subscribe(val => {\r\n      this.isInvalidAge = true;\r\n      if (val > 11) {\r\n        this.isInvalidAge = false;\r\n      }\r\n      this.ageCalculation();\r\n    });\r\n    this.formGroup.get('ageDays').valueChanges.subscribe(val => {\r\n      this.isInvalidAge = true;\r\n      if (val > 30) {\r\n        this.isInvalidAge = false;\r\n      }\r\n      this.ageCalculation();\r\n    });\r\n\r\n    this.formGroup.get('birthDt').valueChanges.subscribe(val => {\r\n      if (\r\n        this.moment(this.formGroup.get('birthDt').value).isSame(\r\n          Date.now(),\r\n          'day'\r\n        )\r\n      ) {\r\n        this.formGroup.patchValue({ ageDays: 0 });\r\n        this.formGroup.patchValue({ ageMonths: 0 });\r\n        this.formGroup.patchValue({ ageYears: 0 });\r\n        this.formGroup.patchValue({ age: 0 });\r\n        return;\r\n      }\r\n      if (!val) {\r\n        this.formGroup.get('ageYears').reset();\r\n        this.formGroup.get('ageMonths').reset();\r\n        this.formGroup.get('ageDays').reset();\r\n      }\r\n      if (val) {\r\n        const ageMap = this.utilService.parseDob(val);\r\n        this.formGroup.get('ageYears').patchValue(ageMap.get('years'));\r\n        this.formGroup.get('ageMonths').patchValue(ageMap.get('months'));\r\n        this.formGroup.get('ageDays').patchValue(ageMap.get('days'));\r\n        this.ageCalculation();\r\n      }\r\n    });\r\n  }\r\n\r\n  // validate file for image upload\r\n  validateFile(file) {\r\n    return this.acceptedMimeTypes.includes(file.type) && file.size < 3000000;\r\n  }\r\n\r\n  onRegisterationFormSubmit() {\r\n    this.submitAttempt = true;\r\n    if (!this.isInvalidAge) {\r\n      return false;\r\n    }\r\n    if (this.formGroup.valid) {\r\n      this.patientdataService.setNavigateToAllPatients(null);\r\n      this.conformationModel();\r\n    }\r\n  }\r\n\r\n  conformationModel() {\r\n    const mobileNo = this.formGroup.get('mobileNo').value;\r\n    const aadharNo = this.formGroup.get('aadhaarNo').value;\r\n    if (mobileNo || aadharNo) {\r\n      this.uploadImage();\r\n    } else {\r\n      const dialogRef = this.dialog.open(ConformModelComponent, {\r\n        data: {},\r\n        disableClose: true\r\n      });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          if (result.aadhaarNo) {\r\n            this.formGroup.patchValue({ aadhaarNo: result.aadhaarNo });\r\n          }\r\n          if (result.mobileNo) {\r\n            this.formGroup.patchValue({ mobileNo: result.mobileNo });\r\n          }\r\n          this.uploadImage();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  uploadImage() {\r\n    this.isDisable = true;\r\n    if (this.imageFile) {\r\n      const bucketDetails = this.componentOpdServiceService.getBucketName();\r\n      const key =\r\n        this.utilService.generateUniqueId() + '-' + this.imageFile.type;\r\n      const params = {\r\n        Bucket: bucketDetails.bucketURL,\r\n        Key: key,\r\n        Body: this.imageFile\r\n      };\r\n      this.bucket\r\n        .putObject(params)\r\n        .promise()\r\n        .then(() => {\r\n          this.imgUrl = bucketDetails.url + key;\r\n          this.checkingRegistrationType();\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      this.checkingRegistrationType();\r\n    }\r\n  }\r\n\r\n  private checkingRegistrationType() {\r\n    const registrationType = this.formGroup.get('registrationType').value;\r\n    if (registrationType === 'ipdRegistration') {\r\n      this.ipdPatientRegistration();\r\n    } else {\r\n      this.commonPatientRegistration(this.imgUrl);\r\n    }\r\n  }\r\n  // comparing\r\n\r\n  stateIdComparator(o1, o2) {\r\n    return o1 && o2 && o1.stateId === o2.stateId;\r\n  }\r\n  // genderComparator(o1, o2) {\r\n  //   return o1 && o2 && o1.gender === o2.gender;\r\n  // }\r\n  districtComparator(o1, o2) {\r\n    return o1 && o2 && o1.districtNm === o2.districtNm;\r\n  }\r\n\r\n  insuranceProviderIdComparator(o1, o2) {\r\n    return o1 && o2 && o1.insuranceProviderId === o2.insuranceProviderId;\r\n  }\r\n  // for visit related comparators\r\n  departmentComparator(o1, o2) {\r\n    // o1.deptId === o2.deptId\r\n    return o1 && o2 && o1 === o2;\r\n  }\r\n  doctorComparator(o1, o2) {\r\n    return o1 && o2 && o1.empId === o2.doctorId;\r\n  }\r\n  patientCategoryComparator(o1, o2) {\r\n    return (\r\n      o1 &&\r\n      o2 &&\r\n      // (o1.patientCategoryNm === o2.patientCategoryNm ||\r\n      o1.patientCategoryNm === o2.patientCategoryNm\r\n    );\r\n  }\r\n  // calculating  age in days\r\n\r\n  ageCalculation() {\r\n    const ageInNumbers = this.utilService.getAgeInDays(\r\n      this.formGroup.get('ageYears').value,\r\n      this.formGroup.get('ageMonths').value,\r\n      this.formGroup.get('ageDays').value\r\n    );\r\n    this.formGroup.patchValue({ age: ageInNumbers });\r\n  }\r\n  removeImage() {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Remove ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.imgUrl = null;\r\n      }\r\n    });\r\n  }\r\n  fetchStates() {\r\n    this.opdApiService.fetchStates().subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.statesList = response.data;\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  /**\r\n    * @description this method is used for open, close the mat date picker.\r\n    */\r\n  datePickerToggler(datePicker: MatDatepicker<Date>) {\r\n    datePicker[datePicker.opened ? 'close' : 'open']();\r\n  }\r\n  fetchDistricts() {\r\n    this.unSubscribingSubscriptionObj();\r\n    const state = this.formGroup.get('stateNm').value;\r\n    const payload = {\r\n      stateId: state.stateId\r\n    };\r\n    this.apiSubscription = this.opdApiService.fetchDistricts(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.districtList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  fetchCommonValues(masterType, cb) {\r\n    // this.unSubscribingSubscriptionObj();\r\n    const payload = {\r\n      masterType\r\n    };\r\n    this.apiSubscription = this.opdApiService\r\n      .fetchCommonValues(payload)\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 'E200') {\r\n            const { data } = response;\r\n            if (cb && typeof cb === 'function') {\r\n              cb(data);\r\n            }\r\n          } else if (response.response === 'E400') {\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n        },\r\n        () => {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n  }\r\n  // this method is for the ipd registration\r\n  ipdPatientRegistration() {\r\n    const payload = this.commonPayload();\r\n    this.apiSubscription = this.opdApiService\r\n      .ipdRegistration(payload)\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 'E200') {\r\n            this.isDisable = false;\r\n            this.patientData = response.data;\r\n            if (\r\n              this.patientData !== null &&\r\n              this.patientData.aadharExist !==\r\n              'The given aadharnumber already exist'\r\n            ) {\r\n              // hiding search option\r\n              this.editable = false;\r\n              this.opdService.editable.next(this.editable);\r\n            }\r\n\r\n            if (\r\n              this.patientData !== null &&\r\n              this.patientData.aadharExist ===\r\n              'The given aadharnumber already exist'\r\n              // 'The given aadhaarnumber already exist'\r\n            ) {\r\n              this.toastr.clear();\r\n              this.toastr.warning('', response.responseMessage);\r\n              if (this.editable) {\r\n                this.editable = true;\r\n              }\r\n              return false;\r\n            } else {\r\n              this.imgUrl = null;\r\n              this.registrationForm.resetForm();\r\n              this.changingValidators();\r\n              this.updatingValueAndValidityOfForm();\r\n              this.formGroup.patchValue({\r\n                registrationType: 'opdRegistration'\r\n              });\r\n              this.toastr.success('', response.responseMessage);\r\n              this.patientId = null;\r\n            }\r\n            this.patientId = null;\r\n            // this code is for the navigating to the 1.6 bedAllocation screen\r\n            // ${this.appConstants.newIp}\r\n            // const baseUrl = `${this.appConstants.PROTOCOL}://dru.care/app/#/wardbedsAllocation`;\r\n            // window.open(baseUrl, '_blank');\r\n            this.router.navigate(['/registration/all-patients'], {\r\n              relativeTo: this.activatedRoute\r\n            });\r\n            return;\r\n          } else if (response.response === 'E400') {\r\n            this.isDisable = false;\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n          this.fingerPrint = [];\r\n          this.opdService.fingerPrintApiData.next(null);\r\n        },\r\n        () => {\r\n          this.isDisable = false;\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n  }\r\n  commonPayload() {\r\n    this.isDisable = true;\r\n    this.unSubscribingSubscriptionObj();\r\n    this.billingserviceService.setConsultationFormData([]);\r\n    this.billingserviceService.setConsultations([]);\r\n    this.billingserviceService.setLabFormData([]);\r\n    this.billingserviceService.setLabTests([]);\r\n    this.billingserviceService.setLabPanels([]);\r\n    this.billingserviceService.setLabPackages([]);\r\n    this.billingserviceService.setImageFormdata([]);\r\n    this.billingserviceService.setImageTests([]);\r\n    this.billingserviceService.setImagePanels([]);\r\n    this.billingserviceService.setImagePackages([]);\r\n    const primary = this.formGroup.get('primary').value;\r\n    const secondary = this.formGroup.get('secondary').value;\r\n    const stateNm = this.formGroup.get('stateNm').value;\r\n    const referralData = this.formGroup.get('refDoctorNm').value || {};\r\n    const referralType = this.formGroup.get('referralType').value;\r\n    const doctorData = this.formGroup.get('doctorId').value || {};\r\n    const categoryData = this.formGroup.get('patientCategoryNm').value || {};\r\n    const refDocContactNo = this.formGroup.get('refDoctorContactNo').value;\r\n    const refOrgNm = this.formGroup.get('refOrgNm').value;\r\n    const {\r\n      refDoctorId,\r\n      refDoctorNm,\r\n      honorificNm\r\n    } = referralData;\r\n    const { empId, doctorName, feeValidVisits, feeValidDays } = doctorData;\r\n    const { patientCategoryId, patientCategoryName } = categoryData;\r\n    const formData = this.formGroup.value;\r\n    // here data comming from the form is in object format .We are removing that key and adding individually\r\n    delete formData.stateName;\r\n    delete formData.refDoctorNm;\r\n    delete formData.doctorId;\r\n    delete formData.patientCategoryNm;\r\n    const patientInsuranceList = [];\r\n    if (primary && primary.pinsuranceProviderId) {\r\n      const primaryObj = {\r\n        insuranceProviderId: primary.pinsuranceProviderId,\r\n        insurancePayerType: primary.type,\r\n        patientInsuranceNo: primary.ppatientInsuranceNo,\r\n        insuranceEndDt: primary.pexpiryDt,\r\n        patientInsuranceId: primary.patientInsuranceId\r\n      };\r\n      patientInsuranceList.push(primaryObj);\r\n    }\r\n    if (secondary && secondary.sinsuranceProviderId) {\r\n      const secondaryObj = {\r\n        insuranceProviderId: secondary.sinsuranceProviderId,\r\n        insurancePayerType: secondary.type,\r\n        patientInsuranceNo: secondary.spatientInsuranceNo,\r\n        insuranceEndDt: secondary.sexpiryDt,\r\n        patientInsuranceId: secondary.patientInsuranceId\r\n      };\r\n      patientInsuranceList.push(secondaryObj);\r\n    }\r\n    const payload = formData;\r\n    // this is for only ipd patients\r\n    //  ipd patients payload starts\r\n    payload.refDoctorId = refDoctorId;\r\n    payload.refDoctorNm = refDoctorNm;\r\n    payload.refDoctorHonorificNm = honorificNm;\r\n    payload.refDoctorContactNo = refDocContactNo;\r\n    payload.refOrgNm = refOrgNm;\r\n    payload.referralType = referralType;\r\n    payload.doctorId = empId;\r\n    payload.doctorNm = doctorName;\r\n    payload.feeValidVisits = feeValidVisits;\r\n    payload.feeValidDays = feeValidDays;\r\n    payload.patientCategoryId = patientCategoryId;\r\n    payload.patientCategoryNm = patientCategoryName;\r\n    payload.requestedDt = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\r\n    //  ipd patients payload ends\r\n    (payload.patientInsuranceList = patientInsuranceList),\r\n      (payload.orgId = this.userSession.orgId),\r\n      (payload.orgGrpId = this.userSession.orgGroupId);\r\n    (payload.createdUsrId = this.userSession.regId),\r\n      (payload.stateNm = stateNm.stateName);\r\n    if (this.patientId) {\r\n      payload.patientId = this.patientId;\r\n    }\r\n    payload.imagePath = this.imgUrl;\r\n    payload['fingerPrint'] = this.fingerPrint;\r\n    return payload;\r\n  }\r\n  commonPatientRegistration(img?: string) {\r\n    const payload = this.commonPayload();\r\n    this.apiSubscription = this.opdApiService\r\n      .commonPatientRegistration(payload)\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 'E200') {\r\n            this.isDisable = false;\r\n            this.patientData = response.data;\r\n            if (\r\n              this.patientData !== null &&\r\n              this.patientData.aadharExist !==\r\n              'The given aadharnumber already exist'\r\n            ) {\r\n              // hiding search option\r\n              this.editable = false;\r\n              this.opdService.editable.next(this.editable);\r\n            }\r\n            // this is for the appointment patient\r\n            if (this.patientDataFromAppointment) {\r\n              this.patientData.patientAppointmentId = this.patientDataFromAppointment.appointmentId;\r\n              this.patientData.doctorId = this.patientDataFromAppointment.doctorId;\r\n              this.patientData.deptId = this.patientDataFromAppointment.deptId;\r\n              this.patientData.doctorNm = this.patientDataFromAppointment.doctorNm;\r\n            }\r\n            if (!this.patientDataFromAppointment) {\r\n              const appointmentPatientData = this.patientdataService.getPatienDataForBilling();\r\n              if (\r\n                appointmentPatientData &&\r\n                appointmentPatientData.patientAppointmentId\r\n              ) {\r\n                this.patientData.patientAppointmentId =\r\n                  appointmentPatientData.patientAppointmentId;\r\n              }\r\n            }\r\n            if (\r\n              this.patientData !== null &&\r\n              this.patientData.aadharExist ===\r\n              'The given aadharnumber already exist'\r\n              // 'The given aadhaarnumber already exist'\r\n            ) {\r\n              this.toastr.clear();\r\n              this.toastr.warning('', response.responseMessage);\r\n              if (this.editable) {\r\n                this.editable = true;\r\n              }\r\n              return false;\r\n            } else {\r\n              this.imgUrl = null;\r\n              this.registrationForm.resetForm();\r\n              this.changingValidators();\r\n              this.updatingValueAndValidityOfForm();\r\n              this.formGroup.patchValue({\r\n                registrationType: 'opdRegistration'\r\n              });\r\n              this.toastr.success('', response.responseMessage);\r\n              // this below dat is form the billing screen(next screen)\r\n              if (this.patientId && this.screen !== 'otherOrgPatient') {\r\n                this.patientData.isNew = 'newpatient';\r\n              }\r\n              if (!this.patientId) {\r\n                this.patientData.isNew = 'newpatient';\r\n                if (\r\n                  this.patientDataFromAppointment &&\r\n                  this.patientDataFromAppointment.regId\r\n                ) {\r\n                  this.patientData.isNew = null;\r\n                }\r\n\r\n                // concat the patient names\r\n                let patientName = null;\r\n                if (this.patientData.firstNm) {\r\n                  patientName = this.patientData.firstNm;\r\n                }\r\n                if (this.patientData && this.patientData.middleNm) {\r\n                  patientName = patientName\r\n                    .concat(' ')\r\n                    .concat(this.patientData.middleNm);\r\n                }\r\n                if (this.patientData.lastNm) {\r\n                  patientName = patientName\r\n                    .concat(' ')\r\n                    .concat(this.patientData.lastNm);\r\n                }\r\n                this.patientData.patientNm = patientName;\r\n\r\n                // Here we are navigating to the billing page after successful patient registration\r\n                this.patientdataService.setPatienDataForBilling(\r\n                  this.patientData\r\n                );\r\n                // here we are sending appointment data to service file after submit data from a\r\n                this.patientdataService.setAppointmentData(this.patientData);\r\n\r\n                this.router.navigate(['../billing'], {\r\n                  relativeTo: this.activatedRoute\r\n                });\r\n                this.patientId = null;\r\n              }\r\n              if (this.patientId) {\r\n                // if (this.navigateToAllPatients) {\r\n                this.router.navigate(['/registration/all-patients'], {\r\n                  relativeTo: this.activatedRoute\r\n                });\r\n              }\r\n            }\r\n            this.patientdataService.setUserData(null);\r\n            this.patientdataService.setUserVisitIdData(null);\r\n            this.patientId = null;\r\n          } else if (response.response === 'E400') {\r\n            this.isDisable = false;\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n          this.fingerPrint = [];\r\n          this.opdService.fingerPrintApiData.next(null);\r\n        },\r\n        () => {\r\n          this.isDisable = false;\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n  }\r\n  clearFormData() {\r\n    this.editable = false;\r\n    this.opdService.editable.next(this.editable);\r\n    this.registrationForm.resetForm();\r\n    this.changingValidators();\r\n    this.updatingValueAndValidityOfForm();\r\n    this.formGroup.patchValue({ registrationType: 'opdRegistration' });\r\n    this.patientId = null;\r\n    this.insuranceList = [];\r\n    this.patientdataService.setUserData(null);\r\n    this.patientdataService.setPatienDataForBilling(null);\r\n    this.patientDataFromAppointment = null;\r\n    this.imgUrl = null;\r\n    this.fingerPrint = [];\r\n    this.opdService.fingerPrintApiData.next(null);\r\n  }\r\n  listOfInsuranceDetails() {\r\n    // this.unSubscribingSubscriptionObj();\r\n    this.opdApiService.listOfInsuranceDetails().subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.providerInsuranceList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  // getting hospatientid from the service\r\n  fetchDataFromService() {\r\n    this.unSubscribingSubscriptionObj();\r\n    this.showList = true;\r\n    this.patientId = this.patientdataService.getUserData();\r\n    this.patientVisitId = this.patientdataService.getUserVisitIdData();\r\n    this.navigateToSearchPatient = this.patientdataService.getNavigateToSearchPatient();\r\n    if (this.patientDataFromAppointment) {\r\n      this.patientId = this.patientDataFromAppointment.regId;\r\n      this.patientVisitId = this.patientDataFromAppointment.patientVisitId;\r\n    }\r\n    this.patientdataService.setUserData(null);\r\n    this.patientdataService.setUserVisitIdData(null);\r\n    if (this.patientId && this.screen !== 'otherOrgPatient') {\r\n      const payload = {\r\n        patientId: this.patientId,\r\n        orgId: this.userSession.orgId,\r\n        authenticatedUserId: this.userSession.regId,\r\n        orgGrpId: this.userSession.orgGroupId,\r\n        patientVisitId: this.patientVisitId\r\n      };\r\n      if (\r\n        (this.appointmentPatient &&\r\n          this.appointmentPatient === 'appointment') ||\r\n        (this.screen && this.screen === 'withinOrg')\r\n      ) {\r\n        this.patientId = null;\r\n        // Here we are setting patientId=null Based on this we are showing buttons like submit or update\r\n      }\r\n      this.apiSubscription = this.opdApiService\r\n        .fetchPatientDemographicData<any>(payload)\r\n        .subscribe(\r\n          response => {\r\n            if (response.responseCode === 'E200') {\r\n              this.imgUrl = response.data.imagePath;\r\n              this.patientDemographicData = response.data;\r\n              this.formGroup.patchValue(this.patientDemographicData);\r\n              const gender = this.patientDemographicData.gender;\r\n              this.formGroup.patchValue({ gender: gender });\r\n              if (response.data.pincode === 0) {\r\n                this.formGroup.patchValue({ pincode: null });\r\n              }\r\n              //  this condition is for showing either ipd form or opd form based on data\r\n              // if (this.patientDemographicData.requestType && this.patientDemographicData.requestType === 'TOBEADMIT') {\r\n              // this.formGroup.patchValue({registrationType: 'ipdRegistration'});\r\n              // // this is for ipd form\r\n              // } else {\r\n              //   this.formGroup.patchValue({registrationType: 'ipdRegistration'});\r\n              //   //  this is for opd form\r\n              // }\r\n              const data = response.data || {};\r\n              if (response.data.age) {\r\n                const ageYears = this.utilService\r\n                  .parseAgeIndays(response.data.age)\r\n                  .get('years');\r\n                const ageMonths = this.utilService\r\n                  .parseAgeIndays(data.age)\r\n                  .get('months');\r\n                const ageDays = this.utilService\r\n                  .parseAgeIndays(data.age)\r\n                  .get('ageDays');\r\n                if (ageYears) {\r\n                  this.formGroup.patchValue({ ageYears: ageYears });\r\n                }\r\n                if (ageMonths) {\r\n                  this.formGroup.patchValue({ ageMonths: ageMonths });\r\n                }\r\n                if (ageDays) {\r\n                  this.formGroup.patchValue({ ageDays: ageDays });\r\n                }\r\n              }\r\n              if (response.data.aadhaarNo === 0) {\r\n                this.formGroup.patchValue({ aadhaarNo: null });\r\n              }\r\n              // this below apis are for patching the form data at the time of update\r\n              this.deptwiseDoctors();\r\n              this.fetchWardList();\r\n              this.listOfRoomNames();\r\n              this.formGroup.patchValue({\r\n                refDoctorNm: {\r\n                  refDoctorNm: data.refDoctorNm\r\n                }\r\n              });\r\n              this.formGroup.get('refOrgNm').valueChanges.subscribe(val => {\r\n                this.orgReferenceDoctors('organisationChange');\r\n                this.onselctingconsultantNm();\r\n              });\r\n              this.formGroup.patchValue({\r\n                stateNm: {\r\n                  stateName: this.patientDemographicData.stateNm,\r\n                  stateId: this.patientDemographicData.stateId\r\n                },\r\n                doctorId: {\r\n                  doctorName: data.doctorNm,\r\n                  doctorId: data.doctorId,\r\n                  empId: data.doctorId\r\n                },\r\n                patientCategoryNm:\r\n                  { patientCategoryId: data.patientCategoryId, patientCategoryName: data.patientCategoryNm }\r\n              });\r\n              if (this.formGroup.get('stateNm')) {\r\n                this.fetchDistricts();\r\n              }\r\n              // here we are updating the primary and secondary insurance details of the patine\r\n              if (this.patientDemographicData.patientInsuranceList) {\r\n                this.primaryAndSecondaryInsuranceDetails(\r\n                  this.patientDemographicData.patientInsuranceList\r\n                );\r\n              }\r\n            } else if (response.responseCode === 'E400') {\r\n              this.toastr.error('Failure!', response.responseMessage);\r\n            }\r\n          },\r\n          () => {\r\n            this.toastr.error('Failure!', 'Something went wrong');\r\n          }\r\n        );\r\n    }\r\n  }\r\n  primaryAndSecondaryInsuranceDetails(insuranceList) {\r\n    insuranceList.forEach(element => {\r\n      if (element.insurancePayerType === 'primary') {\r\n        this.primaryInsurance = element;\r\n        this.formGroup.patchValue({\r\n          primary: {\r\n            ppatientInsuranceNo: this.primaryInsurance['patientInsuranceNo'],\r\n            pexpiryDt: this.primaryInsurance['insuranceEndDt'],\r\n            pinsuranceProviderId: this.primaryInsurance['insuranceProviderId'],\r\n            patientInsuranceId: this.primaryInsurance['patientInsuranceId']\r\n          }\r\n        });\r\n      }\r\n      if (element.insurancePayerType === 'secondary') {\r\n        this.secondaryInsurance = element;\r\n        this.formGroup.patchValue({\r\n          secondary: {\r\n            spatientInsuranceNo: this.secondaryInsurance['patientInsuranceNo'],\r\n            sexpiryDt: this.secondaryInsurance['insuranceEndDt'],\r\n            sinsuranceProviderId: this.secondaryInsurance[\r\n              'insuranceProviderId'\r\n            ],\r\n            patientInsuranceId: this.secondaryInsurance['patientInsuranceId']\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  showData() {\r\n    this.isQuickRegistration = false;\r\n    this.isShow = !this.isShow;\r\n  }\r\n  showLessData() {\r\n    this.isQuickRegistration = true;\r\n    this.isShow = !this.isShow;\r\n  }\r\n  otpGeneration() {\r\n    this.unSubscribingSubscriptionObj();\r\n    this.patientDataForOtpGeneration = this.patientdataService.getPatienDataForBilling();\r\n    let patientId;\r\n    if (this.patientDataForOtpGeneration) {\r\n      patientId = this.patientDataForOtpGeneration.patientId;\r\n      this.mobileOrAadhaarNo = this.patientDataForOtpGeneration.mobileNo;\r\n    }\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      patientId\r\n    };\r\n    this.apiSubscription = this.opdApiService.otpGeneration(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          // this.toastr.info(\r\n          //   'info',\r\n          //   'OTP IS GENERATED AND SENT TO PATIENT REGISTERED MOBILE NUMBER'\r\n          // );\r\n          this.patientdataService.setUserData(\r\n            this.patientDataForOtpGeneration.patientId\r\n          );\r\n          this.otpModel();\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  //\r\n  // openImageUploader\r\n  onFileChanged($event) {\r\n    const dialogRef: MatDialogRef<\r\n      ProfileImageSelectorComponent,\r\n      ProfileImageSelectorResult\r\n    > = this.dialog.open(ProfileImageSelectorComponent, {\r\n      height: '80vh',\r\n      width: '60vw',\r\n      panelClass: 'user-image-selector-popup'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.imageFile = result.profileImage;\r\n        // will contain cropper image in blob\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(this.imageFile);\r\n        reader.onload = () => {\r\n          this.imgUrl = '' + reader.result;\r\n        };\r\n        // return result.profileImage;\r\n      }\r\n    });\r\n  }\r\n\r\n  otpModel() {\r\n    this.unSubscribingSubscriptionObj();\r\n    const dialogRef = this.dialog.open(OtpgenerationComponent, {\r\n      data: { inputValue: this.mobileOrAadhaarNo },\r\n      disableClose: true,\r\n      panelClass: 'otp-modal'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (!result) {\r\n        this.patientdataService.setUserData(null);\r\n      }\r\n      if (result) {\r\n        const payload = {\r\n          patientId: result.data.regId,\r\n          orgId: this.userSession.orgId,\r\n          authenticatedUserId: this.userSession.regId,\r\n          orgGrpId: this.userSession.orgGroupId\r\n        };\r\n        this.apiSubscription = this.opdApiService\r\n          .fetchPatientDemographicData<any>(payload)\r\n          .subscribe(\r\n            response => {\r\n              if (response.responseCode === 'E200') {\r\n                this.imgUrl = response.data.imagePath;\r\n                this.patientDemographicData = response.data;\r\n                this.formGroup.patchValue(this.patientDemographicData);\r\n                if (response.data.pincode === 0) {\r\n                  this.formGroup.patchValue({ pincode: null });\r\n                }\r\n                if (response.data.age) {\r\n                  const ageYears = this.utilService\r\n                    .parseAgeIndays(response.data.age)\r\n                    .get('years');\r\n                  const ageMonths = this.utilService\r\n                    .parseAgeIndays(response.data.age)\r\n                    .get('months');\r\n                  const ageDays = this.utilService\r\n                    .parseAgeIndays(response.data.age)\r\n                    .get('ageDays');\r\n                  if (ageYears) {\r\n                    this.formGroup.patchValue({ ageYears: ageYears });\r\n                  }\r\n                  if (ageMonths) {\r\n                    this.formGroup.patchValue({ ageMonths: ageMonths });\r\n                  }\r\n                  if (ageDays) {\r\n                    this.formGroup.patchValue({ ageDays: ageDays });\r\n                  }\r\n                }\r\n                if (response.data.aadhaarNo === 0) {\r\n                  this.formGroup.patchValue({ aadhaarNo: null });\r\n                }\r\n                this.formGroup.patchValue({\r\n                  stateNm: {\r\n                    stateName: this.patientDemographicData.stateNm,\r\n                    stateId: this.patientDemographicData.stateId\r\n                  }\r\n                });\r\n                if (this.formGroup.get('stateNm')) {\r\n                  this.fetchDistricts();\r\n                }\r\n                // here we are updating the primary and secondary insurance details of the patine\r\n                if (this.patientDemographicData.patientInsuranceList) {\r\n                  this.primaryAndSecondaryInsuranceDetails(\r\n                    this.patientDemographicData.patientInsuranceList\r\n                  );\r\n                }\r\n              } else if (response.responseCode === 'E400') {\r\n                this.toastr.error('Failure!', response.responseMessage);\r\n              }\r\n            },\r\n            () => {\r\n              this.toastr.error('Failure!', 'Something went wrong');\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n  // this is used for unsubscribing the subscription object for this we are stopping the multiple insertions\r\n  unSubscribingSubscriptionObj() {\r\n    if (this.apiSubscription) {\r\n      this.apiSubscription.unsubscribe();\r\n    }\r\n  }\r\n  private changingValidators() {\r\n    this.formGroup.controls['deptId'].clearValidators();\r\n    this.formGroup.controls['doctorId'].clearValidators();\r\n    this.formGroup.controls['patientCategoryNm'].clearValidators();\r\n    this.formGroup.controls['wardType'].clearValidators();\r\n    this.formGroup.controls['wardId'].clearValidators();\r\n    this.formGroup.controls['roomId'].clearValidators();\r\n    this.formGroup.updateValueAndValidity();\r\n  }\r\n  private updatingValueAndValidityOfForm() {\r\n    this.formGroup.get('deptId').updateValueAndValidity();\r\n    this.formGroup.get('doctorId').updateValueAndValidity();\r\n    this.formGroup.get('patientCategoryNm').updateValueAndValidity();\r\n    this.formGroup.get('wardType').updateValueAndValidity();\r\n    this.formGroup.get('wardId').updateValueAndValidity();\r\n    this.formGroup.get('roomId').updateValueAndValidity();\r\n  }\r\n  cancelForm() {\r\n    this.editable = false;\r\n    this.opdService.editable.next(this.editable);\r\n    this.patientdataService.setUserData(null);\r\n    if (!this.navigateToAllPatients) {\r\n      this.router.navigate(['/registration'], {\r\n        relativeTo: this.activatedRoute\r\n      });\r\n    }\r\n    if (this.navigateToAllPatients) {\r\n      this.patientdataService.setNavigateToAllPatients(null);\r\n      this.router.navigate(['/registration/all-patients'], {\r\n        relativeTo: this.activatedRoute\r\n      });\r\n    }\r\n    this.fingerPrint = [];\r\n    this.opdService.fingerPrintApiData.next(null);\r\n  }\r\n  deptwiseDoctors() {\r\n    this.deptWiseDoctorsList = [];\r\n    const deptId = this.formGroup.get('deptId').value;\r\n    this.isDisableDoctor = true;\r\n    if (deptId) {\r\n      const payload = {\r\n        orgId: this.userSession.orgId,\r\n        authenticatedUserId: this.userSession.regId,\r\n        orgGrpId: this.userSession.orgGroupId,\r\n        designation: 'Doctor',\r\n        deptId\r\n      };\r\n\r\n      this.opdApiService.deptwiseDoctors(payload).subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 'E200') {\r\n            this.deptWiseDoctorsList = response.data;\r\n            if (this.deptWiseDoctorsList && !this.deptWiseDoctorsList.length) {\r\n              this.toastr.warning(\r\n                'warning!',\r\n                'Please select the department which contains doctors'\r\n              );\r\n            }\r\n            if (this.deptWiseDoctorsList.length) {\r\n              this.isDisableDoctor = false;\r\n            }\r\n          } else if (response.response === 'E400') {\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n        },\r\n        () => {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n    }\r\n  }\r\n  orgReferenceDoctors(type) {\r\n    if (type === 'referralChange') {\r\n      this.orgRefDoctorsList = [];\r\n      this.refOrgList = [];\r\n    }\r\n    this.formGroup.patchValue({\r\n      refDoctorContactNo: null\r\n    });\r\n    if (type !== 'organisationChange') {\r\n      this.formGroup.patchValue({\r\n        refOrgNm: null\r\n      });\r\n    }\r\n    this.formGroup.patchValue({\r\n      refDoctorNm: null\r\n    });\r\n\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      referralType: this.formGroup.get('referralType').value,\r\n      refOrgNm: this.formGroup.get('refOrgNm').value\r\n    };\r\n\r\n    this.opdApiService.orgDoctors(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          if (type === 'organisationChange') {\r\n            this.orgRefDoctorsList = [];\r\n            this.orgRefDoctorsList = response.data;\r\n          }\r\n          if (type !== 'organisationChange') {\r\n            this.orgRefDoctorsList = [];\r\n            this.refOrgList = [];\r\n            this.refOrgList = response.data;\r\n            this.orgRefDoctorsList = response.data;\r\n            this.refOrgList = this.refOrgList.filter(function (value) {\r\n              return value.refOrgNm;\r\n            });\r\n          }\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  fetchOrgReferenceTypes() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      masterType: 'REFERRAL TYPE',\r\n    };\r\n\r\n    this.opdApiService.fetchCommonValues(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.referenceList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  onselctingconsultantNm() {\r\n    const refDoctorNm = this.formGroup.get('refDoctorNm').value;\r\n    this.formGroup.patchValue({\r\n      refDoctorContactNo: refDoctorNm.refDocContactNo\r\n    });\r\n  }\r\n  //  this below functions are used for the ipd patients\r\n  multipleApiRespone() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      orgGroupId: this.userSession.orgGroupId\r\n    };\r\n    this.opdApiService\r\n      .multipleApiRespone<MultipleApiResponse>(payload)\r\n      .subscribe(responseList => {\r\n        this.patientCategoriesList = responseList[0].data;\r\n        this.departmentList = responseList[1].data;\r\n      });\r\n  }\r\n  // for referaal doctors we need to use comparators\r\n  // for by default shouing data in select boxes while updating the data\r\n  refDoctorComparator(o1, o2) {\r\n    return o1 && o2 && o1.refDoctorNm === o2.refDoctorNm;\r\n  }\r\n  refTypeComparator(o1, o2) {\r\n    // && o1.referralType === o2.referralType\r\n    return o1 && o2 && o1 === o2;\r\n  }\r\n  refOrgComparator(o1, o2) {\r\n    // .refOrgNm === o2.refOrgNm\r\n    return o1 && o2 && o1 === o2;\r\n  }\r\n  // this will call when ever wardTypeChanges\r\n  fetchWardList() {\r\n    const wardType = this.formGroup.get('wardType').value;\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      wardType\r\n    };\r\n\r\n    this.opdApiService.fetchWards(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.wardList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  listOfRoomNames() {\r\n    const wardId = this.formGroup.get('wardId').value;\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      wardId\r\n    };\r\n\r\n    this.opdApiService.listOfRoomNames(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.roomList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n// Capture finger print method start\r\n/**\r\n * @description this method is used for open the model for captur finger print.\r\n * @function captureFinger\r\n * @param data\r\n */\r\ncaptureFinger(data) {\r\n  const dialogRef = this.dialog.open(FingerPrintComponent, {\r\n    width: '350px',\r\n    data: {\r\n      data: this.fingerPrint,\r\n      isSearch: false,\r\n      isEdit: data\r\n    }\r\n  });\r\n  dialogRef.afterClosed().subscribe(res => {\r\n    if (res) {\r\n      this.fingerPrint = res;\r\n      if (this.fingerPrint[0].fingerprint || this.fingerPrint[1].fingerprint) {\r\n        this.isFinger = true;\r\n      } else {\r\n        this.isFinger = false;\r\n      }\r\n    }\r\n  });\r\n}\r\n// capture finger print method end\r\n\r\n  ngOnDestroy() { }\r\n}\r\n","<div class=\"container-fluid add-reference\">\r\n    <i title=\"Cancel\" class=\"fa fa-times-circle cancel\" (click)=\"closeForm()\"></i>\r\n    <h2 class=\"add-reference__header\"> Add Reference Doctor</h2>\r\n    <form id=\"formGroup\" [formGroup]=\"formGroup\" #formDir=\"ngForm\" class=\"clearfix add-reference__form\">\r\n      <div class=\"row white-bg p-0\">\r\n        <div class=\"col-sm-2 col-xs-12 p-0\">\r\n          <label class=\"center-block\">{{'COMMONLABELS.REFERRAL_TYPE' | translate }}\r\n            <span class=\"astrik-symbol \">\r\n              <i class=\"fa fa-asterisk \"></i>\r\n            </span>\r\n          </label>\r\n          <select id=\"referralType\" formControlName=\"referralType\" (change)=\"checkIsDoctor()\">\r\n            <option [ngValue]=null></option>\r\n            <option [ngValue]=\"mode.attributeCode\" *ngFor=\"let mode of referenceList\">{{mode.attributeCode}}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"col-sm-3 col-xs-12 add-reference__form__form-field\">\r\n            <label class=\"center-block\">{{'COMMONLABELS.HOSPITAL_ORGANISATION_NAME' | translate }}</label>\r\n            <input   id=\"refOrgNm\" type=\"text\" formControlName=\"refOrgNm\">\r\n            <div *ngIf=\"formGroup.controls[ 'refOrgNm'].invalid && (formGroup.controls[ 'refOrgNm'].dirty || formGroup.controls[\r\n              'refOrgNm'].touched||formDir.submitted) \"\r\n              class=\"has-error popover-style\" role=\"alert\">\r\n              <div *ngIf=\"formGroup.controls[ 'refOrgNm'].errors.pattern\" class=\"dynamic_popover\">\r\n                * Enter valid hospital name\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n              <div *ngIf=\"formGroup.controls[ 'refOrgNm'].errors.minlength \" class=\"dynamic_popover\">\r\n                * hospital name is too small\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n              <div *ngIf=\"formGroup.controls[ 'refOrgNm'].errors.maxlength \" class=\"dynamic_popover\">\r\n                * hospital name is too long\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class = \"col-sm-4 p-l-r-0\">\r\n            <div class = \"col-sm-12\">\r\n              <label class=\"center-block\"> {{'COMMONLABELS.DOCTOR_NAME_TEXT' | translate }}\r\n                <span *ngIf=\"this.formGroup.get('referralType').value === 'Doctor'\" class=\"astrik-symbol \">\r\n                  <i class=\"fa fa-asterisk \"></i>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div class = \"col-sm-12 d-flex\">\r\n              <div class = \"col-sm-3 p-l-r-0\"  [ngClass]=\"{'field': this.formGroup.get('referralType').value !== 'Doctor'}\">\r\n                <select id=\"honorificNm\" formControlName=\"honorificNm\" tabindex=\"3\">\r\n                  <option *ngFor=\"let honorific of honorificsList\" [value]=\"honorific.attributeCode\">{{honorific.description}}</option>\r\n                </select>\r\n              </div>\r\n              <div class = \"col-sm-9 p-l-r-0\">\r\n                <input type=\"text\" formControlName=\"refDoctorNm\">\r\n                <div *ngIf=\"formGroup.controls[ 'refDoctorNm'].invalid && (formGroup.controls[ 'refDoctorNm'].dirty ||formDir.submitted) \"\r\n                  class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"formGroup.controls[ 'refDoctorNm'].errors.pattern\" class=\"dynamic_popover\">\r\n                    * Enter valid name\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"formGroup.controls[ 'refDoctorNm'].errors.required \" class=\"dynamic_popover\">\r\n                    * name is required\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"formGroup.controls[ 'refDoctorNm'].errors.minlength \" class=\"dynamic_popover\">\r\n                    * name is too small\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"formGroup.controls[ 'refDoctorNm'].errors.maxlength \" class=\"dynamic_popover\">\r\n                    * name is too long\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- <div class=\" col-sm-1 col-xs-12 p-r-0 pt-1\"  [ngClass]=\"{'field': this.formGroup.get('referralType').value !== 'Doctor'}\" >\r\n              <label  class=\"center-block\">\r\n                  <span *ngIf=\"this.formGroup.get('referralType').value === 'Doctor'\" class=\"astrik-symbol \"> <i class=\"fa fa-asterisk \"></i></span>\r\n                </label>\r\n            <select id=\"honorificNm\" formControlName=\"honorificNm\" tabindex=\"3\">\r\n              <option *ngFor=\"let honorific of honorificsList\" [value]=\"honorific.attributeCode\">{{honorific.description}}</option>\r\n            </select>\r\n          </div> -->\r\n        <!-- <div class=\"col-sm-3 col-xs-12 add-reference__form__form-field p-l-0\">\r\n          <label class=\"center-block\"> {{'COMMONLABELS.DOCTOR_NAME_TEXT' | translate }}\r\n            <span *ngIf=\"this.formGroup.get('referralType').value === 'Doctor'\" class=\"astrik-symbol \">\r\n              <i class=\"fa fa-asterisk \"></i>\r\n            </span>\r\n          </label>\r\n          <input type=\"text\" formControlName=\"refDoctorNm\">\r\n          <div *ngIf=\"formGroup.controls[ 'refDoctorNm'].invalid && (formGroup.controls[ 'refDoctorNm'].dirty ||formDir.submitted) \"\r\n            class=\"has-error popover-style\" role=\"alert\">\r\n            <div *ngIf=\"formGroup.controls[ 'refDoctorNm'].errors.pattern\" class=\"dynamic_popover\">\r\n              * Enter valid name\r\n              <span class=\"doArrow\"></span>\r\n            </div>\r\n            <div *ngIf=\"formGroup.controls[ 'refDoctorNm'].errors.required \" class=\"dynamic_popover\">\r\n              * name is required\r\n              <span class=\"doArrow\"></span>\r\n            </div>\r\n            <div *ngIf=\"formGroup.controls[ 'refDoctorNm'].errors.minlength \" class=\"dynamic_popover\">\r\n              * name is too small\r\n              <span class=\"doArrow\"></span>\r\n            </div>\r\n            <div *ngIf=\"formGroup.controls[ 'refDoctorNm'].errors.maxlength \" class=\"dynamic_popover\">\r\n              * name is too long\r\n              <span class=\"doArrow\"></span>\r\n            </div>\r\n          </div>\r\n        </div> -->\r\n\r\n        <div class=\"col-sm-3 col-xs-12 add-reference__form__form-field\">\r\n          <label class=\"center-block\">{{'COMMONLABELS.MOBILE_NO_TEXT' | translate }}</label>\r\n          <input id=\"refDocContactNo\" type=\"text\" class=\" white-bg\" formControlName=\"refDocContactNo\" minlength=\"10\"\r\n            maxlength=\"10\">\r\n          <div *ngIf=\"formGroup.controls[ 'refDocContactNo'].invalid && (formGroup.controls[ 'refDocContactNo'].dirty || formGroup.controls[\r\n            'refDocContactNo'].touched||formDir.submitted) \"\r\n            class=\"has-error popover-style\" role=\"alert\">\r\n            <div *ngIf=\"formGroup.controls[ 'refDocContactNo'].errors.pattern\" class=\"dynamic_popover\">\r\n              * Enter valid Contact number\r\n              <span class=\"doArrow\"></span>\r\n            </div>\r\n            <div *ngIf=\"formGroup.controls[ 'refDocContactNo'].errors.maxlength \" class=\"dynamic_popover\">\r\n              * Contact number is too long\r\n              <span class=\"doArrow\"></span>\r\n            </div>\r\n            <div *ngIf=\"formGroup.controls[ 'refDocContactNo'].errors.pattern \" class=\"dynamic_popover\">\r\n              * Enter Valid mobile number\r\n              <span class=\"doArrow\"></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n    <!-- <div *ngIf=\"isAdd\" class=\"m-t-10\">\r\n      <button class=\"btn-app btn-save\" type=\"button\" [disabled]=\"!formDir.valid\" (click)=\"addReferenceDoctor(formGroup.value,'close')\">\r\n        <i class=\"fa fa-arrow-circle-up fa-btn-icon\" aria-hidden=\"true\"></i> Submit & Close </button>\r\n      <button id=\"submitAddNew\" class=\"btn-app btn-save\" type=\"button\" [disabled]=\"!formDir.valid\" (click)=\"addReferenceDoctor(this.formGroup.value,'add')\">\r\n        <i class=\"fa fa-arrow-circle-up fa-btn-icon\" aria-hidden=\"true\"></i>Submit & Add New</button>\r\n      <button id=\"reset\" type=\"button\" class=\"btn-app btn-delete\" (click)=\"clearFormData()\">\r\n        <i class=\"fa fa-refresh fa-btn-icon\" aria-hidden=\"true\"></i>Reset</button>\r\n    </div> -->\r\n    <div\r\n    class=\"m-t-b-15 form-button-group\" *ngIf=\"isAdd\">\r\n    <ul>\r\n      <li>\r\n          <button class=\"btn-app btn-save\" type=\"button\" [disabled]=\"!formDir.valid\" (click)=\"addReferenceDoctor(formGroup.value,'close')\">\r\n              <i class=\"fa fa-arrow-circle-up fa-btn-icon\" aria-hidden=\"true\"></i> Submit & Close </button>\r\n      </li>\r\n      <li>\r\n          <button id=\"submitAddNew\" class=\"btn-app btn-save\" type=\"button\" [disabled]=\"!formDir.valid\" (click)=\"addReferenceDoctor(this.formGroup.value,'add')\">\r\n              <i class=\"fa fa-arrow-circle-up fa-btn-icon\" aria-hidden=\"true\"></i>Submit & Add New</button>\r\n      </li>\r\n      <li>\r\n          <button id=\"reset\" type=\"button\" class=\"btn-app btn-delete\" (click)=\"clearFormData()\">\r\n              <i class=\"fa fa-refresh fa-btn-icon\" aria-hidden=\"true\"></i>Reset</button>\r\n      </li>\r\n     </ul>\r\n  </div>\r\n    <div class=\"m-t-b-15 form-button-group\" *ngIf=\"!isAdd\">\r\n      <ul>\r\n        <li>\r\n      <button class=\"btn-app btn-save\" type=\"button\" [disabled]=\"!formGroup.get('refDoctorNm').value\" (click)=\"addReferenceDoctor(formGroup.value,'update')\">\r\n        <i class=\"fa fa-arrow-circle-up fa-btn-icon\" aria-hidden=\"true\"></i>Update </button>\r\n      </li>\r\n      </ul>\r\n    </div>\r\n    <div *ngIf=\"referenceDocList && referenceDocList.length && isAdd\" class=\"row m-t-10 m-b add-reference__doctors-table\">\r\n      <table class=\"flat-table  table-responsive table-bordered table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>S.NO</th>\r\n            <th>Referral Type</th>\r\n            <th>Hospital/Organisation Name</th>\r\n            <th>Name</th>\r\n            <th>Mobile Number</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let doctor of referenceDocList; index as i\">\r\n            <td>{{i+1}}</td>\r\n            <td>{{doctor.referralType}}</td>\r\n            <td>{{doctor.refOrgNm}}</td>\r\n            <td>{{doctor.honorificNm}}{{doctor.refDoctorNm}}</td>\r\n            <td>{{doctor.refDocContactNo}}</td>\r\n            <td class=\"action-items\">\r\n              <ul class = \"d-flex\">\r\n                <li class=\"delete-ico align-st\">\r\n                  <i class=\"fa fa-trash delete-icon\" (click)=\"deleteReferenceDoctor(doctor)\"></i>\r\n                </li>\r\n                <li class=\"edit-icon\">\r\n                  <i class=\"mdi mdi-pencil\" (click)=\"editForm(doctor)\"></i>\r\n                </li>\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit , ViewChild} from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Validators , NgForm} from '@angular/forms';\r\nimport { OpdApiService, UtilService, UserService } from '@core/services';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ConfirmationDialogComponent } from '@shared/components/confirmation-dialog/confirmation-dialog.component';\r\nimport { OpdService } from '@app/modules/opd/services/opd.service';\r\n@Component({\r\n  selector: 'app-addreferencedoctors',\r\n  templateUrl: './addreferencedoctors.component.html',\r\n  styleUrls: ['./addreferencedoctors.component.scss']\r\n})\r\nexport class AddreferencedoctorsComponent implements OnInit {\r\n  formGroup: FormGroup;\r\n  private refDoctorId: number;\r\n  public referenceDocList: any[] = [];\r\n  public isAdd = true;\r\n  public paymentModesList = [];\r\n  public referenceList: any;\r\n  honorificsList;\r\n  @ViewChild('formDir')\r\n  registrationForm: NgForm;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddreferencedoctorsComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private opdApiService: OpdApiService,\r\n    private userService: UserService,\r\n    public dialog: MatDialog,\r\n    private opdService: OpdApiService,\r\n  ) {\r\n    this.userSession = this.userService.getUser();\r\n  }\r\n  private userSession: UserSession;\r\n  commonValues = <any>{};\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n      this.fetchCommonValues('HONORIFICS');\r\n    this.fetchReferenceDoctor();\r\n    this.fetchReferenceTypes();\r\n\r\n\r\n  }\r\n  initForm() {\r\n\r\n    this.formGroup = this.formBuilder.group({\r\n      referralType: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n        ]\r\n      ],\r\n      honorificNm: [\r\n        null\r\n      ],\r\n      refDoctorNm: [\r\n        null,\r\n        [\r\n          // Validators.required,\r\n          Validators.pattern(/^[a-zA-Z ]*$/),\r\n          Validators.minLength(3),\r\n          Validators.maxLength(20)\r\n        ]\r\n      ],\r\n      refOrgNm: [\r\n        null,\r\n        [\r\n          // Validators.required,\r\n          Validators.pattern(/^[a-zA-Z ]*$/),\r\n          Validators.minLength(3),\r\n          Validators.maxLength(20)\r\n        ]\r\n      ],\r\n      refDocContactNo: [\r\n        null,\r\n        [\r\n          Validators.pattern(/(5|6|7|8|9)\\d{9}$/),\r\n          Validators.minLength(10),\r\n          Validators.maxLength(10),\r\n          // Validators.required\r\n        ]\r\n      ],\r\n\r\n\r\n    });\r\n  }\r\n  checkIsDoctor() {\r\n    this.formGroup.patchValue({refDoctorNm: null});\r\n    this.formGroup.patchValue({honorificNm: null});\r\n    this.formGroup.patchValue({refDocContactNo: null});\r\n    this.formGroup.patchValue({refOrgNm: null});\r\n    this.formGroup.get('refDoctorNm').clearValidators();\r\n    this.formGroup.get('refDoctorNm').updateValueAndValidity();\r\n    this.formGroup.get('honorificNm').clearValidators();\r\n    this.formGroup.get('honorificNm').updateValueAndValidity();\r\n    if (this.formGroup.get('referralType').value &&\r\n     this.formGroup.get('referralType').value === 'Doctor') {\r\n      this.formGroup.get('refDoctorNm').setValidators(\r\n        [Validators.required,\r\n        Validators.pattern(/^[a-zA-Z ]*$/),\r\n      Validators.minLength(3),\r\n      Validators.maxLength(20)]);\r\n      this.formGroup.get('refDoctorNm').updateValueAndValidity();\r\n      this.formGroup.get('honorificNm').setValidators(\r\n        [Validators.required]);\r\n      this.formGroup.get('honorificNm').updateValueAndValidity();\r\n    }\r\n  }\r\n  fetchCommonValues(masterType) {\r\n    const payload = {\r\n      masterType\r\n    };\r\n    this.opdApiService.fetchCommonValues(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200' && response.data) {\r\n        this.honorificsList = response.data.filter(data => {\r\n        return data.attributeCode !== 'b/o.';\r\n          });\r\n          this.honorificsList.map(data => {\r\n           if (data.description === 'Doctor') {\r\n            data.description = 'Dr.';\r\n           }\r\n\r\n          });\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  fetchReferenceTypes() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      masterType: 'REFERRAL TYPE',\r\n      authenticatedUserId: this.userSession.regId\r\n    };\r\n\r\n    this.opdService.fetchCommonValues(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.referenceList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  addReferenceDoctor(formData, actionType) {\r\n    const payload = formData;\r\n    (payload.orgId = this.userSession.orgId),\r\n      (payload.orgGrpId = this.userSession.orgGroupId);\r\n    payload.createdUsrId = this.userSession.regId;\r\n    if (this.refDoctorId) {\r\n      payload.refDoctorId = this.refDoctorId;\r\n    }\r\n    this.opdApiService.addReferenceDoctor(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          if (this.referenceDocList.length) {\r\n          this.referenceDocList = this.referenceDocList.filter(\r\n            item => item.refDoctorId !== formData.refDoctorId\r\n          );\r\n        }\r\n          this.fetchReferenceDoctor();\r\n          // this.referenceDocList.push(response.data);\r\n          this.refDoctorId = null;\r\n          if (actionType === 'update') {\r\n            this.isAdd = true;\r\n          }\r\n          if (actionType === 'close') {\r\n            this.dialogRef.close();\r\n          } else {\r\n            this.registrationForm.resetForm();\r\n          }\r\n          this.clearFormData();\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.warning('Failure!', 'something went wrong');\r\n      }\r\n    );\r\n  }\r\n  editForm(doctorData) {\r\n    this.formGroup.patchValue(doctorData);\r\n    this.refDoctorId = doctorData.refDoctorId;\r\n    this.isAdd = false;\r\n  }\r\n  fetchReferenceDoctor() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      authenticatedUserId: this.userSession.regId\r\n    };\r\n    this.opdApiService.fetchReferenceDoctor(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200' && response.data) {\r\n          this.referenceDocList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  deleteReferenceDoctor(doctor) {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Delete ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      refDoctorId: doctor.refDoctorId\r\n    };\r\n    this.opdApiService.deleteReferenceDoctor(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.referenceDocList = this.referenceDocList.filter(\r\n            x => x.refDoctorId !== doctor.refDoctorId\r\n          );\r\n          this.toastr.success('success!', response.responseMessage);\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n});\r\n  }\r\n  clearFormData() {\r\n    this.registrationForm.resetForm();\r\n    this.formGroup.get('refDoctorNm').clearValidators();\r\n    this.formGroup.get('refDoctorNm').updateValueAndValidity();\r\n    this.formGroup.get('honorificNm').clearValidators();\r\n    this.formGroup.get('honorificNm').updateValueAndValidity();\r\n  }\r\n  closeForm() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"col-sm-12 p-l-r-10 p-t-b-5 mt-2\">\r\n  <div class=\"col-sm-12 p-0 bg-white container-height common-radius box-shadow\">\r\n    <div class=\"container-tittle row m-0 p-10 border-bottom\">\r\n      <div class=\"col-sm-10 p-0 total-count\">\r\n        <h3>{{'OPD.HOSPITAL_PATIENTS_TEXT' | translate }} - <span class=\"pt-0 pb-0\">{{totalCount}}</span></h3>\r\n      </div>\r\n      <div class=\"col-sm-2 pl-4 pr-0 text-right\">\r\n        <div class=\"p-0 add-practitioner pt-1 col-sm-6 text-left\" (click)=\"addReferenceDoctors()\">\r\n          <a> Add Referral(s)</a>\r\n        </div>\r\n        <div class=\"filter-icon-container col-sm-6 pr-0 text-right\">\r\n          <div class=\"filter-content filter-ico\">\r\n            <button id=\"showFilter\" class=\"filter-ico\" (click)=\"showFilter()\"><i class=\"fa fa-filter\"></i></button>\r\n          </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"isShowFilter\" class=\"row p-l-r-5 m-0 p-t-b-10 border-bottom filter-box \">\r\n      <div class=\"col-sm-4 p-l-r-5\">\r\n        <div class=\"col-sm-12 p-0\">\r\n          <label>Select Duration</label>\r\n        </div>\r\n        <div class=\"menu-radio-group\">\r\n          <input name=\"filterControl\" type=\"radio\" [formControl]=\"filterControl\" id=\"custom\" value=\"custom\">\r\n          <label for=\"custom\">Custom</label>\r\n          <input name=\"filterControl\" type=\"radio\" [formControl]=\"filterControl\" id=\"dayWise\" value=\"dayWise\">\r\n          <label for=\"dayWise\">Day</label>\r\n          <input name=\"filterControl\" type=\"radio\" [formControl]=\"filterControl\" id=\"weekWise\" value=\"weekWise\">\r\n          <label for=\"weekWise\">Week</label>\r\n          <input name=\"filterControl\" type=\"radio\" [formControl]=\"filterControl\" id=\"monthWise\" value=\"monthWise\">\r\n          <label for=\"monthWise\">Month</label>\r\n          <input name=\"filterControl\" type=\"radio\" [formControl]=\"filterControl\" id=\"3monthsWise\" value=\"3monthsWise\">\r\n          <label for=\"3monthsWise\">3 months</label>\r\n        </div>\r\n        <div *ngIf=\"filterControl.value === 'custom'\" class=\"datepickers filter-container mt-3 m-0 row\">\r\n          <div class=\"col-sm-6 p-l-r-5\">\r\n            <label>{{'COMMONLABELS.FROM_DATE_TEXT' | translate }} </label>\r\n            <div class=\"dateTime-picker-p dateTime-picker\">\r\n              <p class=\" input-group\">\r\n                <input type=\"text\" [(ngModel)]=\"fromDate\" [max]=\"maxDate\" (ngModelChange)=\"onChangeDates()\"\r\n                  [matDatepicker]=\"fromDt\" class=\"input-width\">\r\n                <mat-datepicker #fromDt></mat-datepicker>\r\n                <span class=\"input-group-btn w-10 \">\r\n                  <button class=\"btn btn-default border-left-0 btn-calender datepicker calender-button-height\" type=\"button \" (click)=\"datePickerToggler(fromDt)\">\r\n                    <i class=\"fa fa-calendar \"></i>\r\n                  </button>\r\n                </span>\r\n              </p>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"col-sm-6 p-l-r-5\">\r\n            <label>{{'COMMONLABELS.TO_DATE_TEXT' | translate }}</label>\r\n            <div class=\"dateTime-picker-p dateTime-picker\">\r\n              <p class=\" input-group\">\r\n                <input type=\"text\" [(ngModel)]=\"toDate\" [max]=\"maxDate\" (ngModelChange)=\"onChangeDates()\"\r\n                  [matDatepicker]=\"toDt\" class=\"input-width\">\r\n                <mat-datepicker #toDt></mat-datepicker>\r\n                <span class=\"input-group-btn w-10\">\r\n                  <button class=\"btn btn-default border-left-0 btn-calender datepicker calender-button-height\" type=\"button \" (click)=\"datePickerToggler(toDt)\">\r\n                    <i class=\"fa fa-calendar\"></i>\r\n                  </button>\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <div class=\"col-sm-3 p-l-r-5\">\r\n        <label>{{'COMMONLABELS.DEPT_NAME_TEXT' | translate }}</label>\r\n        <select [(ngModel)]=\"searchText\">\r\n          <option [ngValue]=\"undefined\"></option>\r\n          <option *ngFor=\"let department of departmentList\" [value]=\"department.deptName\">{{department.deptName}}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col-sm-3 p-l-r-5\">\r\n        <label>{{'COMMONLABELS.DOCTOR_TEXT' | translate }}</label>\r\n        <select [(ngModel)]=\"doctorSearch\">\r\n          <option [ngValue]=\"undefined\"></option>\r\n          <option *ngFor=\"let doctor of doctorsList\" [value]=\"doctor.doctorName\">{{doctor.doctorName}}</option>\r\n        </select>\r\n      </div>\r\n       <div class=\"col-sm-2 p-l-r-5\">\r\n        <label>Refferal</label>\r\n        <select [(ngModel)]=\"referral\">\r\n          <option [ngValue]=\"undefined\"></option>\r\n          <option *ngFor=\"let refDoctor of referenceDocList\" [value]=\"refDoctor.refDoctorNm\">{{refDoctor.refDoctorNm}}</option>\r\n        </select>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"col-sm-12 p-0\" *ngIf=\"allPatientList.length\">\r\n      <table class=\"scroll-table table all-patients-table\">\r\n        <thead class=\"fixedHeader\">\r\n          <tr>\r\n            <th class=\"pt-per-dtls\">{{'OPD.NAME_PERSONAL_DETAILS_TEXT' | translate }}</th>\r\n            <th class=\"pt-last-visit\"> {{'OPD.LAST_VISIT_TEXT' | translate }}</th>\r\n            <th class=\"pt-last-visit\"> {{'OPD.REFERRAL' | translate }}</th>\r\n            <th class=\"pt-category\">{{'OPD.CATEGORY_TEXT' | translate }}</th>\r\n            <th class=\"pt-booking-status\">{{'OPD.BOOKING_STATUS_TEXT' | translate }}</th>\r\n            <th class=\"pt-status\">Patient Status</th>\r\n            <th class=\"action-items\">{{'OPD.ACTIONS_TEXT' | translate }}</th>\r\n          </tr>\r\n          <tr class=\"data-sort-row\">\r\n              <th class=\"pt-per-dtls\"><input type=\"text\" placeholder=\"Name\" [(ngModel)]=\"inputName\"></th>\r\n              <th class=\"pt-last-visit\"> <input type=\"text\" [(ngModel)]=\"doctorSearch\" placeholder=\"Doctor Name\"></th>\r\n              <th class=\"pt-last-visit\"> <input type=\"text\" placeholder=\"Referral Name\" [(ngModel)]=\"referral\"></th>\r\n              <th class=\"pt-category\"><input type=\"text\" placeholder=\"Category\" [(ngModel)]=\"inputCategory\"></th>\r\n              <th class=\"pt-booking-status\"><input type=\"text\" placeholder=\"Booking Status\" [(ngModel)]=\"inputBookingStatus\"></th>\r\n              <th class=\"pt-status\"><input type=\"text\" placeholder=\"Patient Status\" [(ngModel)]=\"inputPatientStatus\"></th>\r\n              <th class=\"action-items\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody class=\"scrollContent\">\r\n          <tr *ngFor='let patient of allPatientList | searchfilter:searchText:doctorSearch:inputName:inputDate:inputCategory:inputBookingStatus:inputPatientStatus:referral'>\r\n            <td class=\"pt-per-dtls row m-0\">\r\n              <div class=\"pt-img-circle col-sm-2\">\r\n                <span *ngIf=\"patient.imagePath\" class=\"img-container\">\r\n                    <img class=\"pic-img-circle\" src=\"{{patient.imagePath }} \">\r\n                </span>\r\n                <span *ngIf=\"!patient.imagePath\" class=\"img-container bg-pale-blue\">\r\n                  <img  src=\"{{getAvatorImg(patient)}}\" />\r\n                </span>\r\n                <span class=\"patient-type pt-registered\" *ngIf=\"patient.patientType==='REGSTD'\">Registered</span>\r\n                <span class=\"patient-type pt-appointment\" *ngIf=\"patient.patientType==='APPMNT'\">Appointment</span>\r\n              </div>\r\n              <div class=\"patient-dtls-content col-sm-10 p-0\">\r\n                <h3>{{patient.honorificNm}} {{patient.patientNm}}</h3>\r\n                <label>Patient ID: </label><span class=\"patient-demo-details\" matTooltip=\"Edit Patient Info\" (click)=\"editPatientData(patient)\">\r\n                  <a>{{patient.hosPatientId}}</a></span>\r\n                  <ul>\r\n                      <li *ngIf=\"patient.gender\"><p>{{patient.gender}}</p></li>\r\n                      <li *ngIf=\"patient.patientAge\"><p>{{patient.patientAge}}</p></li>\r\n                      <li *ngIf=\"patient.mobileNo\"><p>{{patient.mobileNo}}</p></li>\r\n                      <li *ngIf=\"patient.emailId\"><p>{{patient.emailId}}</p></li>\r\n                    </ul>\r\n              </div>\r\n            </td>\r\n            <td class=\"pt-last-visit\">\r\n              <p>{{patient.visitDt|date:'dd/MM/yyyy'}}\r\n                <span *ngIf=\"patient.doctorNm||patient.deptNm\">\r\n                  <br> Dr.{{patient.doctorNm}} ({{patient.deptNm}})\r\n                </span>\r\n              </p>\r\n            </td>\r\n            <td class=\"pt-last-visit\">\r\n              <p>{{patient.referralType}}\r\n                <span *ngIf=\"patient.refDoctorNm && patient.refDoctorNm.length\">\r\n                  <br> Dr.{{patient.refDoctorNm}}\r\n                </span>\r\n              </p>\r\n            </td>\r\n            <td class=\"pt-category\">\r\n              <p>{{patient.patientCategoryNm}}</p>\r\n            </td>\r\n            <td class=\"pt-booking-status\">\r\n              <div *ngIf=\"patient.patientType==='REGSTD'\">\r\n                <div class=\"confirmed-label \">Payment Done</div>\r\n                <div class=\"confirmed-text \">(Confirmed)</div>\r\n              </div>\r\n              <div class=\"sessionAlign p-l-20\" *ngIf=\"patient.patientType==='APPMNT'\">\r\n                <div class=\"pending-label \">Payment Due</div>\r\n                <div class=\"pending-text \">(Pending)</div>\r\n              </div>\r\n            </td>\r\n            <td class=\"pt-status\">\r\n              <p>{{patient.patientStatus}}</p>\r\n            </td>\r\n            <td class=\"action-items\">\r\n              <ul>\r\n                <li *ngIf=\"patient.patientType==='REGSTD'\" (click)=\"generateToken(patient)\"><i matTooltip=\"Print\"  class=\"mdi mdi-printer printicon-margin \"></i></li>\r\n                <li><i matTooltip=\"Billing\" class=\"fa fa-money-bill printicon-margin\" (click)=\"clinicalBilling(patient)\"></i></li>\r\n                <li (click)=\"editPatientData(patient)\"><i matTooltip=\"Edit Patient Details\" class=\"mdi mdi-pencil\"></i></li>\r\n                <li *ngIf=\"patient.patientType==='REGSTD'\" (click)=\"deletePatientVisitDetails(patient.patientVisitId)\"><i matTooltip=\"Delete\"  class=\"mdi mdi-delete deleteicon-margin\" ></i></li>\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n    <div *ngIf=\"allPatientList.length===0\" class=\"page-info-message col-sm-12 no-padding\">\r\n      <ul>\r\n        <li class=\"info-icon\"><i class=\"mdi mdi-information\"></i></li>\r\n        <li class=\"info-message\">\r\n          <p>Oh! seems all is well, no patients yet. you can click the above filter icon and use it to retrive past\r\n            registered patient list</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\nimport { PatientdataService } from '@app/modules/opd/components/allpatients/patientdata.service';\r\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\r\nimport { OpdApiService, UtilService } from '@core/services';\r\nimport { UserService } from '@core/services';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ConfirmationDialogComponent } from '@shared/components/confirmation-dialog/confirmation-dialog.component';\r\nimport { OpdService } from '@app/modules/opd/services/opd.service';\r\nimport { FormControl, AbstractControl } from '@angular/forms';\r\nimport { BillingserviceService } from '../billing/billingservice.service';\r\nimport { AddreferencedoctorsComponent } from '../addreferencedoctors/addreferencedoctors.component';\r\n\r\n@Component({\r\n  selector: 'app-allpatients',\r\n  templateUrl: './allpatients.component.html',\r\n  styleUrls: ['./allpatients.component.scss']\r\n})\r\nexport class AllpatientsComponent implements OnInit {\r\n  allPatientList = [];\r\n  patientDemographicData: any;\r\n  isShowFilter = false;\r\n  show = false;\r\n  searchType = '';\r\n  searchText: '';\r\n  public totalCount: number;\r\n  public editable = false;\r\n  public navigateToAllPatients = false;\r\n  doctorSearch: '';\r\n  referral: '';\r\n  inputName: '';\r\n  inputDate: '';\r\n  fromDate: '';\r\n  toDate: '';\r\n  departmentList: any;\r\n  doctorsList: any;\r\n  referenceDocList: any;\r\n  department: any;\r\n  inputCategory: any;\r\n  inputBookingStatus: any;\r\n  inputPatientStatus: any;\r\n  maxDate = new Date();\r\n  filterControl: AbstractControl;\r\n  constructor(\r\n    private opdService: OpdApiService,\r\n    private toastr: ToastrService,\r\n    private datePipe: DatePipe,\r\n    private utilService: UtilService,\r\n    private patientdataService: PatientdataService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private OpdServicePrint: OpdService,\r\n    private userService: UserService,\r\n    private billingserviceService: BillingserviceService\r\n  ) {\r\n    this.userSession = this.userService.getUser();\r\n  }\r\n  private userSession: UserSession;\r\n\r\n  ngOnInit() {\r\n    this.billingserviceService.setConsultationFormData(null);\r\n    this.allPatients(\r\n      this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n      this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n      null\r\n    );\r\n    this.departments();\r\n    this.doctorsData();\r\n    this.fetchReferenceDoctor();\r\n    this.filterControl = new FormControl('dayWise');\r\n    this.filterControl.valueChanges.subscribe(value => {\r\n      this.searchType = value;\r\n      this.allPatients(this.fromDate, this.toDate, this.searchType);\r\n    });\r\n  }\r\n  showDatepicker() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n  addReferenceDoctors() {\r\n    const dialogRef = this.dialog.open(AddreferencedoctorsComponent, {\r\n      data: {},\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // this.orgReferenceDoctors(obj);\r\n    });\r\n  }\r\n\r\n  allPatients(fromDate, toDate, value) {\r\n    const payload = {\r\n      fromDate,\r\n      toDate,\r\n      searchType: this.searchType,\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId\r\n    };\r\n    this.opdService.fetchAllPatients(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.allPatientList = response.data;\r\n          this.totalCount = this.allPatientList.length;\r\n          this.allPatientList = response.data.map(patient => {\r\n            if (patient.age || patient.age === 0) {\r\n              patient.patientAge = this.utilService\r\n                .parseAgeIndays(patient.age)\r\n                .get('patientAge');\r\n            }\r\n            if (patient.birthDt) {\r\n              patient.patientAge = this.utilService\r\n                .parseDob(patient.birthDt)\r\n                .get('patientAge');\r\n            }\r\n            return patient;\r\n          });\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      err => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  datePickerToggler(datePicker: MatDatepicker<Date>) {\r\n    datePicker[datePicker.opened ? 'close' : 'open']();\r\n  }\r\n  deletePatientVisitDetails(patientVisitId) {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Delete ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        const payload = {\r\n          patientVisitId,\r\n          orgId: this.userSession.orgId,\r\n          authenticatedUserId: this.userSession.regId,\r\n          orgGrpId: this.userSession.orgGroupId\r\n        };\r\n        this.opdService.deletePatientVisitDetails(payload).subscribe(\r\n          (response: any) => {\r\n            if (response.responseCode === 'E200') {\r\n              this.allPatientList = this.allPatientList.filter(\r\n                x => x.patientVisitId !== payload.patientVisitId\r\n              );\r\n              this.toastr.success(response.responseMessage);\r\n            } else if (response.response === 'E400') {\r\n              this.toastr.error('Failure!', response.responseMessage);\r\n            }\r\n          },\r\n          _ => {\r\n            this.toastr.error('Failure!', 'Something went wrong');\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  showFilter() {\r\n    this.isShowFilter = !this.isShowFilter;\r\n  }\r\n  onChangeDates() {\r\n    if (!this.fromDate || !this.toDate) {\r\n      return false;\r\n    }\r\n    this.allPatients(this.fromDate, this.toDate, null);\r\n  }\r\n  // navigate to the clinical billing screen\r\n  clinicalBilling(patientData) {\r\n    if (patientData.patientAdmitId) {\r\n      patientData.visitType = null;\r\n      this.patientdataService.setPatienDataForBilling(patientData);\r\n      this.toastr.warning(\r\n        'success!',\r\n        'Ipd patient not allowed for consultation'\r\n      );\r\n      return;\r\n    }\r\n    if (!patientData.patientAdmitId) {\r\n      patientData.visitType = null;\r\n      patientData.feeValidDt = null;\r\n      patientData.feeValidVisits = null;\r\n      patientData.patientCategoryNm = null;\r\n      patientData.patientStatus = null;\r\n      patientData.patientType = null;\r\n      patientData.patientVisitId = null;\r\n      patientData.registrationPrintType = null;\r\n      patientData.tokenNo = null;\r\n      patientData.deptNm = null;\r\n      patientData.doctorNm = null;\r\n      patientData.paymentStatus = null;\r\n      patientData.isNew = null;\r\n      this.billingserviceService.setConsultationFormData({ patientCategoryName: 'GEN' });\r\n    this.patientdataService.setPatienDataForBilling(patientData);\r\n      this.router.navigate(['../billing'], {\r\n        relativeTo: this.activatedRoute\r\n      });\r\n    }\r\n  }\r\n  editPatientData(patient) {\r\n    // hiding search options\r\n    this.OpdServicePrint.fingerPrintApiData.next(patient.fingerPrints);\r\n    this.editable = true;\r\n    this.OpdServicePrint.editable.next(this.editable);\r\n    this.navigateToAllPatients = true;\r\n    this.patientdataService.setNavigateToAllPatients(this.navigateToAllPatients);\r\n    this.patientdataService.setUserData(patient.patientId);\r\n    this.patientdataService.setUserVisitIdData(patient.patientVisitId);\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n        allPatientScreen: 'allPatientScreen'\r\n      }\r\n    };\r\n    this.router.navigate(['/registration/add-patient'], navigationExtras);\r\n  }\r\n  departments() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId\r\n    };\r\n    this.opdService.departments(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.departmentList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.data.responseMessage);\r\n        }\r\n      },\r\n      err => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  doctorsData() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      designation: 'Doctor'\r\n    };\r\n\r\n    this.opdService.getEmpListBasedOnDesignation(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.doctorsList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.data.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  fetchReferenceDoctor() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId\r\n    };\r\n    this.opdService.fetchReferenceDoctor(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200' && response.data) {\r\n          this.referenceDocList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  getSelectedText() { }\r\n  getAvatorImg(patientData) {\r\n    const image =\r\n      patientData && patientData.gender === 'Female'\r\n        ? 'female-ico.png'\r\n        : 'male-ico.png';\r\n    return `https://s3.ap-south-1.amazonaws.com/dru.assets/images/app/icons/${image}`;\r\n  }\r\n\r\n  generateToken(patient) {\r\n    if (\r\n      patient.registrationPrintType &&\r\n      patient.registrationPrintType === 'Case Sheet'\r\n    ) {\r\n      this.OpdServicePrint.generateCasesheet(patient);\r\n    }\r\n    if (\r\n      patient.registrationPrintType &&\r\n      patient.registrationPrintType !== 'Case Sheet'\r\n    ) {\r\n      this.OpdServicePrint.generateToken(patient);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientdataService {\r\n  constructor() { }\r\n  editable: any;\r\n  appointmentData: any;\r\n  patientDemographicData: string;\r\n  patientVisitId: any;\r\n  patientDataForBilling: any;\r\n  navigateToSearchPatient: any;\r\n  navigateToAllPatients: any;\r\n\r\n  setUserData(data: any) {\r\n    this.patientDemographicData = data;\r\n  }\r\n  setUserVisitIdData(visitId: any) {\r\n  this.patientVisitId = visitId;\r\n  }\r\n  getUserVisitIdData() {\r\n    return this.patientVisitId;\r\n  }\r\n  getUserData() {\r\n    return this.patientDemographicData;\r\n  }\r\n  setAppointmentData(data: any) {\r\n    this.appointmentData = data;\r\n  }\r\n  getAppointmentData() {\r\n    return this.appointmentData;\r\n  }\r\n  setPatienDataForBilling(data: any) {\r\n    this.patientDataForBilling = data;\r\n  }\r\n  getPatienDataForBilling() {\r\n    return this.patientDataForBilling;\r\n  }\r\n  setEditable(data: any) {\r\n    this.editable = data;\r\n  }\r\n  getEditable() {\r\n    return this.editable;\r\n  }\r\n  setNavigateToSearchPatient(data: any) {\r\n    this.navigateToSearchPatient = data;\r\n  }\r\n  getNavigateToSearchPatient() {\r\n    return this.navigateToSearchPatient;\r\n  }\r\n  setNavigateToAllPatients(data: any) {\r\n    this.navigateToAllPatients = data;\r\n  }\r\n  getNavigateToAllPatients() {\r\n    return this.navigateToAllPatients;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Pipe({\r\n  name: 'searchfilter'\r\n})\r\nexport class SearchfilterPipe implements PipeTransform {\r\n  patientNm: any;\r\n  private datePipe: DatePipe;\r\n  // transform(\r\n  //   allPatientList: any,\r\n  //   searchText?: string,\r\n  //   doctorSearch: string\r\n  // ): any {\r\n  //   if (searchText == null) {\r\n  //     return allPatientList;\r\n  //   }\r\n  //   return allPatientList.filter(function(patient) {\r\n  //     return (\r\n  //       patient.deptNm.toLowerCase().indexOf(searchText.toLowerCase()) > -1\r\n  //     );\r\n  //   });\r\n  // }\r\n\r\n  transform(\r\n    allPatientList: any,\r\n    searchText: string,\r\n    doctorSearch: string,\r\n    inputName: string,\r\n    inputDate: string,\r\n    inputCategory: string,\r\n    inputBookingStatus: string,\r\n    inputPatientStatus: string,\r\n    referral: string\r\n  ) {\r\n    if (allPatientList && allPatientList.length) {\r\n      return allPatientList.filter(patient => {\r\n        if (\r\n          (searchText && !patient.deptNm) ||\r\n          (doctorSearch && !patient.deptNm) ||\r\n          (referral && !patient.refDoctorNm)\r\n        ) {\r\n          return false;\r\n        }\r\n        if (patient.deptNm) {\r\n          if (\r\n            searchText &&\r\n            patient.deptNm.toLowerCase().indexOf(searchText.toLowerCase()) ===\r\n              -1\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        if (patient.doctorNm) {\r\n          if (\r\n            doctorSearch &&\r\n            patient.doctorNm\r\n              .toLowerCase()\r\n              .indexOf(doctorSearch.toLowerCase()) === -1\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // referral type\r\n        if (patient.refDoctorNm) {\r\n\r\n          if (\r\n            referral &&\r\n            patient.refDoctorNm\r\n              .toLowerCase()\r\n              .indexOf(referral.toLowerCase()) === -1\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        // patient category\r\n        if (patient.patientCategoryNm) {\r\n          if (\r\n            inputCategory &&\r\n            patient.patientCategoryNm\r\n              .toLowerCase()\r\n              .indexOf(inputCategory.toLowerCase()) === -1\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        // patient status\r\n        if (patient.patientStatus) {\r\n          if (\r\n            inputPatientStatus &&\r\n            patient.patientStatus\r\n              .toLowerCase()\r\n              .indexOf(inputPatientStatus.toLowerCase()) === -1\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n        // patient name\r\n        if (patient.patientNm) {\r\n          if (\r\n            inputName &&\r\n            patient.patientNm.toLowerCase().indexOf(inputName.toLowerCase()) ===\r\n              -1\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // patient visitDate\r\n        // if (patient.visitDt) {\r\n        //   const datePipe = new DatePipe('en-US');\r\n        //   patient.visitDt = datePipe.transform(patient.visitDt, 'yyyy/MM/dd');\r\n        //   if ( inputDate && patient.visitDt.toLowerCase().indexOf(inputDate.toLowerCase()) === -1) {\r\n        //     return false;\r\n        //   }\r\n        // }\r\n        // if (inputDate &&  (inputDate.length === 10 || inputDate.length === 2 || inputDate.length === 3 ||\r\n        //   inputDate.length === 5 || inputDate.length === 6 ) ) {\r\n        //   const splitedArray = inputDate.split('/') || [];\r\n        //   if (splitedArray) {\r\n        //     const reversArray = splitedArray.reverse();\r\n        //     if (reversArray && patient.visitDt.indexOf(reversArray.join('/')) === -1) {\r\n        //       return false;\r\n        //     }\r\n        //   }\r\n        // }\r\n        return true;\r\n      });\r\n    } else {\r\n        return allPatientList;\r\n    }\r\n  }\r\n}\r\n","<div class=\"row m-0\">\r\n  <div class=\"pt-dtl-menu col-sm-3 p-r-5 p-l-10\">\r\n    <div class=\"pt-dtl-menu row m-0 m-t-b-10 box-shadow\">\r\n      <div *ngIf=\"patientData\" class=\"patient-details-box col-sm-12 p-l-r-0 p-b-10\">\r\n        <span class=\"image-circle\">\r\n            <img *ngIf=\"patientData.imagePath\" class=\"img-style\" src=\"{{patientData.imagePath}} \">\r\n            <img *ngIf=\"!patientData.imagePath\" class=\"img-style\" src=\"{{getAvatorImg(patientData)}}\">\r\n        </span>\r\n        <h1>{{patientData.honorificNm}} {{patientData.patientNm}}</h1>\r\n        <p class=\"patientId-text\" *ngIf=\"patientData.tempHosPatientId\">{{patientData.tempHosPatientId}}</p>\r\n        <p class=\"patientId-text\" *ngIf=\"patientData.hosPatientId\">{{patientData.hosPatientId}}</p>\r\n        <ul>\r\n          <li>{{patientData.age}}</li>\r\n          <li>{{patientData.gender}}</li>\r\n          <li>{{patientData.bloodGrpNm}}</li>\r\n        </ul>\r\n      </div>\r\n      <div *ngIf=\"patientData?.mobileNo\" class=\"mobile-section col-md-12 no-padding\">\r\n        <i class=\"fas fa-mobile-alt mobile-icon col-md-2\" aria-hidden=\"true\"></i>\r\n        <p class=\"mobile-no col-md-5\">+91-{{patientData.mobileNo}}</p>\r\n        <p *ngIf=\"patientData?.alternateContactNo\" class=\"mobile-no col-md-5 p-l-19\">,+91-{{patientData.alternateContactNo}}</p>\r\n      </div>\r\n      <div class=\"menu-box\">\r\n        <ul class=\"left-side-design\">\r\n          <a *ngIf=\"patientData&&!patientData.patientAdmitId\"(click)=\"clinicalBilling()\" [ngClass]=\"{'nav-active-link':navLinks.clinical}\">\r\n            <li class=\"border-top\">\r\n              <span>\r\n                <i class=\"wfmi wfmi-i-waiting-area\"></i>\r\n              </span>\r\n              <p>{{'OPD.APPOINTMENT_TEXT' | translate }}</p>\r\n            </li>\r\n          </a>\r\n          <a class=\"anchor-tag\" (click)=\"labBilling()\" [ngClass]=\"{'nav-active-link':navLinks.lab}\">\r\n            <li>\r\n              <span>\r\n                <i class=\"wfmi wfmi-i-pathology \"></i>\r\n              </span>\r\n              <p>{{'OPD.LAB_TEST_ORDERS_TEXT' | translate }}</p>\r\n            </li>\r\n          </a>\r\n          <a class=\"anchor-tag\" (click)=\" imagingBilling()\" [ngClass]=\"{'nav-active-link':navLinks.imaging}\">\r\n            <li>\r\n              <span>\r\n                <i class=\"wfmi wfmi-i-imaging-root-category\"></i>\r\n              </span>\r\n              <p>{{'OPD.IMAGING_TEST_ORDERS_TEXT' | translate }} </p>\r\n            </li>\r\n          </a>\r\n          <a class=\"anchor-tag\" (click)=\"payment()\" [ngClass]=\"{'nav-active-link':navLinks.payment}\">\r\n            <li>\r\n              <span>\r\n                <i class=\"mdi mdi-credit-card\"></i>\r\n              </span>\r\n              <p>{{'OPD.PAYMENT_BILLING_TEXT' | translate }}</p>\r\n              <span *ngIf=\"ordersCount\" class=\"notification-circle\">{{ordersCount}}</span>\r\n            </li>\r\n          </a>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-sm-9 p-1\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BillingserviceService } from '@app/modules/opd/components/billing/billingservice.service';\r\nimport { PatientdataService } from '@app/modules/opd/components/allpatients/patientdata.service';\r\nimport { Params } from '@angular/router';\r\nimport { UtilService } from '@core/services/utils.service';\r\n@Component({\r\n  selector: 'app-billing',\r\n  templateUrl: './billing.component.html',\r\n  styleUrls: ['./billing.component.scss']\r\n})\r\nexport class BillingComponent implements OnInit {\r\n  public ordersCount;\r\n  public patientData;\r\n  public navLinks = {\r\n    clinical: false,\r\n    lab: false,\r\n    imaging: false,\r\n    payment: false\r\n  };\r\n  constructor(\r\n    private router: Router,\r\n    private billingService: BillingserviceService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private patientdataService: PatientdataService,\r\n    private utilService: UtilService\r\n  ) {\r\n    const currentRouter = router.url;\r\n    const routerUrlArray = currentRouter && currentRouter.split('/');\r\n    if (\r\n      routerUrlArray.length &&\r\n      this.navLinks.hasOwnProperty(routerUrlArray[routerUrlArray.length - 1])\r\n    ) {\r\n      this.getActiveLinks(routerUrlArray[routerUrlArray.length - 1]);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe((params: Params) => {});\r\n    this.billingService.notifications$.subscribe(data => {\r\n      this.ordersCount = data['imaging'] + data['lab'] + data['orders'];\r\n    });\r\n    this.billingService.activeNavLink$.subscribe(data => {\r\n      this.getActiveLinks(data);\r\n    });\r\n    // getting patient data from the service\r\n    this.patientData = this.patientdataService.getPatienDataForBilling();\r\n    const age = this.patientData ? this.patientData.age : null;\r\n    if (age || age === 0) {\r\n      this.patientData.age = this.utilService.parseAgeIndays(age).get('patientAge');\r\n    }\r\n    if (this.patientData && this.patientData.birthDt) {\r\n      this.patientData.age = this.utilService\r\n        .parseDob(this.patientData.birthDt)\r\n        .get('patientAge');\r\n    }\r\n\r\n    if (!this.patientData) {\r\n      this.router.navigate(['../add-patient'], {\r\n        relativeTo: this.activatedRoute\r\n      });\r\n    }\r\n  }\r\n\r\n  getActiveLinks(linkName) {\r\n    this.navLinks = {\r\n      clinical: false,\r\n      lab: false,\r\n      imaging: false,\r\n      payment: false\r\n    };\r\n    this.navLinks[linkName] = true;\r\n  }\r\n  getAvatorImg(patientData) {\r\n    const image =\r\n      patientData && patientData.gender === 'Female'\r\n        ? 'female-ico.png'\r\n        : 'male-ico.png';\r\n    return `https://s3.ap-south-1.amazonaws.com/dru.assets/images/app/icons/${image}`;\r\n  }\r\n  // navigate to the clinical billing screen\r\n  clinicalBilling() {\r\n    this.getActiveLinks('clinical');\r\n    this.router.navigate(['../billing'], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n  // navigate to the lab billing screen\r\n  labBilling() {\r\n    this.getActiveLinks('lab');\r\n    this.router.navigate(['../billing', 'lab'], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n  // navigate to the imaging billing screen\r\n  imagingBilling() {\r\n    this.getActiveLinks('imaging');\r\n    this.router.navigate(['../billing', 'imaging'], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n  payment() {\r\n    this.getActiveLinks('payment');\r\n    this.router.navigate(['../billing', 'payment'], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BillingserviceService {\r\n  constructor() {}\r\n  invoiceItemNo = 0;\r\n  consultationFormData: any;\r\n  labFormData: any;\r\n  imagingFormData: any;\r\n  emrTests: any;\r\n  emrImagingTests: any;\r\n  orders = {\r\n    imagingTest: [],\r\n    labTests: [],\r\n    consultations: []\r\n  };\r\n  lab = {\r\n    tests: [],\r\n    panels: [],\r\n    packages: []\r\n  };\r\n  imaging = {\r\n    tests: [],\r\n    panels: [],\r\n    packages: []\r\n  };\r\n\r\n  count = 0;\r\n  private notifications = new Subject();\r\n  notifications$ = this.notifications.asObservable();\r\n  private activeNavLink = new Subject();\r\n  activeNavLink$ = this.activeNavLink.asObservable();\r\n\r\n  setProceedToBillingActiveLink() {\r\n    this.activeNavLink.next('payment');\r\n  }\r\n  getConsultations() {\r\n    return this.orders.consultations;\r\n  }\r\n  setConsultations(data: any) {\r\n    this.orders.consultations = data;\r\n    this.notifications.next(this.processNotifications());\r\n  }\r\n  // lab relates data\r\n  getLabTests() {\r\n    return this.lab.tests;\r\n  }\r\n  getLabPanels() {\r\n    return this.lab.panels;\r\n  }\r\n  getLabPackages() {\r\n    return this.lab.packages;\r\n  }\r\n\r\n  setLabTests(data: any) {\r\n    this.lab.tests = data;\r\n    this.notifications.next(this.processNotifications());\r\n  }\r\n  setLabPanels(data: any) {\r\n    this.lab.panels = data;\r\n    this.notifications.next(this.processNotifications());\r\n  }\r\n  setLabPackages(data: any) {\r\n    this.lab.packages = data;\r\n    this.notifications.next(this.processNotifications());\r\n  }\r\n\r\n  setImageTests(data: any) {\r\n    this.imaging.tests = data;\r\n    this.notifications.next(this.processNotifications());\r\n  }\r\n  setImagePanels(data: any) {\r\n    this.imaging.panels = data;\r\n    this.notifications.next(this.processNotifications());\r\n  }\r\n  setImagePackages(data: any) {\r\n    this.imaging.packages = data;\r\n    this.notifications.next(this.processNotifications());\r\n  }\r\n\r\n  getImageTests() {\r\n    return this.imaging.tests;\r\n  }\r\n  getImagePanels() {\r\n    return this.imaging.panels;\r\n  }\r\n  getImagePackages() {\r\n    return this.imaging.packages;\r\n  }\r\n\r\n  getEmrTests() {\r\n    return this.emrTests;\r\n  }\r\n  setEmrTests(tests) {\r\n    this.emrTests = tests;\r\n  }\r\n  getEmrImagingTests() {\r\n    return this.emrImagingTests;\r\n  }\r\n  setEmrImagingTests(tests) {\r\n    this.emrImagingTests = tests;\r\n  }\r\n  processNotifications() {\r\n    const counts = {\r\n      orders: 0,\r\n      imaging: 0,\r\n      lab: 0\r\n    };\r\n    counts.orders = this.orders.consultations.length\r\n      ? this.orders.consultations.length\r\n      : 0;\r\n    counts.lab = [...this.lab.packages, ...this.lab.panels, ...this.lab.tests]\r\n      .length\r\n      ? [...this.lab.packages, ...this.lab.panels, ...this.lab.tests].length\r\n      : 0;\r\n    counts.imaging = [\r\n      ...this.imaging.tests,\r\n      ...this.imaging.panels,\r\n      ...this.imaging.packages\r\n    ].length\r\n      ? [\r\n          ...this.imaging.tests,\r\n          ...this.imaging.panels,\r\n          ...this.imaging.packages\r\n        ].length\r\n      : 0;\r\n    return counts;\r\n  }\r\n  getconsultationFormData() {\r\n    return this.consultationFormData;\r\n  }\r\n  setConsultationFormData(data) {\r\n    this.consultationFormData = data;\r\n  }\r\n  getLabFormData() {\r\n    return this.labFormData;\r\n  }\r\n  setLabFormData(data) {\r\n    this.labFormData = data;\r\n  }\r\n  getImageFormdata() {\r\n    return this.imagingFormData;\r\n  }\r\n  setImageFormdata(data) {\r\n    this.imagingFormData = data;\r\n  }\r\n  getInvoiceItemNumber() {\r\n    return this.invoiceItemNo;\r\n  }\r\n  setInvoiceItemNumber(data) {\r\n    this.invoiceItemNo = data;\r\n  }\r\n}\r\n","<div class=\"mt-3\">\r\n  <div class=\"col-sm-12 zero-padding form-header-tittle\">\r\n    <h2>{{'OPD.BOOK_CONSULTATION_CLINICAL_SERVICES_TEXT' | translate }}</h2>\r\n  </div>\r\n  <div class=\"col-sm-12 no-padding\">\r\n    <form [formGroup]=\"formGroup\" #formDir=\"ngForm\" id=\"consultationform\">\r\n      <div class=\"bg-white common-radius box-shadow no-padding col-sm-12\">\r\n        <div class=\"col-sm-12 no-padding border-bottom form-section-tittle\">\r\n          <h3 class=\"p-l-5 \">{{'OPD.REFFERED_BY_PRACTITIONER/HOSPITAL/CLINIC_TEXT' | translate }}</h3>\r\n          <a class=\"add-reff-doc pull-right\" aria-hidden=\"false\" (click)=\"addReferenceDoctors() \">Add Referral(s)</a>\r\n        </div>\r\n        <div class=\"row m-0 p-l-r-5 p-t-b-10\">\r\n          <div class=\"col-sm-3 p-l-r-5 p-b-5\">\r\n            <label class=\"center-block\">{{'COMMONLABELS.REFERRAL_TYPE' | translate }}</label>\r\n            <select id=\"referralType\" formControlName=\"referralType\" [compareWith]=\"refTypeComparator\" (change)=\"orgReferenceDoctors('referralChange')\">\r\n              <option></option>\r\n              <option *ngFor=\"let mode of referenceList\" [ngValue]=\"mode.attributeCode\">{{mode.attributeCode}}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-sm-3 p-l-r-5 p-b-5\">\r\n            <label>{{'COMMONLABELS.HOSPITAL_ORGANISATION_NAME' | translate }}</label>\r\n            <!-- <input id=\"refOrgNm\" type=\"text\" formControlName=\"refOrgNm\"> -->\r\n            <select id=\"refOrgNm\" formControlName=\"refOrgNm\" [compareWith]=\"refOrgComparator\" (change)=\"orgReferenceDoctors('organisationChange')\">\r\n              <option></option>\r\n              <!-- <option [ngValue]=\"mode.attributeCode\" *ngFor=\"let mode of referenceList\" [ngValue]=\"refOrgNm\">{{orgDoctor.refDoctorNm}}</option> -->\r\n              <option *ngFor=\"let orgDoctor of refOrgList\" [value]=\"orgDoctor.refOrgNm\">{{orgDoctor.refOrgNm}}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-sm-3 p-l-r-5 p-b-5\">\r\n            <label>{{'COMMONLABELS.DOCTOR_NAME_TEXT' | translate }}</label>\r\n            <select id=\"refDoctorNm\" formControlName=\"refDoctorNm\" [compareWith]=\"refDoctorComparator\" (change)=\"onselctingconsultantNm()\">\r\n              <option></option>\r\n              <option *ngFor=\"let orgDoctor of orgRefDoctorsList\" [ngValue]=\"orgDoctor\">{{orgDoctor.honorificNm}}{{orgDoctor.refDoctorNm}}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-sm-3 p-l-r-5 p-b-5\">\r\n            <label>{{'COMMONLABELS.MOBILE_NO_TEXT' | translate }}</label>\r\n            <input id=\"refDoctorContactNo\" type=\"text\" formControlName=\"refDoctorContactNo\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"bg-white common-radius box-shadow no-padding col-sm-12 m-t-10\">\r\n        <div class=\"col-sm-12 no-padding border-bottom form-section-tittle\">\r\n          <h3 class=\"p-l-5 \">{{'OPD.WHOOM_TO_MEET_TEXT' | translate }}</h3>\r\n          <!-- <a class=\"add-reff-doc pull-right\" aria-hidden=\"false\" (click)=\"addReferenceDoctors() \">ADD PRACTITIONER</a> -->\r\n        </div>\r\n        <div class=\"row m-0 p-l-r-5 p-t-b-10\">\r\n          <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n            <label>{{'OPD.DEPARTMENTS_TEXT' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <select id=\"deptId\" required formControlName=\"deptId\" (change)=\"deptwiseDoctors('clinical')\" [compareWith]=\"departmentComparator\"\r\n              [appDisableControl]=\"!isDisableDept\">\r\n              <option></option>\r\n              <option *ngFor=\"let department of departmentList\" [ngValue]=\"department.deptId\">{{department.deptName}}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n            <label>{{'OPD.CONSULTANT_NAME_TEXT' | translate }}\r\n              <span class=\"astrik-symbol\">\r\n                <i class=\"fa fa-asterisk\"></i>\r\n              </span>\r\n            </label>\r\n            <select id=\"doctorId\" required formControlName=\"doctorId\" [compareWith]=\"doctorComparator\" (change)=\"changeDoctor()\"\r\n              [appDisableControl]=\"!isDisableDoctor\">\r\n              <option [ngValue]=\"undefined\"></option>\r\n              <option *ngFor=\"let doctor of deptWiseDoctorsList\" [ngValue]=\"doctor\">{{doctor.firstNm}}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n            <label>{{'OPD.PATIENT_CATEGORY_TEXT' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <select id=\"patientCategoryNm\" formControlName=\"patientCategoryNm\" (change)=\"changePatientcategory()\"\r\n              [compareWith]=\"patientCategoryComparator\" required>\r\n              <option [ngValue]=\"undefined\"></option>\r\n              <option *ngFor=\"let category of patientCategoriesList\" [ngValue]=\"category\">{{category.displayName}}</option>\r\n            </select>\r\n            <div *ngIf=\"formGroup.get('patientCategoryNm').invalid && formDir.submitted\" class=\"has-error popover-style\"\r\n              role=\"alert\">\r\n              <div *ngIf=\"formGroup.controls[ 'patientCategoryNm'].errors.required\" class=\"dynamic_popover\">\r\n                * PatientCategory is required\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- *ngIf=\"(formGroup.get('patientCategoryNm').value)&&(formGroup.get('deptId').value)&&formGroup.get('doctorId').value\" -->\r\n        <div class=\"row m-0 p-l-r-0 p-t-10 m-t-10 border-top\">\r\n          <div class=\"col-sm-4 p-l-r-5 p-b-5\">\r\n            <label>{{'OPD.TODAY_VISIT_IS_A_TEXT' | translate }}</label>\r\n            <div *ngIf=\"patientData.isNew\" class=\"col-md-12 zero-padding radio-element-group\">\r\n              <label>\r\n                <input id=\"visitTypeId\" type=\"radio\" value=\"NEW\" name=\"visitTypeId\" (change)=\"iaPaymentApplicable('true')\"\r\n                  formControlName=\"visitTypeId\" checked=\"checked\" />\r\n                <i></i>\r\n                <span>{{'OPD.NEW_VISIT_TEXT' | translate }}</span>\r\n              </label>\r\n            </div>\r\n            <div *ngIf=\"!patientData.isNew\" class=\"col-md-12 zero-padding radio-element-group\">\r\n              <label>\r\n                <input id=\"visitTypeId\" type=\"radio\" value=\"NEW\" name=\"visitTypeId\" (change)=\"iaPaymentApplicable('true')\"\r\n                  formControlName=\"visitTypeId\" checked=\"checked\" />\r\n                <i></i>\r\n                <span>{{'OPD.NEW_VISIT_TEXT' | translate }}</span>\r\n              </label>\r\n              <label>\r\n                <input id=\"visitTypeId\" type=\"radio\" value=\"FOLLOWUP\" name=\"visitTypeId\" formControlName=\"visitTypeId\"\r\n                  (change)=\"listOfPatientVisitDetails()\">\r\n                <i></i>\r\n                <span>{{'OPD.FOLLOWUP_VISIT_TEXT' | translate }}</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-8 p-l-r-5 p-b-5\">\r\n            <label>{{'OPD.DO_YOU_WANT_TO_MAKE_A_PAYMENT_TEXT' | translate }}</label>\r\n            <div class=\"col-sm-12 p-l-5\">\r\n              <label class=\"hz-btn bg-dark-white-smoke btn-success-hz\" (click)=\"onChangeMode(true)\" [class.active]=\"ispayment\">{{'OPD.YES_TEXT'\r\n                | translate }}</label>\r\n              <label class=\"hz-btn bg-dark-white-smoke btn-danger-hz\" (click)=\"onChangeMode(false)\" [class.active]=\"!ispayment\">{{'OPD.NO_TEXT'\r\n                | translate }}</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"offset-sm-4 col-sm-6 p-l-r-5 p-b-5\" *ngIf=\"isEnableReson\">\r\n            <label>Reason for Non Payment</label>\r\n            <span class=\"astrik-symbol \">\r\n              <i class=\"fa fa-asterisk \"></i>\r\n            </span>\r\n            <textarea id=\"paymentUncollectReason\" formControlName=\"paymentUncollectReason\" minlength=\"2\" maxlength=\"100\"></textarea>\r\n\r\n            <div *ngIf=\"formGroup.get('paymentUncollectReason').invalid && formDir.submitted\" class=\"has-error popover-style\"\r\n              role=\"alert\">\r\n              <div *ngIf=\"formGroup.controls[ 'paymentUncollectReason'].errors.pattern\" class=\"dynamic_popover\">\r\n                * Enter text only\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n              <div *ngIf=\"formGroup.controls[ 'paymentUncollectReason'].errors.required\" class=\"dynamic_popover\">\r\n                * Reason is required\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n              <div *ngIf=\"formGroup.controls[ 'paymentUncollectReason'].errors.minlength\" class=\"dynamic_popover\">\r\n                * Reason is too small\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n              <div *ngIf=\"formGroup.controls[ 'paymentUncollectReason'].errors.maxlength\" class=\"dynamic_popover\">\r\n                * Reason is too long\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"bg-white common-radius box-shadow no-padding col-sm-12 m-t-10\" *ngIf=\"ispayment &&(isDoctorSelected||this.formGroup.get('deptId').value)\r\n        &&(formGroup.get('visitTypeId').value==='NEW'||formGroup.get('visitTypeId').value==='FOLLOWUP')\">\r\n        <div class=\"col-sm-12 no-padding border-bottom form-section-tittle\">\r\n          <h3 class=\"p-l-5 \">{{'OPD.CLINICAL_SERVICES_TEXT' | translate }}</h3>\r\n        </div>\r\n        <div class=\"page-info-message col-sm-12 no-padding\" *ngIf=\"clinicalServicesList&&!clinicalServicesList.length\">\r\n          <ul>\r\n            <li class=\"info-icon\"><i class=\"mdi mdi-information\"></i></li>\r\n            <li class=\"info-message\">\r\n              <p>To add any Clinical Service you have to fill the fields mentioned above in Whom to Meet Section</p>\r\n              <!-- <p>There are no Clinical Services available for the Above Selected Department, Kindly add some Clinical Services in Billing Catalogue Page or Contact Your Administrator.</p> -->\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"row m-0 m-t-10\" *ngIf=\"ispayment&&clinicalServicesList&&clinicalServicesList.length&&(isDoctorSelected||this.formGroup.get('deptId').value)\">\r\n          <div class=\"col-sm-8 p-l-r-5 p-b-10\">\r\n            <label>{{'OPD.SERVICES_PROVIDED_TEXT' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <ng-select id=\"serviceName\" [searchable]=\"true\" formControlName=\"serviceName\" (change)=\"serviceUnitPrice()\">\r\n              <ng-option [value]=\"undefined\"></ng-option>\r\n              <ng-option *ngFor=\"let service of serviceList\" [value]=\"service\">{{service.serviceName }}</ng-option>\r\n            </ng-select>\r\n          </div>\r\n          <div class=\"col-sm-2 p-l-r-5\">\r\n            <label>{{'OPD.UNITS_TEXT' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <input id=\"quantity\" type=\"number\" formControlName=\"quantity\" name=\"quantity\" min=\"1\" max=\"10\" minLength=\"1\"\r\n              maxLength=\"2\" oninput=\"this.value = Math.abs(this.value)\" onKeyDown=\"if(this.value.length===2) return false;\"\r\n              (ngModelChange)=\"selectUnits()\" [appDisableControl]=\"!isDisableAddtoList\">\r\n            <div *ngIf=\"formGroup.controls[ 'quantity'].invalid && (formGroup.controls[ 'quantity'].dirty || formGroup.controls[\r\n              'quantity'].touched||formDir.submitted) \"\r\n              class=\"has-error popover-style\" role=\"alert\">\r\n\r\n              <div *ngIf=\"formGroup.controls[ 'quantity'].errors.minlength \" class=\"dynamic_popover\">\r\n                * Quantity is too small\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n              <div *ngIf=\"formGroup.controls[ 'quantity'].errors.maxlength \" class=\"dynamic_popover\">\r\n                * Quantity is too long\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-2 p-l-r-5\">\r\n            <button id=\"addToList\" type=\"button\" class=\"add-to-list-button\" [disabled]=\"!isEnableAddToList\" (click)=\"addtoBilling()\">{{'OPD.ADD_TO_BILLING_TEXT'\r\n              | translate }} </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12 no-padding border-top\" *ngIf=\"consultationList.length\">\r\n          <table table class=\"scroll-table table consultation-service-table\">\r\n            <thead class=\"fixedHeader\">\r\n              <tr>\r\n                <th class=\"serial-num\">{{'OPD.S.NO_TEXT' | translate }}</th>\r\n                <th class=\"consult-service-list\">{{'OPD.SERVICES_PROVIDED_TEXT' | translate }}</th>\r\n                <th class=\"service-unit\">{{'OPD.UNITS_TEXT' | translate }}</th>\r\n                <th class=\"action-items\">{{'COMMONLABELS.ACTIONS_TEXT' | translate }}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"scrollContent\">\r\n              <tr *ngFor=\"let service of consultationList; index as i\">\r\n                <td class=\"serial-num\">\r\n                  <p>{{i+1}}</p>\r\n                </td>\r\n                <td class=\"consult-service-list\">\r\n                  <p>{{service.serviceName}}</p>\r\n                </td>\r\n                <td class=\"service-unit\">\r\n                  <p>{{service.quantity}}</p>\r\n                </td>\r\n                <td class=\"action-items\">\r\n                  <ul>\r\n                    <li (click)=\"deleteSelectedServices(service)\">\r\n                      <i class=\"mdi mdi-delete\"></i>\r\n                    </li>\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n  <div class=\"col-sm-10 p-l-r-0 m-t-b-15 form-button-group\">\r\n    <ul>\r\n      <li *ngIf=\"ispayment\"><button id=\"payment\" type=\"submit\" form=\"consultation-form\" class=\"btn-app btn-save\"\r\n          (click)=\"payment()\">\r\n          <i class=\"mdi mdi-arrow-up-bold\"></i> {{'OPD.PROCEED_TO_BILLING_TEXT' | translate }}</button></li>\r\n      <li *ngIf=\"!ispayment && isEnableReson\">\r\n        <button id=\"createVisitId\" type=\"submit\" form=\"consultation-form\" class=\"btn-app btn-save\" (click)=\"createVisitId(formDir)\">\r\n          <i class=\"mdi mdi-arrow-up-bold\"></i> {{'COMMONLABELS.SUBMIT_PRINT_TEXT' | translate }}</button>\r\n      </li>\r\n      <li *ngIf=\"!ispayment && !isEnableReson\"><button type=\"submit\" form=\"consultation-form\" class=\"btn-app btn-save\"\r\n          (click)=\"createVisitId(formDir)\">\r\n          <i class=\"mdi mdi-arrow-up-bold\"></i> {{'COMMONLABELS.SUBMIT_PRINT_TEXT' | translate }}</button></li>\r\n      <li>\r\n        <button id=\"clearForm\" type=\"button\" form=\"consultation-form\" class=\"btn-app btn-clear\" (click)=\"clearForm()\">\r\n          <i class=\"fas fa-redo-alt\"></i> {{'COMMONLABELS.CLEAR_TEXT' | translate }}</button>\r\n      </li>\r\n      <li>\r\n        <button id=\"cancelForm\" type=\"button\" form=\"consultation-form\" class=\"btn-app btn-delete\" (click)=\"cancelForm()\">\r\n          <i class=\"fa fa-times fa-btn-icon\" aria-hidden=\"true\"></i> {{'COMMONLABELS.CANCEL' | translate\r\n          }}</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BillingserviceService } from '@app/modules/opd/components/billing/billingservice.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { OpdApiService, RegisterationBillingService } from '@core/services';\r\nimport { AddreferencedoctorsComponent } from '@app/modules/opd/components/addreferencedoctors/addreferencedoctors.component';\r\nimport { MatDialog } from '@angular/material';\r\nimport { UserService, CLONEDEEP } from '@core/services';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport { PatientdataService } from '@app/modules/opd/components/allpatients/patientdata.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ConfirmationDialogComponent } from '@shared/components/confirmation-dialog/confirmation-dialog.component';\r\nimport { MultipleApiResponse } from '@app/modules/opd/models/multiple-api-response-model';\r\nimport { OpdService } from './../../../services/opd.service';\r\n@Component({\r\n  selector: 'app-clinical',\r\n  templateUrl: './clinical.component.html',\r\n  styleUrls: ['./clinical.component.scss']\r\n})\r\nexport class ClinicalComponent implements OnInit {\r\n  formGroup: FormGroup;\r\n  public isdisableservie = true;\r\n  public isDisableAddtoList = true;\r\n  public isDisableDoctor = true;\r\n  public isDisableDept = false;\r\n  public isEnableReson = false;\r\n  public isDisablePaymentModes = true;\r\n  private invoiceItemNo;\r\n  public serviceList: any = [];\r\n  public consultationList: any[] = [];\r\n  public selectedConsultationList: any[] = [];\r\n  public orgRefDoctorsList: any[] = [];\r\n  public refOrgList = [];\r\n  public clinicalServicesList: any = [];\r\n  public departmentList: MultipleApiResponse;\r\n  public deptWiseDoctorsList: any[] = [];\r\n  public patientCategoriesList: MultipleApiResponse;\r\n  public patientVisitDetails: any;\r\n  public servicesUnitPrice: any;\r\n  public ispayment = true;\r\n  public lastObj: any;\r\n  public visitTypesList: any[];\r\n  public paymentApplicable: boolean;\r\n  public patientData: any;\r\n  public isEnableAddToList = false;\r\n  public categorieData = {};\r\n  public paymentModesList = [];\r\n  public referenceList: any;\r\n  private appDeptId: any;\r\n  isDoctorSelected = null;\r\n  @ViewChild('formDir')\r\n  clinicalForm: NgForm;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private OpdServicePrint: OpdService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private opdService: OpdApiService,\r\n    private registerationBillingSerivice: RegisterationBillingService,\r\n    private toastr: ToastrService,\r\n    private datePipe: DatePipe,\r\n    private billingserviceService: BillingserviceService,\r\n    private patientdataService: PatientdataService,\r\n    public dialog: MatDialog,\r\n    // private OpdServicePrint: OpdService,\r\n    private userService: UserService,\r\n    @Inject(CLONEDEEP) private cloner\r\n  ) {\r\n    this.userSession = this.userService.getUser();\r\n  }\r\n\r\n  private userSession: UserSession;\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.fetchPaymentModes();\r\n    // getting formdata from the service\r\n    const clinicalFormData = this.billingserviceService.getconsultationFormData();\r\n    this.consultationList = this.billingserviceService.getConsultations();\r\n    this.multipleApiRespone();\r\n    this.servicesList();\r\n    // this.orgReferenceDoctors();\r\n    // if (!clinicalFormData && !this.formGroup.get('patientCategoryNm').value) {\r\n    //   this.router.navigate(['registration/add-patient']);\r\n    // }\r\n    if (clinicalFormData) {\r\n      this.isDoctorSelected = clinicalFormData.isDoctorSelected ? clinicalFormData.isDoctorSelected : null;\r\n      // this.isDoctorSelected = clinicalFormData.isDoctorSelected;\r\n      this.formGroup.patchValue(\r\n        this.billingserviceService.getconsultationFormData()\r\n      );\r\n      if (this.formGroup.get('selectedConsultationList').value) {\r\n        this.selectedConsultationList = this.formGroup.get(\r\n          'selectedConsultationList'\r\n        ).value;\r\n      }\r\n      const deptId = this.formGroup.get('deptId').value;\r\n      if (deptId) {\r\n        this.deptwiseDoctors('clinical');\r\n      }\r\n\r\n      this.formGroup.get('refOrgNm').valueChanges.subscribe(val => {\r\n        this.orgReferenceDoctors('organisationChange');\r\n        this.formGroup.patchValue({\r\n          refDoctorNm: clinicalFormData.refDoctorNm\r\n        });\r\n        this.onselctingconsultantNm();\r\n      });\r\n      this.formGroup.patchValue({\r\n        referralType: clinicalFormData.referralType\r\n      });\r\n\r\n      this.formGroup.patchValue({\r\n        refOrgNm: clinicalFormData.refOrgNm\r\n      });\r\n\r\n      this.formGroup.patchValue({ deptId: clinicalFormData.deptId });\r\n      this.formGroup.patchValue({ doctorId: clinicalFormData.doctorId });\r\n\r\n      this.ispayment = clinicalFormData.ispayment;\r\n      this.isDisablePaymentModes = clinicalFormData.isDisablePaymentModes;\r\n\r\n      this.formGroup.patchValue({\r\n        visitTypeId: clinicalFormData.visitTypeId\r\n      });\r\n\r\n      if (clinicalFormData.visitTypeId) {\r\n        this.isdisableservie = false;\r\n      }\r\n      this.patientData = this.patientdataService.getPatienDataForBilling();\r\n\r\n      // Here we are updating the patient appointmentId comming from the appointment\r\n      const appointmentData = this.patientdataService.getAppointmentData();\r\n      if (appointmentData) {\r\n        this.appDeptId = appointmentData.deptId;\r\n        if (this.appDeptId) {\r\n          this.deptwiseDoctors('appointment');\r\n          this.isDisableDoctor = true;\r\n          this.isDisableDept = true;\r\n        }\r\n        this.formGroup.patchValue({\r\n          patientAppointmentId: appointmentData.patientAppointmentId,\r\n          deptId: appointmentData.deptId,\r\n          doctorId: {\r\n            empId: appointmentData.doctorId,\r\n            firstNm: appointmentData.doctorNm\r\n          }\r\n        });\r\n        this.isDisablePaymentModes = false;\r\n        this.isdisableservie = false;\r\n        this.ispayment = true;\r\n        this.formGroup.patchValue({\r\n          paymentStatus: true\r\n        });\r\n        this.formGroup.patchValue({\r\n          ispayment: this.ispayment\r\n        });\r\n        this.formGroup.patchValue({\r\n          visitTypeId: 'NEW'\r\n        });\r\n      }\r\n      if (this.patientData && this.patientData.isNew) {\r\n        this.isDisablePaymentModes = false;\r\n        this.isdisableservie = false;\r\n        this.ispayment = true;\r\n\r\n        this.formGroup.patchValue({\r\n          paymentStatus: true\r\n        });\r\n        this.formGroup.patchValue({\r\n          ispayment: this.ispayment\r\n        });\r\n        this.formGroup.patchValue({\r\n          visitTypeId: 'NEW'\r\n        });\r\n      }\r\n      this.formGroup.patchValue({\r\n        patientCategoryName: clinicalFormData.patientCategoryNm\r\n      });\r\n    }\r\n  }\r\n  initForm() {\r\n    this.formGroup = this.formBuilder.group({\r\n      isDisablePaymentModes: null,\r\n      dropDownList: null,\r\n      refDoctorNm: null,\r\n      refOrgNm: null,\r\n      refDoctorContactNo: null,\r\n      referralType: null,\r\n      doctorId: [null, Validators.required],\r\n      deptId: [null, Validators.required],\r\n      patientCategoryNm: { patientCategoryName: 'GEN', patientCategoryId: 1 },\r\n      patientCategoryId: null,\r\n      visitTypeId: 'NEW',\r\n      serviceName: null,\r\n      quantity: [1, [Validators.minLength(1), Validators.maxLength(2)]],\r\n      paymentStatus: null,\r\n      visitedPatientCount: null,\r\n      ispayment: true,\r\n      paymentUncollectReason: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(/^[a-zA-Z ]*$/),\r\n          Validators.minLength(2),\r\n          Validators.maxLength(100)\r\n        ]\r\n      ],\r\n      selectedConsultationList: null,\r\n      patientAppointmentId: null,\r\n      isDoctorSelected: null\r\n\r\n    });\r\n\r\n    // saving formdata into service\r\n    this.formGroup.valueChanges.subscribe(() => {\r\n      // this.formGroup.patchValue({ paymentStatus: this.ispayment });\r\n      this.billingserviceService.setConsultationFormData(this.formGroup.value);\r\n    });\r\n\r\n    this.formGroup.get('referralType').valueChanges.subscribe(val => {\r\n      this.orgReferenceDoctors('referralChange');\r\n    });\r\n\r\n\r\n\r\n  }\r\n  servicesList() {\r\n    const patientCategoryName = this.formGroup.get('patientCategoryNm').value;\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      type: 'CLINICAL',\r\n      patientCategoryName: patientCategoryName.patientCategoryName,\r\n      currentDate: this.datePipe.transform(new Date(), 'yyyy-MM-dd')\r\n    };\r\n    this.opdService.servicesListForLabAndImaging(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.serviceList = response.data.clinicalServicesList;\r\n          // this list is useful for printing message if no clinical services are there\r\n          this.clinicalServicesList = response.data.clinicalServicesList;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  changeDoctor() {\r\n    this.formGroup.patchValue({ serviceName: null });\r\n    this.isDisableAddtoList = true;\r\n    this.isEnableAddToList = false;\r\n    this.isDoctorSelected = true;\r\n    this.formGroup.patchValue({isDoctorSelected: true});\r\n  }\r\n  changePatientcategory() {\r\n    this.formGroup.patchValue({ serviceName: null });\r\n    this.isDisableAddtoList = true;\r\n    this.isEnableAddToList = false;\r\n  }\r\n  serviceUnitPrice() {\r\n    this.isDisableAddtoList = true;\r\n    this.isEnableAddToList = false;\r\n    const { serviceId, billServiceType } = this.formGroup.get(\r\n      'serviceName'\r\n    ).value;\r\n    if (serviceId) {\r\n      const patientCategoryName = this.formGroup.get('patientCategoryNm').value;\r\n      const doctorId = this.formGroup.get('doctorId').value;\r\n      const payload = {\r\n        orgId: this.userSession.orgId,\r\n        authenticatedUserId: this.userSession.regId,\r\n        orgGroupId: this.userSession.orgGroupId,\r\n        billServiceType,\r\n        serviceId,\r\n        startDate: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n        doctorId: doctorId.empId,\r\n        patientCategoryName: patientCategoryName.patientCategoryName\r\n      };\r\n\r\n      this.registerationBillingSerivice.serviceUnitPrice(payload).subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 'E200' && response.data) {\r\n            this.servicesUnitPrice = response.data;\r\n            this.servicesUnitPrice.taxPercntg = this.servicesUnitPrice.taxPercentage;\r\n            if (\r\n              this.servicesUnitPrice.serviceAmount &&\r\n              this.formGroup.get('quantity').value &&\r\n              this.formGroup.get('serviceName').value\r\n            ) {\r\n              this.isDisableAddtoList = false;\r\n              this.isEnableAddToList = true;\r\n            }\r\n          } else if (response.responseCode === 'E400') {\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n        },\r\n        () => {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n    }\r\n  }\r\n  refDoctorComparator(o1, o2) {\r\n    return o1 && o2 && o1.refDoctorId === o2.refDoctorId;\r\n  }\r\n  refTypeComparator(o1, o2) {\r\n    // && o1.referralType === o2.referralType\r\n    return o1 && o2 && o1 === o2;\r\n  }\r\n  refOrgComparator(o1, o2) {\r\n    // .refOrgNm === o2.refOrgNm\r\n    return o1 && o2 && o1 === o2;\r\n  }\r\n  selectUnits() {\r\n    this.isEnableAddToList = false;\r\n    if (this.formGroup.get('quantity').value) {\r\n      this.isEnableAddToList = true;\r\n    }\r\n  }\r\n  addToList() {\r\n    const service = this.formGroup.get('serviceName').value;\r\n    this.invoiceItemNo = this.billingserviceService.getInvoiceItemNumber();\r\n    this.invoiceItemNo = this.invoiceItemNo + 1;\r\n    this.billingserviceService.setInvoiceItemNumber(this.invoiceItemNo);\r\n    const serviceName = this.formGroup.get('serviceName').value;\r\n    const quantity = this.formGroup.get('quantity').value;\r\n    const services = this.servicesUnitPrice;\r\n    const obj = { ...serviceName, ...services };\r\n    obj.quantity = quantity;\r\n    obj.invoiceItemNo = this.invoiceItemNo;\r\n    this.serviceList = this.serviceList.filter(function(value) {\r\n      return value.serviceId !== service.serviceId;\r\n    });\r\n    this.consultationList = this.cloner(this.consultationList);\r\n    if (this.consultationList && this.consultationList.length) {\r\n      const data = this.consultationList.find(item => item.serviceId === obj.serviceId);\r\n      if (data) {\r\n        this.toastr.warning('Already Added to List');\r\n      } else {\r\n      this.consultationList.push(obj);\r\n      }\r\n    } else {\r\n      this.consultationList.push(obj);\r\n    }\r\n    this.selectedConsultationList.push(obj);\r\n    this.formGroup.patchValue({\r\n      selectedConsultationList: this.selectedConsultationList,\r\n      quantity: 1\r\n    });\r\n    this.isDisableAddtoList = true;\r\n    this.isEnableAddToList = false;\r\n    this.formGroup.get('serviceName').reset();\r\n  }\r\n\r\n  addtoBilling() {\r\n    this.addToList();\r\n    if (this.consultationList.length) {\r\n      this.billingserviceService.setConsultations(this.consultationList);\r\n    } else {\r\n      this.toastr.warning('Please Add Services');\r\n    }\r\n  }\r\n  clearForm() {\r\n    this.serviceList = this.serviceList.concat(this.consultationList);\r\n    this.serviceList.sort((a, b) =>\r\n      a.serviceName !== b.serviceName\r\n        ? a.serviceName < b.serviceName\r\n          ? -1\r\n          : 1\r\n        : 0\r\n    );\r\n    this.ispayment = false;\r\n    this.isDisableAddtoList = true;\r\n    this.isEnableAddToList = false;\r\n    this.formGroup.reset();\r\n    this.clinicalForm.resetForm();\r\n    this.formGroup.patchValue({ quantity: 1 });\r\n    this.consultationList = [];\r\n    this.selectedConsultationList = [];\r\n    this.billingserviceService.setConsultationFormData([]);\r\n    this.billingserviceService.setConsultations([]);\r\n  }\r\n  orgReferenceDoctors(type) {\r\n    if (type === 'referralChange') {\r\n      this.orgRefDoctorsList = [];\r\n      this.refOrgList = [];\r\n    }\r\n    this.formGroup.patchValue({\r\n      refDoctorContactNo: null\r\n    });\r\n    if (type !== 'organisationChange') {\r\n      this.formGroup.patchValue({\r\n        refOrgNm: null\r\n      });\r\n    }\r\n    this.formGroup.patchValue({\r\n      refDoctorNm: null\r\n    });\r\n\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGroupId: this.userSession.orgGroupId,\r\n      referralType: this.formGroup.get('referralType').value,\r\n      refOrgNm: this.formGroup.get('refOrgNm').value\r\n    };\r\n\r\n    this.opdService.orgDoctors(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          if (type === 'organisationChange') {\r\n            this.orgRefDoctorsList = [];\r\n            this.orgRefDoctorsList = response.data;\r\n            // this.orgRefDoctorsList = this.orgRefDoctorsList.filter(function(\r\n            //   value\r\n            // ) {\r\n            //   return value.refDoctorNM;\r\n            // });\r\n          }\r\n          if (type !== 'organisationChange') {\r\n            this.orgRefDoctorsList = [];\r\n            this.refOrgList = [];\r\n            this.refOrgList = response.data;\r\n            this.orgRefDoctorsList = response.data;\r\n            this.refOrgList = this.refOrgList.filter(function(\r\n              value\r\n            ) {\r\n              return value.refOrgNm;\r\n            });\r\n          }\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  deptwiseDoctors(type) {\r\n   this. deptWiseDoctorsList = [];\r\n this.formGroup.get('doctorId').reset();\r\n    this.formGroup.get('serviceName').reset();\r\n    const deptId = this.formGroup.get('deptId').value;\r\n    this.isDisableDoctor = true;\r\n    if (deptId) {\r\n      const payload = {\r\n        orgId: this.userSession.orgId,\r\n        authenticatedUserId: this.userSession.regId,\r\n        orgGrpId: this.userSession.orgGroupId,\r\n        designation: 'Doctor',\r\n        deptId\r\n      };\r\n      if (type && type === 'appointment') {\r\n        payload.deptId = this.appDeptId;\r\n      }\r\n      this.opdService.deptwiseDoctors(payload).subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 'E200') {\r\n            this.deptWiseDoctorsList = response.data;\r\n            this.isDoctorSelected = false;\r\n            if (this.billingserviceService.getconsultationFormData()) {\r\n              this.isDoctorSelected = true;\r\n            }\r\n            this.formGroup.patchValue({isDoctorSelected: false});\r\n            if (this.deptWiseDoctorsList && !this.deptWiseDoctorsList.length) {\r\n              this.toastr.warning(\r\n                'warning!',\r\n                'Please select the department which contains doctors'\r\n              );\r\n            }\r\n            if (this.deptWiseDoctorsList.length) {\r\n              this.isDisableDoctor = false;\r\n            }\r\n          } else if (response.response === 'E400') {\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n        },\r\n        () => {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n    }\r\n  }\r\n  departmentComparator(o1, o2) {\r\n    // o1.deptId === o2.deptId\r\n    return o1 && o2 && o1 === o2;\r\n  }\r\n  doctorComparator(o1, o2) {\r\n    return o1 && o2 && o1.firstNm === o2.firstNm;\r\n  }\r\n  patientCategoryComparator(o1, o2) {\r\n    return (\r\n      o1 &&\r\n      o2 &&\r\n      // (o1.patientCategoryNm === o2.patientCategoryNm ||\r\n      o1.patientCategoryName === o2.patientCategoryName\r\n    );\r\n  }\r\n  patientCategories() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId\r\n    };\r\n    this.opdService.patientCategories(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.patientCategoriesList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  onselctingconsultantNm() {\r\n    const refDoctorNm = this.formGroup.get('refDoctorNm').value;\r\n    this.formGroup.patchValue({\r\n      refDoctorContactNo: refDoctorNm.refDocContactNo\r\n    });\r\n  }\r\n  addReferenceDoctors() {\r\n    const dialogRef = this.dialog.open(AddreferencedoctorsComponent, {\r\n      data: {},\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // this.orgReferenceDoctors(obj);\r\n    });\r\n  }\r\n\r\n  fetchVisitTypes() {\r\n    this.opdService.fetchVisitTypes().subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.visitTypesList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  listOfPatientVisitDetails() {\r\n    const patientCategoryNm = this.formGroup.get('patientCategoryNm').value;\r\n    const deptId = this.formGroup.get('deptId').value;\r\n    const patientData = this.patientdataService.getPatienDataForBilling();\r\n    const doctor = this.formGroup.get('doctorId').value;\r\n    if (!deptId || !doctor || !patientCategoryNm) {\r\n      this.formGroup.patchValue({ visitTypeId: 2 });\r\n      return;\r\n    }\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      feeValidDays: doctor.feeValidDays,\r\n      feeValidVisits: doctor.feeValidVisits,\r\n      doctorId: doctor.empId,\r\n      patientId: patientData.patientId,\r\n      visitTypeId: 2\r\n    };\r\n    this.opdService.listOfPatientVisitDetails(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.patientVisitDetails = response.data;\r\n          this.isDisablePaymentModes = false;\r\n          this.isdisableservie = false;\r\n          const firstObj = this.patientVisitDetails[0];\r\n          if (\r\n            this.patientVisitDetails.length === 1 &&\r\n            firstObj.noPreviousVisits\r\n          ) {\r\n            this.formGroup.patchValue({ visitTypeId: 'NEW' });\r\n            this.ispayment = true;\r\n            // this.isOriginalPayment=true;\r\n            this.isdisableservie = false;\r\n            this.formGroup.patchValue({\r\n              paymentStatus: true\r\n            });\r\n            this.formGroup.patchValue({\r\n              ispayment: this.ispayment\r\n            });\r\n            this.toastr.warning('Warning', 'No previous visits found');\r\n          } else {\r\n            this.lastObj = this.patientVisitDetails[\r\n              this.patientVisitDetails.length - 1\r\n            ];\r\n            this.ispayment = this.lastObj.paymentApplicable;\r\n            this.formGroup.patchValue({\r\n              visitedPatientCount: this.lastObj.visitedPatientCount\r\n            });\r\n            this.formGroup.patchValue({\r\n              paymentStatus: this.lastObj.paymentApplicable\r\n            });\r\n            this.formGroup.patchValue({\r\n              ispayment: this.ispayment\r\n            });\r\n          }\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  createVisitId(form: NgForm) {\r\n    if (this.isEnableReson) {\r\n      if (form.invalid) {\r\n        return;\r\n      }\r\n    }\r\n    // const invalid = [];\r\n    // const controls = this.formGroup.controls;\r\n    // for (const name in controls) {\r\n    //     if (controls[name].invalid) {\r\n    //         invalid.push(name);\r\n    //     }\r\n    // }\r\n\r\n    if (!this.isEnableReson) {\r\n      let deptId, doctorId, category, visitTypeId;\r\n      deptId = this.formGroup.get('deptId').value;\r\n      doctorId = this.formGroup.get('doctorId').value;\r\n      category = this.formGroup.get('patientCategoryNm').value;\r\n      visitTypeId = this.formGroup.get('visitTypeId').value;\r\n\r\n      if (!deptId || !doctorId || !category || !visitTypeId) {\r\n        return;\r\n      }\r\n    }\r\n    const payload = this.formGroup.value;\r\n    const visitType = this.formGroup.get('visitTypeId').value;\r\n    (payload['createdUsrId'] = this.userSession.regId),\r\n      (payload['orgId'] = this.userSession.orgId),\r\n      (payload['authenticatedUserId'] = this.userSession.regId),\r\n      (payload['orgGrpId'] = this.userSession.orgGroupId),\r\n      (payload['visitDt'] = this.datePipe.transform(new Date(), 'yyyy-MM-dd')),\r\n      (payload['invoiceDate'] = this.datePipe.transform(\r\n        new Date(),\r\n        'yyyy-MM-dd'\r\n      )),\r\n      (payload['invoiceFrom'] = 'REG'),\r\n      (payload['visitType'] = visitType);\r\n    if (visitType === 'NEW') {\r\n      payload['visitTypeId'] = 1;\r\n    } else {\r\n      payload['visitTypeId'] = 2;\r\n    }\r\n    const refDoctorData = this.formGroup.get('refDoctorNm').value;\r\n    const patientCategory = this.formGroup.get('patientCategoryNm').value;\r\n    const doctor = this.formGroup.get('doctorId').value;\r\n    if (refDoctorData) {\r\n      payload['refDoctorId'] = refDoctorData.refDoctorId;\r\n      payload['refDoctorNm'] = refDoctorData.refDoctorNm;\r\n      payload['refDocContactNo'] = refDoctorData.refDocContactNo;\r\n    }\r\n    if (doctor) {\r\n      payload['doctorId'] = doctor.empId;\r\n      payload['doctorNm'] = doctor.firstNm;\r\n      payload['feeValidDays'] = doctor.feeValidDays;\r\n      payload['feeValidVisits'] = doctor.feeValidVisits;\r\n    }\r\n    if (patientCategory) {\r\n      // \"patientCategoryNm\":{\"patientCategoryId\":1,\"patientCategoryName\":\"GEN\",\"displayName\":\"General\"}\r\n      // payload['PatientCategoryNm'] = patientCategory.patientCategoryName;\r\n      // payload['PatientCategoryId'] = patientCategory.patientCategoryId; payload['patientCategoryNm'] =\r\n      payload['patientCategoryNm'] = patientCategory.patientCategoryName;\r\n      payload['patientCategoryId'] = patientCategory.patientCategoryId;\r\n    }\r\n    const patientData = this.patientdataService.getPatienDataForBilling();\r\n    if (patientData) {\r\n      if (patientData.appointmentId) {\r\n        payload['patientAppointmentId'] = patientData.appointmentId;\r\n      }\r\n      payload['hosPatientId'] = patientData.hosPatientId;\r\n      payload['patientId'] = patientData.patientId;\r\n      if (patientData.tempHosPatientId) {\r\n        payload['tempHosPatientId'] = patientData.tempHosPatientId;\r\n      }\r\n    }\r\n    payload['honorificNm'] = '';\r\n    this.opdService.insertPatientBill(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          if (response !== null) {\r\n            this.toastr.success('success!', response.responseMessage);\r\n            if (\r\n              response.data.registrationPrintType &&\r\n              response.data.registrationPrintType === 'Case Sheet'\r\n            ) {\r\n              this.OpdServicePrint.generateCasesheet(response.data);\r\n            } else {\r\n              this.OpdServicePrint.generateToken(response.data);\r\n            }\r\n            this.billingserviceService.setInvoiceItemNumber(0);\r\n            this.billingserviceService.setConsultations([]);\r\n            this.ispayment = null;\r\n            this.billingserviceService.setConsultationFormData([]);\r\n            this.patientdataService.setUserData(null);\r\n            this.patientdataService.setPatienDataForBilling(null);\r\n            this.patientdataService.setAppointmentData(null);\r\n            this.router.navigate(['registration/add-patient']);\r\n          }\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  payment() {\r\n    if (this.consultationList.length) {\r\n      this.billingserviceService.setProceedToBillingActiveLink();\r\n      this.billingserviceService.setConsultations(this.consultationList);\r\n      this.router.navigate(['../payment'], {\r\n        relativeTo: this.activatedRoute\r\n      });\r\n    } else {\r\n      this.toastr.warning('Please Add Services');\r\n    }\r\n  }\r\n  fetchPaymentModes() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      masterType: 'REFERRAL TYPE',\r\n      authenticatedUserId: this.userSession.regId\r\n    };\r\n\r\n    this.opdService.fetchCommonValues(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.referenceList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  iaPaymentApplicable(value) {\r\n    const patientCategoryNm = this.formGroup.get('patientCategoryNm').value;\r\n    const deptId = this.formGroup.get('deptId').value;\r\n    const doctorId = this.formGroup.get('doctorId').value;\r\n    const visitTypeId = this.formGroup.get('visitTypeId').value;\r\n    this.isDisablePaymentModes = false;\r\n    this.formGroup.patchValue({\r\n      isDisablePaymentModes: this.isDisablePaymentModes\r\n    });\r\n    if (!deptId || !doctorId || !patientCategoryNm) {\r\n      this.formGroup.patchValue({ visitTypeId: 1 });\r\n      return;\r\n    }\r\n    if (patientCategoryNm && deptId && doctorId.empId && visitTypeId) {\r\n      this.isdisableservie = false;\r\n    }\r\n    this.ispayment = value;\r\n    this.formGroup.get('paymentUncollectReason').reset();\r\n    this.formGroup.patchValue({ paymentStatus: this.ispayment });\r\n  }\r\n  deleteSelectedServices(obj) {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Delete ?' },\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.serviceList.push(obj);\r\n        this.serviceList.sort((a, b) =>\r\n          a.serviceName !== b.serviceName\r\n            ? a.serviceName < b.serviceName\r\n              ? -1\r\n              : 1\r\n            : 0\r\n        );\r\n        this.consultationList = this.consultationList.filter(function(value) {\r\n          return value.serviceId !== obj.serviceId;\r\n        });\r\n        this.billingserviceService.setConsultations(this.consultationList);\r\n      }\r\n    });\r\n  }\r\n  cancelForm() {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Cancel ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.billingserviceService.setConsultationFormData([]);\r\n        this.router.navigate(['registration/add-patient']);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * @function { * } onChangeMode : function to onchange payment mode\r\n   * @param {boolean} : payment true/false\r\n   */\r\n  onChangeMode(paymentMode) {\r\n    if (!paymentMode) {\r\n      this.formGroup.patchValue({serviceName: null});\r\n      this.formGroup.patchValue({quantity: 1});\r\n       this.isEnableAddToList = false;\r\n      const paymentStatus = this.formGroup.get('paymentStatus').value;\r\n      if (paymentStatus) {\r\n        this.isEnableReson = true;\r\n      }\r\n    }\r\n    this.ispayment = paymentMode;\r\n    this.serviceList = [...this.serviceList, ...this.consultationList];\r\n    // this.serviceList.push(this.consultationList);\r\n    this.consultationList = [];\r\n    this.billingserviceService.setConsultations([]);\r\n    this.formGroup.patchValue({\r\n      paymentStatus: paymentMode\r\n    });\r\n    if (paymentMode) {\r\n      this.formGroup.get('paymentUncollectReason').reset();\r\n      this.isEnableReson = false;\r\n    } else {\r\n    }\r\n  }\r\n\r\n  multipleApiRespone() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      orgGroupId: this.userSession.orgGroupId\r\n    };\r\n    this.opdService\r\n      .multipleApiRespone<MultipleApiResponse>(payload)\r\n      .subscribe(responseList => {\r\n        this.patientCategoriesList = responseList[0].data;\r\n        this.departmentList = responseList[1].data;\r\n      });\r\n  }\r\n  get isWhomToMeetInvalid() {\r\n    // return (\r\n    //   this.formGroup.get('deptId').invalid ||\r\n    //   this.formGroup.get('doctorId').invalid ||\r\n    //   this.formGroup.get('patientCategoryNm').invalid\r\n    // );\r\n    if (\r\n      !this.formGroup.get('deptId').value ||\r\n      !this.formGroup.get('doctorId').value ||\r\n      !this.formGroup.get('patientCategoryNm').value\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"row m-0\">\r\n  <div class=\"col-sm-12 zero-padding form-header-tittle\">\r\n    <h2>{{'OPD.BOOK_IMAGING_TESTS_TEXT' | translate }}</h2>\r\n  </div>\r\n  <div class=\"col-sm-12 no-padding\">\r\n    <form [formGroup]=\"formGroup\" #formDir=\"ngForm\">\r\n      <div class=\"bg-white common-radius box-shadow no-padding col-sm-12\">\r\n        <div class=\"col-sm-12 no-padding border-bottom form-section-tittle\">\r\n          <h3 class=\"p-l-5\">{{'OPD.REFFERED_BY_PRACTITIONER/HOSPITAL/CLINIC_TEXT' | translate }}</h3>\r\n        </div>\r\n        <div class=\"row m-0 p-l-r-5 p-t-b-10\">\r\n          <div class=\"col-sm-2 p-l-r-5 p-b-5\">\r\n            <label>{{'COMMONLABELS.REFERRAL_TYPE' | translate }}</label>\r\n            <select id=\"referralType\" formControlName=\"referralType\" [compareWith]=\"refTypeComparator\" (change)=\"orgReferenceDoctors('referralChange')\" tabindex=\"1\">\r\n              <option></option>\r\n              <option [ngValue]=\"mode.attributeCode\" *ngFor=\"let mode of referenceList\" [ngValue]=\"mode.attributeCode\">{{mode.attributeCode}}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-sm-3 p-l-r-5 p-b-5\">\r\n            <label>{{'OPD.HOSPITAL/CLINIC_NAME_TEXT' | translate }}</label>\r\n            <select id=\"refOrgNm\" formControlName=\"refOrgNm\" [compareWith]=\"refOrgComparator\" (change)=\"orgReferenceDoctors('organisationChange')\" tabindex=\"2\" >\r\n              <option></option>\r\n              <option *ngFor=\"let orgDoctor of refOrgList\" [value]=\"orgDoctor.refOrgNm\">{{orgDoctor.refOrgNm}}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-sm-3 p-l-r-5 p-b-5\">\r\n            <label>{{'OPD.CONSULTATIONS_TEXT' | translate }}</label>\r\n            <select id=\"refDoctorNm\" formControlName=\"refDoctorNm\" (change)=\"onselctingconsultantNm()\" [compareWith]=\"refDoctorComparator\" tabindex=\"3\" >\r\n              <option [ngValue]=\"undefined\"></option>\r\n              <option *ngFor=\"let orgDoctor of orgRefDoctorsList\" [ngValue]=\"orgDoctor\">{{orgDoctor.honorificNm}}{{orgDoctor.refDoctorNm}}</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"col-sm-2 p-l-r-5 p-b-5\">\r\n            <label>{{'COMMONLABELS.MOBILE_NO_TEXT' | translate}}</label>\r\n            <input id=\"refDoctorContactNo\" type=\"text\" formControlName=\"refDoctorContactNo\" tabindex=\"4\" >\r\n          </div>\r\n          <div class=\"col-sm-2 p-l-r-5 p-b--5\">\r\n            <label>{{'OPD.PATIENT_CATEGORY_TEXT' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <select id=\"patientCategoryNm\" formControlName=\"patientCategoryNm\" (change)=\"changePatientcategory()\"\r\n              [compareWith]=\"patientCategoryComparator\" required tabindex=\"5\">\r\n              <option [ngValue]=\"undefined\"></option>\r\n              <option *ngFor=\"let category of patientCategoriesList\" [ngValue]=\"category\">{{category.displayName}}</option>\r\n            </select>\r\n            <div *ngIf=\"formGroup.get('patientCategoryNm').invalid && formDir.submitted\" class=\"has-error popover-style\"\r\n              role=\"alert\">\r\n              <div *ngIf=\"formGroup.controls[ 'patientCategoryNm'].errors.required\" class=\"dynamic_popover\">\r\n                * PatientCategory is required\r\n                <span class=\"doArrow\"></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"bg-white common-radius box-shadow no-padding col-sm-12 m-t-10 message-section\" *ngIf=\"formGroup.get('patientCategoryNm').value\">\r\n        <div class=\"col-sm-12 no-padding border-bottom form-section-tittle\">\r\n          <h3 class=\"p-l-5 \">Imaging Test Order List</h3>\r\n        </div>\r\n        <div class=\"col-sm-12 no-padding\" *ngIf=\"emrPatientTests\">\r\n          <div class=\"col-sm-12 no-padding\" *ngIf=\"emrPatientTests.emrvisitLists&&emrPatientTests.emrvisitLists.length\">\r\n              <div class=\"col-sm-12 m-t-5 box-section-tittle\">\r\n                <label class=\"order-from-emr\">{{'OPD.ORDER_RECIEVED_FROM_EMR' | translate}}</label>\r\n              </div>\r\n              <table table class=\"scroll-table table order-from-emr-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th class=\"order-id\">{{'COMMONLABELS.ORDER_ID_TEXT' | translate }}</th>\r\n                    <th class=\"order-date\">{{'IMAGING.ORDER_DATE' | translate }}</th>\r\n                    <th class=\"test-date\">{{'IMAGING.TEST_DATE' | translate }}</th>\r\n                    <th class=\"ordered-by\">{{'OPD.ORDER_BY' | translate }}</th>\r\n                    <th class=\"action-item\">{{'COMMONLABELS.ACTIONS_TEXT' | translate }}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let test of emrPatientTests.emrvisitLists\">\r\n                    <td class=\"order-id\">{{test.patientVisitId}}</td>\r\n                    <td class=\"order-date\">{{test.visitDt}}</td>\r\n                    <td class=\"test-date\">{{test.visitDt}}</td>\r\n                    <td class=\"ordered-by\">{{test.doctorNm}}</td>\r\n                    <td class=\"action-item\"><button id=\"addToList\" class=\"emr-button\" (click)=\"addToViewOrderDetails(test)\">{{'OPD.ADD_TO_VIEW_ORDER_DETAILS'\r\n                        | translate }}</button></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row m-0 p-l-r-5 p-t-10\">\r\n          <div class=\"menu-radio-group\">\r\n              <input type=\"radio\" checked=\"checked\" name=\"toggle\" id=\"tests\" value=\"tests\" (click)=\"selectedServices('tests')\">\r\n              <label for=\"tests\">{{'OPD.TESTS_TEXT' | translate }}</label>\r\n              <input type=\"radio\" name=\"toggle\" id=\"panels\" value=\"panels\" (click)=\"selectedServices('panels')\">\r\n              <label for=\"panels\">{{'OPD.PANELS_TEXT' | translate }}</label>\r\n              <input type=\"radio\" name=\"toggle\" id=\"packages\" value=\"packages\" (click)=\"selectedServices('packages')\">\r\n              <label for=\"packages\">{{'OPD.PACKAGES_TEXT' | translate }}</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"page-info-message col-sm-12 no-padding\" *ngIf=\"selectedServicesListForData&&!selectedServicesListForData.length\">\r\n          <ul>\r\n            <li class=\"info-icon\"><i class=\"mdi mdi-information\"></i></li>\r\n            <li class=\"info-message\">\r\n              <p *ngIf=\"isTest\"> Currently Imaging Tests are not added to your service list, You can add Imaging Test\r\n                in <br />(Billing\r\n                >> Catalogue >> Imaging >> Tests) or Contact Your Organisation Administrator.</p>\r\n              <P *ngIf=\"isPanel\"> Currently Imaging Panels are not added to your service list, You can add Imaging\r\n                Panels in\r\n                <br />(Billing >> Catalogue >> Imaging >> Panels) or Contact Your Organisation Administrator.</P>\r\n              <P *ngIf=\"isPackage\"> Currently Imaging Packages are not added to your service list, You can add/Create\r\n                Imaging Packages\r\n                in <br />(Billing >> Catalogue >> Packages >> Add Packages) or Contact Your Organisation Administrator.</P>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"row m-0 m-t-10\" *ngIf=\"selectedServicesListForData&&selectedServicesListForData.length\">\r\n          <div class=\"col-sm-6 p-l-r-5 p-b-10\">\r\n            <label *ngIf=\"isTest\">{{'OPD.SELECT_TESTS_TEXT' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <label *ngIf=\"isPanel\">{{'OPD.SELECT_PANELS_TEXT' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <label *ngIf=\"isPackage\">{{'OPD.SELECT_PACKAGES_TEXT' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <ng-select id=\"serviceName\" [searchable]=\"true\" formControlName=\"serviceName\" (change)=\"serviceUnitPrice()\" tabindex=\"6\">\r\n                <ng-option [value]=\"undefined\"></ng-option>\r\n                <ng-option *ngFor=\"let service of selectedServicesList\" [value]=\"service\">{{service.serviceName }}</ng-option>\r\n              </ng-select>\r\n          </div>\r\n          <div class=\"col-sm-2 p-l-r-5\">\r\n            <label class=\"center-block input-box-margin\">{{'OPD.TEST_ORDER_DATE' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <div class=\"dateTime-picker-p\">\r\n              <p class=\"input-group\">\r\n                  <input id=\"testPlanDttm\" type=\"text\" [matDatepicker]=\"testPlanDtm\" formControlName=\"testPlanDttm\" tabindex=\"7\" class=\"input-width\">\r\n                  <mat-datepicker #testPlanDtm></mat-datepicker>\r\n                  <span class=\"input-group-btn w-10 \">\r\n                    <button class=\"btn btn-default btn-calender calender-button-height\" type=\"button \" (click)=\"datePickerToggler(testPlanDtm) \">\r\n                      <i class=\"fa fa-calendar \"></i>\r\n                    </button>\r\n                  </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-2 p-l-r-5\">\r\n            <label>{{'OPD.PRIORITY_TEXT' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <select id=\"priority\" formControlName=\"priority\" (change)=\"disableAddToListButton()\" [appDisableControl]=\"!disableService&&formGroup.get('testPlanDttm').value\" tabindex=\"8\">\r\n                <option value=\"High\">High</option>\r\n                <option value=\"Medium\">Medium</option>\r\n                <option value=\"Low\">Low</option>\r\n              </select>\r\n          </div>\r\n          <div class=\"col-sm-2 p-l-r-5\">\r\n              <button id=\"addToBilling\" class=\"add-to-list-button\" [disabled]=\"isDisableAddtoList\" (click)=\"addtoBilling()\" tabindex=\"9\">{{'OPD.ADD_TO_BILLING_TEXT'\r\n                  | translate }}</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12 no-padding border-top\" *ngIf=\"imagingTests.length||imagingPanels.length||imagingPackages.length\">\r\n          <table table class=\"scroll-table table imaging-service-table\">\r\n            <thead class=\"fixedHeader\">\r\n              <tr>\r\n                <th class=\"serial-num\">{{'OPD.S.NO_TEXT' | translate }}</th>\r\n                <th class=\"consult-service-list\">{{'OPD.ORDER_LIST_TEXT' | translate }}</th>\r\n                <th class=\"service-unit\">{{'OPD.PRIORITY_TEXT' | translate }}</th>\r\n                <th class=\"action-items\">{{'COMMONLABELS.ACTIONS_TEXT' | translate }}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"scrollContent\" *ngIf=\"imagingTests.length\">\r\n              <tr>\r\n                <td colspan=\"10\" class=\"tbody-tittle tests-row\">{{'OPD.TESTS_TEXT' | translate }}</td>\r\n              </tr>\r\n\r\n              <tr *ngFor=\"let service of imagingTests; index as i\">\r\n                <td class=\"serial-num\">\r\n                  <p>{{i+1}}</p>\r\n                </td>\r\n                <td class=\"consult-service-list\">\r\n                  <p>{{service.serviceName}}</p>\r\n                </td>\r\n                <td class=\"service-unit\">\r\n                  <p>{{service.priority}}</p>\r\n                </td>\r\n                <td class=\"action-items\">\r\n                  <ul>\r\n                    <li (click)=\"deleteSelectedServices(service,'tests')\">\r\n                      <i class=\"mdi mdi-delete\"></i>\r\n                    </li>\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <tbody class=\"scrollContent\" *ngIf=\"imagingPanels.length > 0\">\r\n              <tr>\r\n                <td colspan=\"10\" class=\"tbody-tittle panel-row\">{{'OPD.PANELS_TEXT' | translate }}</td>\r\n              </tr>\r\n              <tr *ngFor=\"let service of imagingPanels; index as i\">\r\n                <td class=\"serial-num\">\r\n                  <p>{{i+1}}</p>\r\n                </td>\r\n                <td class=\"consult-service-list\">\r\n                  <p>{{service.serviceName}}</p>\r\n                </td>\r\n                <td class=\"service-unit\">\r\n                  <p>{{service.priority}}</p>\r\n                </td>\r\n                <td class=\"action-items\">\r\n                  <ul>\r\n                    <li (click)=\"deleteSelectedServices(service,'panels')\">\r\n                      <i class=\"mdi mdi-delete\"></i>\r\n                    </li>\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <tbody class=\"scrollContent\" *ngIf=\"imagingPackages.length > 0\">\r\n              <tr>\r\n                <td colspan=\"10\" class=\"tbody-tittle package-row\">{{'OPD.PACKAGES_TEXT' | translate }}</td>\r\n              </tr>\r\n              <tr *ngFor=\"let service of imagingPackages; index as i\">\r\n                <td class=\"serial-num\">\r\n                  <p>{{i+1}}</p>\r\n                </td>\r\n                <td class=\"consult-service-list\">\r\n                  <p>{{service.serviceName}}</p>\r\n                </td>\r\n                <td class=\"service-unit\">\r\n                  <p>{{service.priority}}</p>\r\n                </td>\r\n                <td class=\"action-items\">\r\n                  <ul>\r\n                    <li (click)=\"deleteSelectedServices(service,'packages')\">\r\n                      <i class=\"mdi mdi-delete\"></i>\r\n                    </li>\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"col-sm-10 p-l-r-0 m-t-b-15 form-button-group\">\r\n    <ul>\r\n      <li><button id=\"payment\" type=\"submit\" class=\"btn-app btn-save\" (click)=\"payment()\">\r\n          <i class=\"mdi mdi-arrow-up-bold\"></i> {{'OPD.PROCEED_TO_BILLING_TEXT' | translate }}</button></li>\r\n      <li>\r\n        <button id=\"clearForm\" type=\"button\" class=\"btn-app btn-clear\" (click)=\"clearForm()\">\r\n          <i class=\"fas fa-redo-alt\"></i> {{'COMMONLABELS.CLEAR_TEXT' | translate }}</button>\r\n      </li>\r\n      <li><button id=\"cancelForm\" type=\"button\" class=\"btn-app btn-delete\" (click)=\"cancelForm()\">\r\n          <i class=\"fa fa-times fa-btn-icon\" aria-hidden=\"true\"></i> {{'COMMONLABELS.CANCEL' | translate\r\n          }}</button></li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BillingserviceService } from '@app/modules/opd/components/billing/billingservice.service';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\nimport { DatePipe } from '@angular/common';\r\nimport {\r\n  OpdApiService,\r\n  LabApiService,\r\n  RegisterationBillingService,\r\n  UserService,\r\n  CLONEDEEP\r\n} from '@core/services';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ConfirmationDialogComponent } from '@shared/components/confirmation-dialog/confirmation-dialog.component';\r\nimport { PatientdataService } from '@app/modules/opd/components/allpatients/patientdata.service';\r\nimport { Subscription } from 'rxjs';\r\n@Component({\r\n  selector: 'app-imaging',\r\n  templateUrl: './imaging.component.html',\r\n  styleUrls: ['./imaging.component.scss']\r\n})\r\nexport class ImagingComponent implements OnInit {\r\n  public subPanelsAndTests: any;\r\n  private selctedValue = 'tests';\r\n  private allServices: any;\r\n  public imagingTests: any[] = [];\r\n  public imagingPanels: any[] = [];\r\n  public imagingPackages: any[] = [];\r\n  public selectedServicesList: any[];\r\n  public selectedServicesListForData: any[];\r\n  public orgRefDoctorsList: any[];\r\n  public refOrgList = [];\r\n  private servicesUnitPrice: any;\r\n  public patientCategoriesList: any[] = [];\r\n  formGroup: FormGroup;\r\n  public referenceList: any;\r\n  public isTest = false;\r\n  public isPanel = false;\r\n  public isPackage = false;\r\n  public isDisableAddtoList = true;\r\n  public disableService = true;\r\n  private patientData;\r\n  public emrPatientTests;\r\n  public emrImagingTests;\r\n  public emrImagingpanels;\r\n  amountDefinedEmrPatientTests: any;\r\n  emrPatientTestsDuplicate: any;\r\n  dataForCompare: any[];\r\n  private apiSubscription: Subscription;\r\n  private labFormDataForEmrTests = null;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private opdService: OpdApiService,\r\n    private registerationBilling: RegisterationBillingService,\r\n    private toastr: ToastrService,\r\n    private datePipe: DatePipe,\r\n    private billingserviceService: BillingserviceService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    public dialog: MatDialog,\r\n    private userService: UserService,\r\n    private patientdataService: PatientdataService,\r\n    @Inject(CLONEDEEP) private cloner\r\n  ) {\r\n    this.userSession = this.userService.getUser();\r\n  }\r\n  private userSession: UserSession;\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.servicesListForLabAndImaging();\r\n    this.imagingTests = this.billingserviceService.getImageTests();\r\n    this.imagingPanels = this.billingserviceService.getImagePanels();\r\n    this.imagingPackages = this.billingserviceService.getImagePackages();\r\n    this.fetchPaymentModes();\r\n    // this.orgReferenceDoctors();\r\n    this.patientCategories();\r\n    const clinicalFormData = this.billingserviceService.getconsultationFormData();\r\n    const labFormData = this.billingserviceService.getLabFormData();\r\n    this.labFormDataForEmrTests = labFormData;\r\n    // getting formdata from the service\r\n    const imagingFormData = this.billingserviceService.getImageFormdata();\r\n    this.patientData = this.patientdataService.getPatienDataForBilling();\r\n    // if (!imagingFormData) {\r\n    //   this.router.navigate(['registration/add-patient']);\r\n    // }\r\n    if (imagingFormData) {\r\n      this.formGroup.patchValue(this.billingserviceService.getImageFormdata());\r\n      if (clinicalFormData && clinicalFormData.patientCategoryNm) {\r\n        this.formGroup.patchValue({\r\n          patientCategoryName: clinicalFormData.patientCategoryNm\r\n        });\r\n      }\r\n      if (!clinicalFormData && !clinicalFormData.patientCategoryNm) {\r\n        this.formGroup.patchValue({\r\n          patientCategoryName: imagingFormData.patientCategoryNm\r\n        });\r\n      }\r\n      this.formGroup.patchValue({\r\n        refDoctorNM: imagingFormData.refDoctorNM\r\n      });\r\n    }\r\n    if (!this.billingserviceService.getEmrImagingTests()) {\r\n      this.fetchEmrPatients();\r\n    }\r\n  }\r\n  datePickerToggler(datePicker: MatDatepicker<Date>) {\r\n    datePicker[datePicker.opened ? 'close' : 'open']();\r\n  }\r\n  initForm() {\r\n    this.formGroup = this.formBuilder.group({\r\n      refDoctorNm: null,\r\n      refOrgNm: null,\r\n      refDoctorContactNo: null,\r\n      referralType: null,\r\n      date: null,\r\n      serviceName: null,\r\n      priority: 'Medium',\r\n      value: null,\r\n      patientVisitId: null,\r\n      dateOfOrder: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n      patientCategoryNm: { patientCategoryName: 'GEN', patientCategoryId: 1 },\r\n      patientCategoryId: null,\r\n      testPlanDttm: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n      emrImagingTests: null,\r\n      emrImagingpanels: null,\r\n      emrSubpanels: null\r\n    });\r\n    // saving formdata into service\r\n    this.formGroup.valueChanges.subscribe(() => {\r\n      this.billingserviceService.setImageFormdata(this.formGroup.value);\r\n    });\r\n  }\r\n  servicesListForLabAndImaging() {\r\n    const patientCategoryName = this.formGroup.get('patientCategoryNm').value;\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      type: 'IMAGING',\r\n      patientCategoryName: patientCategoryName.patientCategoryName,\r\n      currentDate: this.datePipe.transform(new Date(), 'yyyy-MM-dd')\r\n    };\r\n    this.opdService.servicesListForLabAndImaging(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.allServices = response.data;\r\n          this.selectedServices(this.selctedValue);\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  selectedServices(selectedValue) {\r\n    this.formGroup.get('serviceName').reset();\r\n    this.isDisableAddtoList = true;\r\n    if (selectedValue === 'tests') {\r\n      this.isTest = true;\r\n      this.isPanel = false;\r\n      this.isPackage = false;\r\n      this.selectedServicesList = this.allServices.testList;\r\n      this.selectedServicesListForData = this.allServices.testList;\r\n    } else if (selectedValue === 'panels') {\r\n      this.isTest = false;\r\n      this.isPanel = true;\r\n      this.isPackage = false;\r\n      this.selectedServicesList = this.allServices.panelList;\r\n      this.selectedServicesListForData = this.allServices.panelList;\r\n    } else {\r\n      this.isTest = false;\r\n      this.isPanel = false;\r\n      this.isPackage = true;\r\n      this.selectedServicesList = this.allServices.packageList;\r\n      this.selectedServicesListForData = this.allServices.packageList;\r\n    }\r\n  }\r\n  fetchPaymentModes() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      masterType: 'REFERRAL TYPE',\r\n      authenticatedUserId: this.userSession.regId\r\n    };\r\n\r\n    this.opdService.fetchCommonValues(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.referenceList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  fetchEmrPatients() {\r\n    const payload = {\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      orgId: this.userSession.orgId,\r\n      hospitalPatientId: this.patientData.hosPatientId,\r\n      patientId: this.patientData.patientId,\r\n      type: 'Imaging'\r\n    };\r\n    this.opdService.fetchEmrTestsForPatient(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.emrPatientTestsDuplicate = null;\r\n          this.billingserviceService.setEmrImagingTests(null);\r\n          this.emrPatientTests = response.data;\r\n          if (this.labFormDataForEmrTests\r\n            &&\r\n            this.labFormDataForEmrTests.patientVisitId\r\n            &&\r\n             this.emrPatientTests.emrvisitLists) {\r\n            // here we are filtering the visit id from the list which selected in lab .\r\n            // If isit selected from the lab wee are showing all the  visits from the emr\r\n            this.emrPatientTests.emrvisitLists = this.emrPatientTests.emrvisitLists.filter(data => {\r\n              return data.patientVisitId === this.labFormDataForEmrTests.patientVisitId;\r\n            });\r\n          }\r\n        } else if (response.responseCode === 'E400') {\r\n          // this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  changePatientcategory() {\r\n    this.formGroup.patchValue({ serviceName: null });\r\n    this.disableService = true;\r\n    this.isDisableAddtoList = true;\r\n  }\r\n  serviceUnitPrice() {\r\n    this.isDisableAddtoList = true;\r\n    this.disableService = true;\r\n    const { serviceId, billServiceType } = this.formGroup.get(\r\n      'serviceName'\r\n    ).value;\r\n    if (serviceId) {\r\n      const patientCategoryName = this.formGroup.get('patientCategoryNm').value;\r\n      const payload = {\r\n        orgId: this.userSession.orgId,\r\n        authenticatedUserId: this.userSession.regId,\r\n        orgGroupId: this.userSession.orgGroupId,\r\n        billServiceType,\r\n        serviceId,\r\n        startDate: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n        patientCategoryName: patientCategoryName.patientCategoryName,\r\n        type: 'IMAGING'\r\n      };\r\n\r\n      this.registerationBilling.serviceUnitPrice(payload).subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 'E200') {\r\n            this.servicesUnitPrice = response.data;\r\n            this.disableService = false;\r\n            if (\r\n              this.formGroup.get('testPlanDttm').value &&\r\n              !this.disableService\r\n            ) {\r\n              this.isDisableAddtoList = false;\r\n            }\r\n          } else if (response.responseCode === 'E400') {\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n        },\r\n        () => {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n    }\r\n  }\r\n  // addToList() {\r\n  //   const obj = {};\r\n  //   obj['serviceName'] = this.formGroup.get('serviceName').value;\r\n  //   obj['priority'] = this.formGroup.get('priority').value;\r\n  //   obj['service'] = this.servicesUnitPrice;\r\n  //   if (this.isTest) {\r\n  //     this.imagingTests.push(obj);\r\n  //     this.billingserviceService.setImageTests(this.imagingTests);\r\n  //   } else if (this.isPanel) {\r\n  //     this.imagingPanels.push(obj);\r\n  //     this.billingserviceService.setImagePanels(this.imagingPanels);\r\n  //   } else {\r\n  //     this.imagingPackages.push(obj);\r\n  //     this.billingserviceService.setImagePackages(this.imagingPackages);\r\n  //   }\r\n  //   // [this.labTests, this.labPanels, this.labPackages]\r\n  //   // this.billingserviceService.setLabTests(this.labTests);\r\n  // }\r\n  disableAddToListButton() {\r\n    // this.isDisableAddtoList = false;\r\n    if (this.formGroup.get('testPlanDttm').value) {\r\n      this.isDisableAddtoList = false;\r\n    }\r\n  }\r\n  addToList() {\r\n    const service = this.formGroup.get('serviceName').value;\r\n    const serviceName = this.formGroup.get('serviceName').value;\r\n    const priority = this.formGroup.get('priority').value;\r\n    const testPlanDttm = this.formGroup.get('testPlanDttm').value;\r\n    const services = this.servicesUnitPrice;\r\n    services.testPlanDttm = testPlanDttm;\r\n    const obj = { ...serviceName, ...services };\r\n    obj.quantity = 1;\r\n    const invoiceItemNo = this.billingserviceService.getInvoiceItemNumber();\r\n    this.billingserviceService.setInvoiceItemNumber(invoiceItemNo + 1);\r\n    obj.invoiceItemNo = invoiceItemNo + 1;\r\n    obj.priority = priority;\r\n    if (obj.type === 'PACKAGE' && obj.panelList && obj.panelList.length) {\r\n      obj.panelList.forEach(element => {\r\n        if (element.type === 'PANEL') {\r\n          element.orgId = this.userSession.orgId;\r\n          this.opdService.fetchSubpanelsAndTests(element).subscribe(\r\n            (response: any) => {\r\n              if (response.responseCode === 'E200') {\r\n                this.subPanelsAndTests = response.data;\r\n                if (this.subPanelsAndTests.subPanelList) {\r\n                  element.subPanelsList = this.subPanelsAndTests.subPanelList;\r\n                }\r\n              } else if (response.responseCode === 'E400') {\r\n                this.toastr.error('Failure!', response.responseMessage);\r\n              }\r\n            },\r\n            () => {\r\n              this.toastr.error('Failure!', 'Something went wrong');\r\n            }\r\n          );\r\n        }\r\n      });\r\n    }\r\n    if (obj.type === 'PANEL') {\r\n      this.opdService.fetchSubpanelsAndTests(obj).subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 'E200') {\r\n            this.subPanelsAndTests = response.data;\r\n            if (this.subPanelsAndTests.subPanelList) {\r\n              obj.subPanelsList = this.subPanelsAndTests.subPanelList;\r\n            }\r\n            this.isDisableAddtoList = true;\r\n          } else if (response.responseCode === 'E400') {\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n        },\r\n        () => {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n    }\r\n    // Here  we are removing the selected services from test list\r\n    if (this.isTest) {\r\n      this.selectedServicesList = this.selectedServicesList.filter(function(\r\n        value\r\n      ) {\r\n        return value.serviceId !== service.serviceId;\r\n      });\r\n      // this.allServices.testList = this.selectedServicesList;\r\n      this.imagingTests = this.cloner(this.imagingTests);\r\n        const data = this.imagingTests.find(item => item.serviceId === obj.serviceId);\r\n        if (data) {\r\n          this.toastr.warning('Already Added To List');\r\n        } else {\r\n          this.imagingTests.push(obj);\r\n        }\r\n    } else if (this.isPanel) {\r\n      // Here  we are removing the selected services from panel list\r\n      this.selectedServicesList = this.selectedServicesList.filter(function(\r\n        value\r\n      ) {\r\n        return value.serviceId !== service.serviceId;\r\n      });\r\n      this.imagingPanels = this.cloner(this.imagingPanels);\r\n      const data = this.imagingPanels.find(item => item.serviceId === obj.serviceId);\r\n        if (data) {\r\n          this.toastr.warning('Already Added To List');\r\n        } else {\r\n          this.imagingPanels.push(obj);\r\n        }\r\n\r\n      // this.formGroup.reset();\r\n    } else {\r\n      // Here  we are removing the selected services from package list\r\n      this.selectedServicesList = this.selectedServicesList.filter(function(\r\n        value\r\n      ) {\r\n        return value.serviceId !== service.serviceId;\r\n      });\r\n      this.imagingPackages = this.cloner(this.imagingPackages);\r\n      const data = this.imagingPackages.find(item => item.serviceId === obj.serviceId);\r\n        if (data) {\r\n          this.toastr.warning('Already Added To List');\r\n        } else {\r\n          this.imagingPackages.push(obj);\r\n        }\r\n\r\n    }\r\n    this.formGroup.get('serviceName').reset();\r\n    this.formGroup.patchValue({ priority: 'Medium' });\r\n    this.isDisableAddtoList = true;\r\n    this.disableService = true;\r\n  }\r\n\r\n  addToViewOrderDetails(data) {\r\n    if (this.apiSubscription) {\r\n      this.apiSubscription.unsubscribe();\r\n    }\r\n    this.formGroup.patchValue({ patientVisitId: data.patientVisitId });\r\n    const patientCategoryName = this.formGroup.get('patientCategoryNm').value;\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      type: 'EMR',\r\n      patientCategoryNm: patientCategoryName.patientCategoryName,\r\n      currentDt: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n      // currentDt: '2018-12-15',\r\n      patientVisitId: data.patientVisitId\r\n    };\r\n    this.apiSubscription =\r\n    this.opdService.servicesListForLabAndImaging(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.amountDefinedEmrPatientTests = response.data;\r\n          this.emrImagingTests = this.amountDefinedEmrPatientTests.testList;\r\n          this.emrImagingpanels = this.amountDefinedEmrPatientTests.panelList;\r\n          // here we are filtering the imaging tests\r\n          if (this.emrImagingTests) {\r\n            this.emrImagingTests = this.emrImagingTests.filter(testsData => {\r\n              return  testsData.billServiceType === 'Imaging';\r\n            });\r\n          }\r\n          this.imagingTests = this.imagingTests.concat(\r\n           this.emrImagingTests\r\n          );\r\n          // here we are filtering the imaging panels\r\n\r\n          if (this.emrImagingpanels) {\r\n            this.emrImagingpanels = this.emrImagingpanels.filter(testsData => {\r\n              return testsData.billServiceType === 'Imaging' ;\r\n            });\r\n          }\r\n          this.formGroup.patchValue({ emrImagingTests: this.emrImagingTests });\r\n          this.formGroup.patchValue({\r\n            emrImagingpanels: this.emrImagingpanels\r\n          });\r\n          this.imagingTests.map(tests => {\r\n            const amountObj = tests.billServiceAmountObj;\r\n            (tests.cgstTaxPercentage = amountObj.cgstTaxPercntg),\r\n              (tests.serviceAmount = amountObj.serviceAmt),\r\n              (tests.sgstTaxPercentage = amountObj.sgstTaxPercntg),\r\n              (tests.taxCategoryCode = amountObj.taxCategoryCode),\r\n              (tests.taxId = amountObj.taxId),\r\n              (tests.taxPercentage = amountObj.taxPercntg),\r\n              (tests.quantity = 1),\r\n              (tests.isEmrTest = true);\r\n            return tests;\r\n          });\r\n          this.billingserviceService.setImageTests(this.imagingTests);\r\n          this.imagingPanels = this.imagingPanels.concat(\r\n            this.emrImagingpanels\r\n          );\r\n          this.billingserviceService.setImagePanels(this.imagingPanels);\r\n          this.imagingPanels.map(panels => {\r\n            const amountObj = panels.billServiceAmountObj;\r\n            (panels.cgstTaxPercentage = amountObj.cgstTaxPercntg),\r\n              (panels.serviceAmount = amountObj.serviceAmt),\r\n              (panels.sgstTaxPercentage = amountObj.sgstTaxPercntg),\r\n              (panels.taxCategoryCode = amountObj.taxCategoryCode),\r\n              (panels.taxId = amountObj.taxId),\r\n              (panels.taxPercentage = amountObj.taxPercntg),\r\n              (panels.quantity = 1),\r\n              (panels.isEmrTest = true);\r\n            this.opdService.fetchSubpanelsAndTests(panels).subscribe(\r\n              (responseData: any) => {\r\n                if (responseData.responseCode === 'E200') {\r\n                  this.subPanelsAndTests = responseData.data;\r\n                  if (this.subPanelsAndTests.subPanelList) {\r\n                    panels.subPanelsList = this.subPanelsAndTests.subPanelList;\r\n                    this.formGroup.patchValue({emrSubpanels: this.subPanelsAndTests.subPanelList });\r\n\r\n\r\n                  }\r\n                } else if (response.responseCode === 'E400') {\r\n                  this.toastr.error('Failure!', response.responseMessage);\r\n                }\r\n              },\r\n              () => {\r\n                this.toastr.error('Failure!', 'Something went wrong');\r\n              }\r\n            );\r\n            return panels;\r\n          });\r\n          this.emrPatientTestsDuplicate = this.emrPatientTests;\r\n          this.billingserviceService.setEmrImagingTests(this.emrPatientTestsDuplicate);\r\n          this.emrPatientTests = [];\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  addtoBilling() {\r\n    this.addToList();\r\n    if (\r\n      this.imagingTests.length ||\r\n      this.imagingPanels.length ||\r\n      this.imagingPackages.length\r\n    ) {\r\n      this.billingserviceService.setImageTests(this.imagingTests);\r\n      this.billingserviceService.setImagePanels(this.imagingPanels);\r\n      this.billingserviceService.setImagePackages(this.imagingPackages);\r\n    } else {\r\n      this.toastr.warning('Please Add Services');\r\n    }\r\n  }\r\n  clearForm() {\r\n    this.isDisableAddtoList = true;\r\n    this.disableService = true;\r\n    this.selectedServicesList = this.selectedServicesList.concat(\r\n      this.imagingTests\r\n    );\r\n    this.selectedServicesList = this.selectedServicesList.concat(\r\n      this.imagingPanels\r\n    );\r\n    this.selectedServicesList = this.selectedServicesList.concat(\r\n      this.imagingPackages\r\n    );\r\n    this.selectedServicesList.sort((a, b) =>\r\n      a.serviceName !== b.serviceName\r\n        ? a.serviceName < b.serviceName\r\n          ? -1\r\n          : 1\r\n        : 0\r\n    );\r\n    this.formGroup.reset();\r\n    this.imagingTests = [];\r\n    this.imagingPanels = [];\r\n    this.imagingPackages = [];\r\n    this.billingserviceService.setImageFormdata([]);\r\n    this.billingserviceService.setImageTests([]);\r\n    this.billingserviceService.setImagePanels([]);\r\n    this.billingserviceService.setImagePackages([]);\r\n  }\r\n  orgReferenceDoctors(type) {\r\n    this.formGroup.patchValue({\r\n      refDoctorContactNo: null\r\n    });\r\n    if (type !== 'organisationChange') {\r\n      this.refOrgList = [];\r\n      this.formGroup.patchValue({\r\n        refOrgNm: null\r\n      });\r\n    }\r\n    this.formGroup.patchValue({\r\n      refDoctorNm: null\r\n    });\r\n\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGroupId: this.userSession.orgGroupId,\r\n      referralType: this.formGroup.get('referralType').value,\r\n      refOrgNm: this.formGroup.get('refOrgNm').value\r\n    };\r\n\r\n    this.opdService.orgDoctors(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          if (type === 'organisationChange') {\r\n            this.orgRefDoctorsList = [];\r\n            this.orgRefDoctorsList = response.data;\r\n            // this.orgRefDoctorsList = this.orgRefDoctorsList.filter(function(\r\n            //   value\r\n            // ) {\r\n            //   return value.refDoctorNM;\r\n            // });\r\n          }\r\n          if (type !== 'organisationChange') {\r\n            this.orgRefDoctorsList = [];\r\n            this.refOrgList = [];\r\n            this.refOrgList = response.data;\r\n            this.orgRefDoctorsList = response.data;\r\n            this.refOrgList = this.refOrgList.filter(function(value) {\r\n              return value.refOrgNm;\r\n            });\r\n          }\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  patientCategories() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId\r\n    };\r\n    this.opdService.patientCategories(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.patientCategoriesList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  refDoctorComparator(o1, o2) {\r\n    return o1 && o2 && o1.refDoctorId === o2.refDoctorId;\r\n  }\r\n  refTypeComparator(o1, o2) {\r\n    return o1 && o2 && o1.referralType === o2.referralType;\r\n  }\r\n  refOrgComparator(o1, o2) {\r\n    return o1 && o2 && o1.refOrgNm === o2.refOrgNm;\r\n  }\r\n  patientCategoryComparator(o1, o2) {\r\n    return (\r\n      o1 &&\r\n      o2 &&\r\n      // (o1.patientCategoryNm === o2.patientCategoryNm ||\r\n      o1.patientCategoryName === o2.patientCategoryName // )\r\n    );\r\n  }\r\n\r\n  onselctingconsultantNm() {\r\n    const refDoctorNm = this.formGroup.get('refDoctorNm').value;\r\n    this.formGroup.patchValue({\r\n      refDoctorContactNo: refDoctorNm.refDocContactNo\r\n    });\r\n  }\r\n  payment() {\r\n    if (\r\n      this.imagingTests.length ||\r\n      this.imagingPanels.length ||\r\n      this.imagingPackages.length\r\n    ) {\r\n      this.billingserviceService.setProceedToBillingActiveLink();\r\n      this.billingserviceService.setImageTests(this.imagingTests);\r\n      this.billingserviceService.setImagePanels(this.imagingPanels);\r\n      this.billingserviceService.setImagePackages(this.imagingPackages);\r\n      this.router.navigate(['../payment'], {\r\n        relativeTo: this.activatedRoute\r\n      });\r\n    } else {\r\n      this.toastr.warning('Please Add Services');\r\n    }\r\n  }\r\n  deleteSelectedServices(obj, type) {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Delete ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        if (type === 'tests') {\r\n          this.selectedServicesList.push(obj);\r\n          this.imagingTests = this.imagingTests.filter(function(value) {\r\n            return value.serviceId !== obj.serviceId;\r\n          });\r\n          this.billingserviceService.setImageTests(this.imagingTests);\r\n        }\r\n        if (type === 'panels') {\r\n          this.selectedServicesList.push(obj);\r\n          this.imagingPanels = this.imagingPanels.filter(function(value) {\r\n            return value.serviceId !== obj.serviceId;\r\n          });\r\n          this.billingserviceService.setImagePanels(this.imagingPanels);\r\n        }\r\n        if (!obj.isEmrTest) {\r\n          this.selectedServicesList.push(obj);\r\n        }\r\n        if (obj.isEmrTest) {\r\n          this.dataForCompare = [];\r\n          this.dataForCompare = this.imagingTests.filter(function(value) {\r\n            return value.isEmrTest && value.isEmrTest === true;\r\n          });\r\n          let emrPanels = this.imagingPanels.filter(function(value) {\r\n            return value.isEmrTest && value.isEmrTest === true;\r\n          });\r\n          this.dataForCompare = this.dataForCompare.concat(emrPanels);\r\n          emrPanels = [];\r\n        }\r\n        if (this.dataForCompare && !this.dataForCompare.length) {\r\n          this.emrPatientTests = this.emrPatientTestsDuplicate;\r\n          this.formGroup.patchValue({ patientVisitId: null });\r\n        }\r\n        if (type === 'packages') {\r\n          this.selectedServicesList.push(obj);\r\n          this.imagingPackages = this.imagingPackages.filter(function(value) {\r\n            return value.serviceId !== obj.serviceId;\r\n          });\r\n          this.billingserviceService.setImagePackages(this.imagingPackages);\r\n        }\r\n        this.selectedServicesList.sort((a, b) =>\r\n          a.serviceName !== b.serviceName\r\n            ? a.serviceName < b.serviceName\r\n              ? -1\r\n              : 1\r\n            : 0\r\n        );\r\n      }\r\n    });\r\n  }\r\n  cancelForm() {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Cancel ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.billingserviceService.setImageTests([]);\r\n        this.billingserviceService.setImagePanels([]);\r\n        this.billingserviceService.setImagePackages([]);\r\n        this.billingserviceService.setImageFormdata([]);\r\n        this.router.navigate(['registration/add-patient']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"row m-0\">\r\n  <div class=\"col-sm-12 zero-padding form-header-tittle\">\r\n    <h2>{{'OPD.BOOK_LAB_TESTS_TEXT' | translate }}</h2>\r\n  </div>\r\n  <div class=\"col-sm-12 no-padding\">\r\n    <form [formGroup]=\"formGroup\" #formDir=\"ngForm\">\r\n      <div class=\"bg-white common-radius box-shadow no-padding col-sm-12\">\r\n        <div class=\"col-sm-12 no-padding border-bottom form-section-tittle\">\r\n          <h3 class=\"p-l-5\">{{'OPD.REFFERED_BY_PRACTITIONER/HOSPITAL/CLINIC_TEXT' | translate }}</h3>\r\n        </div>\r\n        <div class=\"row m-0 p-l-r-5 p-t-b-10\">\r\n          <div class=\"col-sm-2 p-l-r-5 p-b-5\">\r\n            <label>{{'COMMONLABELS.REFERRAL_TYPE' | translate }}</label>\r\n            <select id=\"referralType\" formControlName=\"referralType\" [compareWith]=\"refTypeComparator\" (change)=\"orgReferenceDoctors('referralChange')\" tabindex=\"1\">\r\n              <option></option>\r\n              <option [ngValue]=\"mode.attributeCode\" *ngFor=\"let mode of referenceList\" [ngValue]=\"mode.attributeCode\">{{mode.attributeCode}}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-sm-2 p-l-r-5 p-b-5\">\r\n              <label>{{'OPD.HOSPITAL/CLINIC_NAME_TEXT' | translate }}</label>\r\n              <select id=\"refOrgNm\" formControlName=\"refOrgNm\" [compareWith]=\"refOrgComparator\" (change)=\"orgReferenceDoctors('organisationChange')\" tabindex=\"2\">\r\n                  <option></option>\r\n                <option *ngFor=\"let orgDoctor of refOrgList\" [value]=\"orgDoctor.refOrgNm\">{{orgDoctor.refOrgNm}}</option>\r\n                </select>\r\n            </div>\r\n          <div class=\"col-sm-2 p-l-r-5 p-b-5\">\r\n            <label>{{'OPD.CONSULTATIONS_TEXT' | translate }}</label>\r\n            <select id=\"refDoctorNm\" formControlName=\"refDoctorNm\" (change)=\"onselctingconsultantNm()\" [compareWith]=\"refDoctorComparator\" tabindex=\"3\">\r\n                <option [ngValue]=\"undefined\"></option>\r\n                <option *ngFor=\"let orgDoctor of orgRefDoctorsList\" [ngValue]=\"orgDoctor\">{{orgDoctor.honorificNm}}{{orgDoctor.refDoctorNm}}</option>\r\n              </select>\r\n          </div>\r\n\r\n          <div class=\"col-sm-2 p-l-r-5 p-b-5\">\r\n            <label>{{'COMMONLABELS.MOBILE_NO_TEXT' | translate }}</label>\r\n            <input id=\"refDoctorContactNo\" type=\"text\" formControlName=\"refDoctorContactNo\" tabindex=\"4\">\r\n          </div>\r\n          <div class=\"col-sm-2 p-l-r-5 p-b--5\">\r\n              <label>{{'OPD.PATIENT_CATEGORY_TEXT' | translate }}\r\n                  <span class=\"astrik-symbol \">\r\n                    <i class=\"fa fa-asterisk \"></i>\r\n                  </span>\r\n                </label>\r\n                <select id=\"patientCategoryNm\" formControlName=\"patientCategoryNm\" (change)=\"changePatientcategory()\"\r\n                  [compareWith]=\"patientCategoryComparator\" required tabindex=\"5\">\r\n                  <option [ngValue]=\"undefined\"></option>\r\n                  <option *ngFor=\"let category of patientCategoriesList\" [ngValue]=\"category\">{{category.displayName}}</option>\r\n                </select>\r\n                <div *ngIf=\"formGroup.get('patientCategoryNm').invalid && formDir.submitted\" class=\"has-error popover-style\"\r\n                  role=\"alert\">\r\n                  <div *ngIf=\"formGroup.controls[ 'patientCategoryNm'].errors.required\" class=\"dynamic_popover\">\r\n                    * PatientCategory is required\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                </div>\r\n          </div>\r\n          <div class=\"col-sm-2 p-l-r-5 p-b--5\">\r\n            <label>{{'OPD.DATE_OF_ORDER_TEXT' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <div class=\"dateTime-picker-p\">\r\n              <p class=\"input-group\">\r\n                <input id=\"dateOfOrder\" type=\"text\" [matDatepicker]=\"dateOfOrder \" formControlName=\"dateOfOrder\" tabindex=\"6\" class=\"input-width\">\r\n                <mat-datepicker #dateOfOrder></mat-datepicker>\r\n                <span class=\"input-group-btn \">\r\n                  <button class=\"btn btn-default btn-calender calender-button-height\" type=\"button \" (click)=\"datePickerToggler(dateOfOrder) \">\r\n                    <i class=\"fa fa-calendar \"></i>\r\n                  </button>\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"bg-white common-radius box-shadow no-padding col-sm-12 m-t-10 message-section\" *ngIf=\"formGroup.get('patientCategoryNm').value&&formGroup.get('dateOfOrder').value\">\r\n        <div class=\"col-sm-12 no-padding border-bottom form-section-tittle\">\r\n          <h3 class=\"p-l-5 \">{{'OPD.LAB_TEST_ORDER_LIST_TEXT' | translate }}</h3>\r\n        </div>\r\n        <div class=\"col-sm-12 no-padding\" *ngIf=\"emrPatientTests \">\r\n            <div class=\"col-sm-12 no-padding\" *ngIf=\"emrPatientTests.emrvisitLists&&emrPatientTests.emrvisitLists.length\">\r\n                <div class=\"col-sm-12 m-t-5 box-section-tittle\">\r\n                    <label class=\"order-from-emr\">{{'OPD.ORDER_RECIEVED_FROM_EMR' | translate}}</label>\r\n                  </div>\r\n                  <table table class=\"scroll-table table order-from-emr-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th class=\"order-id\">{{'COMMONLABELS.ORDER_ID_TEXT' | translate }}</th>\r\n                        <th class=\"order-date\">{{'IMAGING.ORDER_DATE' | translate }}</th>\r\n                        <th class=\"test-date\">{{'IMAGING.TEST_DATE' | translate }}</th>\r\n                        <th class=\"ordered-by\">{{'OPD.ORDER_BY' | translate }}</th>\r\n                        <th class=\"action-item\">{{'COMMONLABELS.ACTIONS_TEXT' | translate }}</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let test of emrPatientTests.emrvisitLists\">\r\n                        <td class=\"order-id\">{{test.patientVisitId}}</td>\r\n                        <td class=\"order-date\">{{test.visitDt}}</td>\r\n                        <td class=\"test-date\">{{test.visitDt}}</td>\r\n                        <td class=\"ordered-by\">{{test.doctorNm}}</td>\r\n                        <td class=\"action-item\"><button id=\"addToList\" class=\"emr-button\" (click)=\"addToViewOrderDetails(test)\">{{'OPD.ADD_TO_VIEW_ORDER_DETAILS'\r\n                            | translate }}</button></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n            </div>\r\n          </div>\r\n        <div class=\"col-sm-12 p-l-r-5 p-t-10\">\r\n          <div class=\"menu-radio-group\">\r\n              <input type=\"radio\" checked=\"checked\" name=\"toggle\" id=\"tests\" value=\"tests\" (click)=\"selectedServices('tests')\">\r\n              <label for=\"tests\">{{'OPD.TESTS_TEXT' | translate }}</label>\r\n              <input type=\"radio\" name=\"toggle\" id=\"panels\" value=\"panels\" (click)=\"selectedServices('panels')\">\r\n              <label for=\"panels\">{{'OPD.PANELS_TEXT' | translate }}</label>\r\n              <input type=\"radio\" name=\"toggle\" id=\"packages\" value=\"packages\" (click)=\"selectedServices('packages')\">\r\n              <label for=\"packages\">{{'OPD.PACKAGES_TEXT' | translate }}</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"page-info-message col-sm-12 no-padding\" *ngIf=\"selectedServicesListForData&&!selectedServicesListForData.length\">\r\n          <ul>\r\n            <li class=\"info-icon\"><i class=\"mdi mdi-information\"></i></li>\r\n            <li class=\"info-message\">\r\n              <p *ngIf=\"isTest\"> Currently Lab Tests are not added to your service list, You can add Lab Test in <br />(Billing\r\n                >> Catalogue >> Lab >> Tests) or Contact Your Organisation Administrator.</p>\r\n              <P *ngIf=\"isPanel\"> Currently Lab Panels are not added to your service list, You can add Lab Panels in\r\n                <br />(Billing >> Catalogue >> Lab >> Panels) or Contact Your Organisation Administrator.</P>\r\n              <P *ngIf=\"isPackage\"> Currently Lab Packages are not added to your service list, You can add/Create\r\n                Packages in (Billing >> Catalogue >> Packages >> Add Packages) or Contact Your Organisation\r\n                Administrator.</P>\r\n              <!-- <p>There are no Clinical Services available for the Above Selected Department, Kindly add some Clinical Services in Billing Catalogue Page or Contact Your Administrator.</p> -->\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"row m-0 m-t-10\" *ngIf=\"selectedServicesListForData&&selectedServicesListForData.length\">\r\n          <div class=\"col-sm-6 p-l-r-5 p-b-10\">\r\n            <label *ngIf=\"isTest\">{{'OPD.SELECT_TESTS_TEXT' | translate }}\r\n              <span class=\"astrik-symbol\">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <label *ngIf=\"isPanel\">{{'OPD.SELECT_PANELS_TEXT' | translate }}\r\n              <span class=\"astrik-symbol\">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <label *ngIf=\"isPackage\">{{'OPD.SELECT_PACKAGES_TEXT' | translate }}\r\n              <span class=\"astrik-symbol\">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <ng-select id=\"serviceName\" [searchable]=\"true\" formControlName=\"serviceName\" (change)=\"serviceUnitPrice()\" tabindex=\"7\r\n            \">\r\n                <ng-option [value]=\"undefined\"></ng-option>\r\n                <ng-option *ngFor=\"let service of selectedServicesList\" [value]=\"service\">{{service.serviceName }}</ng-option>\r\n              </ng-select>\r\n          </div>\r\n          <div class=\"col-sm-2 p-l-r-5\">\r\n            <label>{{'OPD.TEST_ORDER_DATE' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <div class=\"dateTime-picker-p\">\r\n                <p class=\"input-group\">\r\n                    <input id=\"testPlanDttm\" type=\"text\" [matDatepicker]=\"testPlanDttm\" formControlName=\"testPlanDttm\" tabindex=\"8\" class=\"input-width\">\r\n                    <mat-datepicker #testPlanDttm></mat-datepicker>\r\n                    <span class=\"input-group-btn w-10\">\r\n                      <button class=\"btn btn-default btn-calender calender-button-height\" type=\"button \" (click)=\"datePickerToggler(testPlanDttm) \">\r\n                        <i class=\"fa fa-calendar \"></i>\r\n                      </button>\r\n                    </span>\r\n                  </p>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-2 p-l-r-5\">\r\n            <label>{{'OPD.PRIORITY_TEXT' | translate }}\r\n              <span class=\"astrik-symbol \">\r\n                <i class=\"fa fa-asterisk \"></i>\r\n              </span>\r\n            </label>\r\n            <select id=\"priority\" formControlName=\"priority\" (change)=\"disableAddToListButton()\" [appDisableControl]=\"!disableService&&formGroup.get('testPlanDttm').value\" tabindex=\"9\">\r\n                <option value=\"High\">High</option>\r\n                <option value=\"Medium\">Medium</option>\r\n                <option value=\"Low\">Low</option>\r\n              </select>\r\n          </div>\r\n          <div class=\"col-sm-2 p-l-r-5\">\r\n              <button id=\"addToList\" class=\"add-to-list-button\" [disabled]=\"isDisableAddtoList\" (click)=\"addtoBilling()\" tabindex=\"10\">{{'OPD.ADD_TO_BILLING_TEXT'\r\n                  | translate }}</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12 no-padding border-top\" *ngIf=\"labTests.length||labPanels.length||labPackages.length\">\r\n          <table table class=\"scroll-table table lab-service-table\">\r\n            <thead class=\"fixedHeader\">\r\n              <tr>\r\n                <th class=\"serial-num\">{{'OPD.S.NO_TEXT' | translate }}</th>\r\n                <th class=\"consult-service-list\">{{'OPD.ORDER_LIST_TEXT' | translate }}</th>\r\n                <th class=\"service-unit\">{{'OPD.PRIORITY_TEXT' | translate }}</th>\r\n                <th class=\"action-items\">{{'COMMONLABELS.ACTIONS_TEXT' | translate }}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"scrollContent\">\r\n              <tr *ngIf=\"labTests.length\">\r\n                <td colspan=\"10\" class=\"tbody-tittle tests-row\">{{'OPD.TESTS_TEXT' | translate }}</td>\r\n              </tr>\r\n\r\n              <tr *ngFor=\"let service of labTests; index as i\">\r\n                <td class=\"serial-num\">\r\n                  <p>{{i+1}}</p>\r\n                </td>\r\n                <td class=\"consult-service-list\">\r\n                  <p>{{service.serviceName}}</p>\r\n                </td>\r\n                <td class=\"service-unit\">\r\n                  <p>{{service.priority}}</p>\r\n                </td>\r\n                <td class=\"action-items\">\r\n                  <ul>\r\n                    <li (click)=\"deleteSelectedServices(service,'tests')\">\r\n                      <i class=\"mdi mdi-delete\"></i>\r\n                    </li>\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <tbody class=\"scrollContent\" *ngIf=\"labPanels.length\">\r\n              <tr>\r\n                <td colspan=\"10\" class=\"tbody-tittle panel-row\">{{'OPD.PANELS_TEXT' | translate }}</td>\r\n              </tr>\r\n              <tr data-toggle=\"collapse\" data-target=\"#demo1\" class=\"accordion-toggle\"></tr>\r\n              <tr *ngFor=\"let service of labPanels; index as i\">\r\n                <td class=\"serial-num\">\r\n                  <p>{{i+1}}</p>\r\n                </td>\r\n                <td class=\"consult-service-list\">\r\n                  <p>{{service.serviceName}}</p>\r\n                </td>\r\n                <td class=\"service-unit\">\r\n                  <p>{{service.priority}}</p>\r\n                </td>\r\n                <td class=\"action-items\">\r\n                  <ul>\r\n                    <li (click)=\"deleteSelectedServices(service,'panels')\">\r\n                      <i class=\"mdi mdi-delete\"></i>\r\n                    </li>\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <tbody class=\"scrollContent\" *ngIf=\"labPackages.length\">\r\n              <tr *ngIf=\"labTests.length\">\r\n                <td colspan=\"10\" class=\"tbody-tittle package-row\">{{'OPD.PACKAGES_TEXT' | translate }}</td>\r\n              </tr>\r\n              <tr *ngFor=\"let service of labPackages; index as i\">\r\n                <td class=\"serial-num\">\r\n                  <p>{{i+1}}</p>\r\n                </td>\r\n                <td class=\"consult-service-list\">\r\n                  <p>{{service.serviceName}}</p>\r\n                </td>\r\n                <td class=\"service-unit\">\r\n                  <p>{{service.priority}}</p>\r\n                </td>\r\n                <td class=\"action-items\">\r\n                  <ul>\r\n                    <li (click)=\"deleteSelectedServices(service,'packages')\">\r\n                      <i class=\"mdi mdi-delete\"></i>\r\n                    </li>\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"col-sm-10 p-l-r-0 m-t-b-15 form-button-group\">\r\n    <ul>\r\n      <li><button id=\"payment\" type=\"submit\" class=\"btn-app btn-save\" (click)=\"payment()\">\r\n          <i class=\"mdi mdi-arrow-up-bold margin-right-5\"></i> {{'OPD.PROCEED_TO_BILLING_TEXT' | translate }}</button></li>\r\n      <li>\r\n        <button id=\"clearForm\" type=\"button\" class=\"btn-app btn-clear\" (click)=\"clearForm()\">\r\n          <i class=\"fas fa-redo-alt margin-right-5\"></i> {{'COMMONLABELS.CLEAR_TEXT' | translate }}</button>\r\n      </li>\r\n      <li><button id=\"cancelForm\" type=\"button\" class=\"btn-app btn-delete\" (click)=\"cancelForm()\">\r\n          <i class=\"fa fa-times fa-btn-icon margin-right-5\" aria-hidden=\"true\"></i> {{'COMMONLABELS.CANCEL' | translate\r\n          }}</button></li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- Below is Lab Section Code -->\r\n","import { Component, OnInit, Inject, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BillingserviceService } from '@app/modules/opd/components/billing/billingservice.service';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\nimport { DatePipe } from '@angular/common';\r\nimport { UserService, CLONEDEEP } from '@core/services';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport {\r\n  OpdApiService,\r\n  RegisterationBillingService,\r\n  LabApiService\r\n} from '@core/services';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ConfirmationDialogComponent } from '@shared/components/confirmation-dialog/confirmation-dialog.component';\r\nimport { MatDialog } from '@angular/material';\r\nimport { PatientdataService } from '@app/modules/opd/components/allpatients/patientdata.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-lab',\r\n  templateUrl: './lab.component.html',\r\n  styleUrls: ['./lab.component.scss']\r\n})\r\nexport class LabComponent implements OnInit {\r\n  public subPanelsAndTests: any;\r\n  private selctedValue = 'tests';\r\n  private allServices: any;\r\n  private servicesUnitPrice: any;\r\n  public labTests: any[];\r\n  public labPanels: any[];\r\n  public labPackages: any[];\r\n  public selectedServicesList: any[];\r\n  public selectedServicesListForData: any[];\r\n  public orgRefDoctorsList: any[];\r\n  public refOrgList = [];\r\n  public patientCategoriesList: any[] = [];\r\n  public disableService = true;\r\n  disablePriority = true;\r\n  public isDisableAddtoList = true;\r\n  formGroup: FormGroup;\r\n  public isTest = true;\r\n  public isPanel = false;\r\n  public isPackage = false;\r\n  private patientData;\r\n  public emrPatientTests;\r\n  public emrPatientTestsDuplicate;\r\n  private amountDefinedEmrPatientTests;\r\n  private dataForCompare;\r\n  public referenceList: any;\r\n  public emrLabTests;\r\n  public emrLabpanels;\r\n  public apiSubscription: Subscription;\r\n  private imagingFormDataForEmrTests;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private opdService: OpdApiService,\r\n    private registerationBilling: RegisterationBillingService,\r\n    private labService: LabApiService,\r\n    private toastr: ToastrService,\r\n    private datePipe: DatePipe,\r\n    private billingserviceService: BillingserviceService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    public dialog: MatDialog,\r\n    private userService: UserService,\r\n    private patientdataService: PatientdataService,\r\n    @Inject(CLONEDEEP) private cloner\r\n  ) {\r\n    this.userSession = this.userService.getUser();\r\n  }\r\n  private userSession: UserSession;\r\n  ngOnInit() {\r\n    this.initForm();\r\n    // this.orgReferenceDoctors();\r\n    this.patientCategories();\r\n    this.fetchPaymentModes();\r\n    this.servicesListForLabAndImaging();\r\n    this.labTests = this.billingserviceService.getLabTests();\r\n    this.labPanels = this.billingserviceService.getLabPanels();\r\n    this.labPackages = this.billingserviceService.getLabPackages();\r\n    const clinicalFormData = this.billingserviceService.getconsultationFormData();\r\n    const imagingFormData = this.billingserviceService.getImageFormdata();\r\n    this.imagingFormDataForEmrTests = imagingFormData;\r\n    // getting formdata from the service\r\n    const labFormData = this.billingserviceService.getLabFormData();\r\n    this.patientData = this.patientdataService.getPatienDataForBilling();\r\n    // if (!labFormData) {\r\n    //   this.router.navigate(['registration/add-patient']);\r\n    // }\r\n    if (labFormData) {\r\n      if (clinicalFormData && clinicalFormData.patientCategoryNm) {\r\n        labFormData.patientCategoryNmm = clinicalFormData.patientCategoryNm;\r\n      }\r\n      this.formGroup.patchValue(labFormData);\r\n      // if (!clinicalFormData && !clinicalFormData.patientCategoryNm) {\r\n      //   this.formGroup.patchValue({\r\n      //     patientCategoryName: labFormData.patientCategoryNm\r\n      //   });\r\n    }\r\n    this.formGroup.patchValue({\r\n      refDoctorNm: labFormData.refDoctorNm ? labFormData.refDoctorNm : null\r\n    });\r\n    if (!this.billingserviceService.getEmrTests()) {\r\n      this.fetchEmrPatients();\r\n    }\r\n  }\r\n  patientCategoryComparator(o1, o2) {\r\n    return o1 && o2 && o1.patientCategoryName === o2.patientCategoryName;\r\n  }\r\n  datePickerToggler(datePicker: MatDatepicker<Date>) {\r\n    datePicker[datePicker.opened ? 'close' : 'open']();\r\n  }\r\n  initForm() {\r\n    this.formGroup = this.formBuilder.group({\r\n      refDoctorNm: null,\r\n      refOrgNm: null,\r\n      refDoctorContactNo: null,\r\n      referralType: null,\r\n      dateOfOrder: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n      patientCategoryNm: { patientCategoryName: 'GEN', patientCategoryId: 1 },\r\n      patientCategoryId: null,\r\n      date: null,\r\n      serviceName: null,\r\n      priority: 'Low',\r\n      value: null,\r\n      service: null,\r\n      testPlanDttm: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n      patientVisitId: null,\r\n      emrLabTests: null,\r\n      emrLabpanels: null,\r\n      emrSubpanels: null\r\n    });\r\n    // saving formdata into service\r\n    this.formGroup.valueChanges.subscribe(() => {\r\n      this.billingserviceService.setLabFormData(this.formGroup.value);\r\n    });\r\n  }\r\n  servicesListForLabAndImaging() {\r\n    const patientCategoryName = this.formGroup.get('patientCategoryNm').value;\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      type: 'LAB',\r\n      patientCategoryName: patientCategoryName.patientCategoryName,\r\n      currentD: this.datePipe.transform(new Date(), 'yyyy-MM-dd')\r\n    };\r\n\r\n    this.opdService.servicesListForLabAndImaging(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.allServices = response.data;\r\n          this.selectedServices(this.selctedValue);\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  fetchEmrPatients() {\r\n    const payload = {\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      orgId: this.userSession.orgId,\r\n      hospitalPatientId: this.patientData.hospitalPatientId,\r\n      patientId: this.patientData.patientId,\r\n      type: 'LAB'\r\n    };\r\n    this.opdService.fetchEmrTestsForPatient(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.emrPatientTestsDuplicate = null;\r\n          this.billingserviceService.setEmrTests(null);\r\n          this.emrPatientTests = response.data;\r\n          if (\r\n            this.imagingFormDataForEmrTests &&\r\n            this.imagingFormDataForEmrTests.patientVisitId &&\r\n            this.emrPatientTests.emrvisitLists\r\n          ) {\r\n            // here we are filtering the visit id from the list which selected in lab .\r\n            // If isit selected from the lab wee are showing all the  visits from the emr\r\n            this.emrPatientTests.emrvisitLists = this.emrPatientTests.emrvisitLists.filter(\r\n              data => {\r\n                return (\r\n                  data.patientVisitId ===\r\n                  this.imagingFormDataForEmrTests.patientVisitId\r\n                );\r\n              }\r\n            );\r\n          }\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        // this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  fetchPaymentModes() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      masterType: 'REFERRAL TYPE',\r\n      authenticatedUserId: this.userSession.regId\r\n    };\r\n\r\n    this.opdService.fetchCommonValues(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.referenceList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n\r\n  selectedServices(selectedValue) {\r\n    this.formGroup.get('serviceName').reset();\r\n    this.isDisableAddtoList = true;\r\n    if (selectedValue === 'tests') {\r\n      this.isTest = true;\r\n      this.isPanel = false;\r\n      this.isPackage = false;\r\n      this.selectedServicesList = this.allServices ? this.allServices.testList : [];\r\n      // if (this.labTests && this.labTests.length) {\r\n      //   console.log(this.labTests);\r\n      //   console.log(this.selectedServicesList);\r\n      //   this.selectedServicesList.filter(val => {\r\n      //     const serviceId = val.serviceId;\r\n      //   });\r\n      // }\r\n      this.selectedServicesListForData = this.allServices ? this.allServices.testList : [];\r\n    } else if (selectedValue === 'panels') {\r\n      this.selectedServicesList = [];\r\n      this.selectedServicesListForData = [];\r\n      this.isTest = false;\r\n      this.isPanel = true;\r\n      this.isPackage = false;\r\n      this.selectedServicesList = this.allServices ? this.allServices.panelList : [];\r\n      this.selectedServicesListForData = this.allServices ? this.allServices.panelList : [];\r\n    } else if (selectedValue === 'packages') {\r\n      this.selectedServicesList = [];\r\n      this.selectedServicesListForData = [];\r\n      this.isTest = false;\r\n      this.isPanel = false;\r\n      this.isPackage = true;\r\n      this.selectedServicesList = this.allServices ? this.allServices.packageList : [];\r\n      this.selectedServicesListForData = this.allServices ? this.allServices.packageList : [];\r\n    }\r\n  }\r\n  changePatientcategory() {\r\n    this.formGroup.patchValue({ serviceName: null });\r\n    this.disableService = true;\r\n    this.disablePriority = true;\r\n    this.isDisableAddtoList = true;\r\n  }\r\n  serviceUnitPrice() {\r\n    this.isDisableAddtoList = true;\r\n    const { serviceId, billServiceType } = this.formGroup.get(\r\n      'serviceName'\r\n    ).value;\r\n    if (serviceId) {\r\n      const patientCategoryName = this.formGroup.get('patientCategoryNm').value;\r\n      const payload = {\r\n        orgId: this.userSession.orgId,\r\n        authenticatedUserId: this.userSession.regId,\r\n        orgGroupId: this.userSession.orgGroupId,\r\n        billServiceType,\r\n        serviceId,\r\n        startDate: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n        patientCategoryName: patientCategoryName.patientCategoryName\r\n      };\r\n\r\n      this.registerationBilling.serviceUnitPrice(payload).subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 'E200') {\r\n            this.servicesUnitPrice = response.data;\r\n            this.disableService = false;\r\n            if (\r\n              this.formGroup.get('testPlanDttm').value &&\r\n              !this.disableService\r\n            ) {\r\n              this.isDisableAddtoList = false;\r\n            }\r\n          } else if (response.responseCode === 'E400') {\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n        },\r\n        () => {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n    }\r\n  }\r\n  addToList() {\r\n    this.disableService = true;\r\n    this.isDisableAddtoList = true;\r\n    const service = this.formGroup.get('serviceName').value;\r\n    const serviceName = this.formGroup.get('serviceName').value;\r\n    if (!serviceName) {\r\n      return false;\r\n    }\r\n    const priority = this.formGroup.get('priority').value;\r\n    const testPlanDttm = this.formGroup.get('testPlanDttm').value;\r\n\r\n    const services = this.servicesUnitPrice;\r\n    services.quantity = 1;\r\n    services.testPlanDttm = testPlanDttm;\r\n    const obj = { ...serviceName, ...services };\r\n    const invoiceItemNo = this.billingserviceService.getInvoiceItemNumber();\r\n    this.billingserviceService.setInvoiceItemNumber(invoiceItemNo + 1);\r\n    obj.invoiceItemNo = invoiceItemNo + 1;\r\n    obj.priority = priority;\r\n    if (obj.type === 'PACKAGE' && obj.panelList && obj.panelList.length) {\r\n      obj.panelList.forEach(element => {\r\n        if (element.type === 'PANEL') {\r\n          element.orgId = this.userSession.orgId;\r\n          this.opdService.fetchSubpanelsAndTests(element).subscribe(\r\n            (response: any) => {\r\n              if (response.responseCode === 'E200') {\r\n                this.subPanelsAndTests = response.data;\r\n                if (this.subPanelsAndTests.subPanelList) {\r\n                  element.subPanelsList = this.subPanelsAndTests.subPanelList;\r\n                }\r\n              } else if (response.responseCode === 'E400') {\r\n                this.toastr.error('Failure!', response.responseMessage);\r\n              }\r\n            },\r\n            () => {\r\n              this.toastr.error('Failure!', 'Something went wrong');\r\n            }\r\n          );\r\n        }\r\n      });\r\n    }\r\n    if (obj.type === 'PANEL') {\r\n      this.opdService.fetchSubpanelsAndTests(obj).subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 'E200') {\r\n            this.subPanelsAndTests = response.data;\r\n            if (this.subPanelsAndTests.subPanelList) {\r\n              obj.subPanelsList = this.subPanelsAndTests.subPanelList;\r\n            }\r\n          } else if (response.responseCode === 'E400') {\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n        },\r\n        () => {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n    }\r\n\r\n    // Here  we are removing the selected services from test list\r\n    if (this.isTest) {\r\n      this.selectedServicesList = this.selectedServicesList.filter(function(\r\n        value\r\n      ) {\r\n        return value.serviceId !== service.serviceId;\r\n      });\r\n      // this.allServices.testList = this.selectedServicesList;\r\n      this.labTests = this.cloner(this.labTests);\r\n      if (this.labTests && this.labTests.length) {\r\n       const data = this.labTests.find(item => item.serviceId === obj.serviceId);\r\n        if (data) {\r\n          this.toastr.warning('Alredady added to list');\r\n        } else {\r\n          this.labTests.push(obj);\r\n        }\r\n      } else {\r\n        this.labTests.push(obj);\r\n      }\r\n\r\n    } else if (this.isPanel) {\r\n      // Here  we are removing the selected services from panel list\r\n      this.selectedServicesList = this.selectedServicesList.filter(function(\r\n        value\r\n      ) {\r\n        return value.serviceId !== service.serviceId;\r\n      });\r\n      this.labPanels = this.cloner(this.labPanels);\r\n      if (this.labPanels && this.labPanels.length) {\r\n        const data = this.labPanels.find(item => item.serviceId === obj.serviceId);\r\n         if (data) {\r\n           this.toastr.warning('Alredady added to list');\r\n         } else {\r\n           this.labPanels.push(obj);\r\n         }\r\n       } else {\r\n         this.labPanels.push(obj);\r\n       }\r\n    } else {\r\n      // Here  we are removing the selected services from package list\r\n      this.selectedServicesList = this.selectedServicesList.filter(function(\r\n        value\r\n      ) {\r\n        return value.serviceId !== service.serviceId;\r\n      });\r\n      this.labPackages = this.cloner(this.labPackages);\r\n      if (this.labPackages && this.labPackages.length) {\r\n        const data = this.labPackages.find(item => item.serviceId === obj.serviceId);\r\n         if (data) {\r\n           this.toastr.warning('Alredady added to list');\r\n         } else {\r\n           this.labPackages.push(obj);\r\n         }\r\n       } else {\r\n         this.labPackages.push(obj);\r\n       }\r\n    }\r\n    this.formGroup.get('serviceName').reset();\r\n    this.formGroup.patchValue({ priority: 'Medium' });\r\n    this.isDisableAddtoList = true;\r\n    this.disableService = true;\r\n  }\r\n  disableAddToListButton() {\r\n    if (this.formGroup.get('testPlanDttm').value && !this.disableService) {\r\n      this.isDisableAddtoList = false;\r\n    }\r\n  }\r\n  // visit related comapre and only lab tests showing  functionality pending in lab\r\n  addToViewOrderDetails(data) {\r\n    this.formGroup.patchValue({ patientVisitId: data.patientVisitId });\r\n    const patientCategoryName = this.formGroup.get('patientCategoryNm').value;\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      type: 'EMR',\r\n      patientCategoryNm: patientCategoryName.patientCategoryName,\r\n      currentDt: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n      // currentDt: '2018-12-15',\r\n      patientVisitId: data.patientVisitId\r\n    };\r\n    if (this.apiSubscription) {\r\n      this.apiSubscription.unsubscribe();\r\n    }\r\n\r\n    this.apiSubscription = this.opdService\r\n      .servicesListForLabAndImaging(payload)\r\n      .subscribe(\r\n        (response: any) => {\r\n          if (response.responseCode === 'E200') {\r\n            this.amountDefinedEmrPatientTests = response.data;\r\n            this.emrLabTests = this.amountDefinedEmrPatientTests.testList;\r\n            this.emrLabpanels = this.amountDefinedEmrPatientTests.panelList;\r\n            // here we are filtering the imaging tests\r\n            if (this.emrLabTests) {\r\n              this.emrLabTests = this.emrLabTests.filter(testsData => {\r\n                return testsData.billServiceType === 'LAB';\r\n              });\r\n            }\r\n            this.labTests = this.labTests.concat(this.emrLabTests);\r\n            this.formGroup.patchValue({ emrLabTests: this.emrLabTests });\r\n            this.formGroup.patchValue({ emrLabpanels: this.emrLabpanels });\r\n            this.labTests.map(tests => {\r\n              const amountObj = tests.billServiceAmountObj;\r\n              (tests.cgstTaxPercentage = amountObj.cgstTaxPercntg),\r\n                (tests.serviceAmount = amountObj.serviceAmt),\r\n                (tests.sgstTaxPercentage = amountObj.sgstTaxPercntg),\r\n                (tests.taxCategoryCode = amountObj.taxCategoryCode),\r\n                (tests.taxId = amountObj.taxId),\r\n                (tests.taxPercentage = amountObj.taxPercntg),\r\n                (tests.quantity = 1),\r\n                (tests.isEmrTest = true);\r\n              return tests;\r\n            });\r\n            this.billingserviceService.setLabTests(this.labTests);\r\n            // here we are filtering the imaging panels\r\n\r\n            if (this.emrLabpanels) {\r\n              this.emrLabpanels = this.emrLabpanels.filter(testsData => {\r\n                return testsData.billServiceType === 'LAB';\r\n              });\r\n            }\r\n            this.labPanels = this.labPanels.concat(this.emrLabpanels);\r\n            this.billingserviceService.setLabPanels(this.labPanels);\r\n            this.labPanels.map(panels => {\r\n              const amountObj = panels.billServiceAmountObj;\r\n              (panels.cgstTaxPercentage = amountObj.cgstTaxPercntg),\r\n                (panels.serviceAmount = amountObj.serviceAmt),\r\n                (panels.sgstTaxPercentage = amountObj.sgstTaxPercntg),\r\n                (panels.taxCategoryCode = amountObj.taxCategoryCode),\r\n                (panels.taxId = amountObj.taxId),\r\n                (panels.taxPercentage = amountObj.taxPercntg),\r\n                (panels.quantity = 1),\r\n                (panels.isEmrTest = true);\r\n              this.opdService.fetchSubpanelsAndTests(panels).subscribe(\r\n                (responseData: any) => {\r\n                  if (responseData.responseCode === 'E200') {\r\n                    this.subPanelsAndTests = responseData.data;\r\n                    if (this.subPanelsAndTests.subPanelList) {\r\n                      panels.subPanelsList = this.subPanelsAndTests.subPanelList;\r\n                      this.formGroup.patchValue({\r\n                        emrSubpanels: this.subPanelsAndTests.subPanelList\r\n                      });\r\n                    }\r\n                  } else if (response.responseCode === 'E400') {\r\n                    this.toastr.error('Failure!', response.responseMessage);\r\n                  }\r\n                },\r\n                () => {\r\n                  this.toastr.error('Failure!', 'Something went wrong');\r\n                }\r\n              );\r\n              return panels;\r\n            });\r\n            this.emrPatientTestsDuplicate = this.emrPatientTests;\r\n            // this is used for deleting the emr tests after add to the cart\r\n            this.billingserviceService.setEmrTests(\r\n              this.emrPatientTestsDuplicate\r\n            );\r\n            this.emrPatientTests = [];\r\n          } else if (response.response === 'E400') {\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n        },\r\n        () => {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n  }\r\n  addtoBilling() {\r\n    this.addToList();\r\n    if (\r\n      this.labPackages.length ||\r\n      this.labPanels.length ||\r\n      this.labTests.length\r\n    ) {\r\n      this.billingserviceService.setLabPackages(this.labPackages);\r\n      this.billingserviceService.setLabPanels(this.labPanels);\r\n      this.billingserviceService.setLabTests(this.labTests);\r\n    } else {\r\n      this.toastr.warning('Please Add Services');\r\n    }\r\n  }\r\n  clearForm() {\r\n    this.formGroup.patchValue({\r\n      dateOfOrder: this.datePipe.transform(new Date(), 'yyyy-MM-dd')\r\n    });\r\n    this.formGroup.patchValue({\r\n      patientCategoryNm: { patientCategoryName: 'GEN', patientCategoryId: null }\r\n    });\r\n    // dateOfOrder: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n    // patientCategoryNm: {patientCategoryName: 'GEN', patientCategoryId: null},\r\n    this.selectedServicesList = this.selectedServicesList.concat(this.labTests);\r\n    this.selectedServicesList = this.selectedServicesList.concat(\r\n      this.labPanels\r\n    );\r\n    this.selectedServicesList = this.selectedServicesList.concat(\r\n      this.labPackages\r\n    );\r\n    this.selectedServicesList.sort((a, b) =>\r\n      a.serviceName !== b.serviceName\r\n        ? a.serviceName < b.serviceName\r\n          ? -1\r\n          : 1\r\n        : 0\r\n    );\r\n    this.formGroup.reset();\r\n    this.isDisableAddtoList = true;\r\n    this.disableService = true;\r\n    this.labTests = [];\r\n    this.labPanels = [];\r\n    this.labPackages = [];\r\n    this.selectedServicesListForData = [];\r\n    this.billingserviceService.setLabFormData([]);\r\n    this.billingserviceService.setLabTests([]);\r\n    this.billingserviceService.setLabPanels([]);\r\n    this.billingserviceService.setLabPackages([]);\r\n  }\r\n  orgReferenceDoctors(type) {\r\n    if (type === 'referralChange') {\r\n      this.orgRefDoctorsList = [];\r\n      this.refOrgList = [];\r\n    }\r\n    this.formGroup.patchValue({\r\n      refDoctorContactNo: null\r\n    });\r\n    if (type !== 'organisationChange') {\r\n      this.refOrgList = [];\r\n      this.formGroup.patchValue({\r\n        refOrgNm: null\r\n      });\r\n    }\r\n    this.formGroup.patchValue({\r\n      refDoctorNm: null\r\n    });\r\n\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGroupId: this.userSession.orgGroupId,\r\n      referralType: this.formGroup.get('referralType').value,\r\n      refOrgNm: this.formGroup.get('refOrgNm').value\r\n    };\r\n\r\n    this.opdService.orgDoctors(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          if (type === 'organisationChange') {\r\n            this.orgRefDoctorsList = [];\r\n            this.orgRefDoctorsList = response.data;\r\n            // this.orgRefDoctorsList = this.orgRefDoctorsList.filter(function(\r\n            //   value\r\n            // ) {\r\n            //   return value.refDoctorNM;\r\n            // });\r\n          }\r\n          if (type !== 'organisationChange') {\r\n            this.orgRefDoctorsList = [];\r\n            this.refOrgList = [];\r\n            this.refOrgList = response.data;\r\n            this.orgRefDoctorsList = response.data;\r\n            this.refOrgList = this.refOrgList.filter(function(value) {\r\n              return value.refOrgNm;\r\n            });\r\n          }\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  refDoctorComparator(o1, o2) {\r\n    return o1 && o2 && o1.refDoctorId === o2.refDoctorId;\r\n  }\r\n  refTypeComparator(o1, o2) {\r\n    return o1 && o2 && o1.referralType === o2.referralType;\r\n  }\r\n  refOrgComparator(o1, o2) {\r\n    return o1 && o2 && o1.refOrgNm === o2.refOrgNm;\r\n  }\r\n\r\n  patientCategories() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId\r\n    };\r\n    this.opdService.patientCategories(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.patientCategoriesList = response.data;\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  onselctingconsultantNm() {\r\n    const refDoctorNm = this.formGroup.get('refDoctorNm').value;\r\n    this.formGroup.patchValue({\r\n      refDoctorContactNo: refDoctorNm.refDocContactNo\r\n    });\r\n  }\r\n\r\n  deleteSelectedServices(obj, type) {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Delete ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        if (type === 'tests') {\r\n          this.labTests = this.labTests.filter(function(value) {\r\n            return value.serviceId !== obj.serviceId;\r\n          });\r\n          this.billingserviceService.setLabTests(this.labTests);\r\n        }\r\n        if (type === 'panels') {\r\n          // this.selectedServicesList.push(obj);\r\n          this.labPanels = this.labPanels.filter(function(value) {\r\n            return value.serviceId !== obj.serviceId;\r\n          });\r\n          this.billingserviceService.setLabPanels(this.labPanels);\r\n        }\r\n        if (!obj.isEmrTest) {\r\n          // here we are checking if this test is from emr we are not pushing this test to the normaldropdoenlist array\r\n          this.selectedServicesList.push(obj);\r\n        }\r\n        if (obj.isEmrTest) {\r\n          //  If it is a emr test we are checking is any other emr\r\n          // test are there in the this.labTests.If no tests are there we need to show the emr patient list\r\n          this.dataForCompare = [];\r\n          this.dataForCompare = this.labTests.filter(function(value) {\r\n            return value.isEmrTest && value.isEmrTest === true;\r\n          });\r\n          let emrPanels = this.labPanels.filter(function(value) {\r\n            return value.isEmrTest && value.isEmrTest === true;\r\n          });\r\n          this.dataForCompare = this.dataForCompare.concat(emrPanels);\r\n          emrPanels = [];\r\n        }\r\n        if (this.dataForCompare && !this.dataForCompare.length) {\r\n          this.emrPatientTests = this.emrPatientTestsDuplicate;\r\n          this.billingserviceService.setEmrTests(null);\r\n          this.formGroup.patchValue({ patientVisitId: null });\r\n        }\r\n        if (type === 'packages') {\r\n          this.selectedServicesList.push(obj);\r\n          this.labPackages = this.labPackages.filter(function(value) {\r\n            return value.serviceId !== obj.serviceId;\r\n          });\r\n          this.billingserviceService.setLabPackages(this.labPackages);\r\n        }\r\n        // used for sorting the drop down values\r\n        this.selectedServicesList.sort((a, b) =>\r\n          a.serviceName !== b.serviceName\r\n            ? a.serviceName < b.serviceName\r\n              ? -1\r\n              : 1\r\n            : 0\r\n        );\r\n      }\r\n    });\r\n  }\r\n  disablePriorty(service) {\r\n    const amountServices = this.formGroup.get('serviceName').value;\r\n    if (amountServices.service.serviceAmount) {\r\n      this.disablePriority = false;\r\n    }\r\n  }\r\n  payment() {\r\n    if (\r\n      this.labPackages.length ||\r\n      this.labPanels.length ||\r\n      this.labTests.length\r\n    ) {\r\n      this.billingserviceService.setProceedToBillingActiveLink();\r\n      this.billingserviceService.setLabPackages(this.labPackages);\r\n      this.billingserviceService.setLabPanels(this.labPanels);\r\n      this.billingserviceService.setLabTests(this.labTests);\r\n      this.router.navigate(['../payment'], {\r\n        relativeTo: this.activatedRoute\r\n      });\r\n    } else {\r\n      this.toastr.warning('Please Add Services');\r\n    }\r\n  }\r\n  cancelForm() {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Cancel ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.billingserviceService.setLabTests([]);\r\n        this.billingserviceService.setLabPanels([]);\r\n        this.billingserviceService.setLabPackages([]);\r\n        this.billingserviceService.setLabFormData([]);\r\n        this.router.navigate(['registration/add-patient']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"row m-0\">\r\n  <div class=\"page-info-message col-sm-12 p-0\" *ngIf=\"!(consultations.length||labServicesList.length||imagingServicesList.length)\">\r\n    <ul>\r\n      <li class=\"info-icon\"><i class=\"mdi mdi-information\"></i></li>\r\n      <li class=\"info-message\">\r\n        <p>Please add some Services in Clinical/Lab/Imaging, to make payment or generate bill for the patient.</p>\r\n        <!-- <p>There are no Clinical Services available for the Above Selected Department, Kindly add some Clinical Services in Billing Catalogue Page or Contact Your Administrator.</p> -->\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"col-sm-12 pt-1 pl-0 form-header-tittle\" *ngIf=\"consultations.length||labServicesList.length||imagingServicesList.length\">\r\n    <h2>{{'OPD.SERVICE_BILLING_TEXT' | translate }}</h2>\r\n  </div>\r\n  <div class=\"bg-white common-radius box-shadow row m-0\" *ngIf=\"consultations.length||labServicesList.length||imagingServicesList.length\">\r\n    <div class=\"col-sm-12 p-0 border-bottom form-section-tittle\">\r\n      <h3 class=\"p-l-5\">Service Lists for Payment & Billing</h3>\r\n    </div>\r\n    <!-- clinical  services table  starts -->\r\n    <div class=\"col-sm-12 p-0\">\r\n      <table class=\"scroll-table table billing-table\" *ngIf=\"consultations.length ||labServicesList.length||imagingServicesList.length\">\r\n        <thead class=\"fixedHeader\">\r\n          <tr>\r\n            <th class=\"serial-num\">{{'OPD.S.NO_TEXT' | translate }}</th>\r\n            <th class=\"service-list\">{{'OPD.ORDER_LIST_TEXT' | translate }}</th>\r\n            <th class=\"service-units\">{{'OPD.UNITS_TEXT' | translate }}</th>\r\n            <th class=\"unit-cost\">{{'OPD.UNIT_COST_TEXT' | translate }}</th>\r\n            <th class=\"discount-amt\">{{'OPD.DISCOUNT_TEXT' | translate}} (<i class=\"fas fa-rupee-sign\"></i> - %)</th>\r\n            <th class=\"net-amt\">{{'OPD.NET_AMOUNT_TEXT' | translate }}</th>\r\n            <th class=\"action-items\">{{'COMMONLABELS.ACTIONS_TEXT' | translate }}</th>\r\n          </tr>\r\n        </thead>\r\n        <!-- clinical  services table  starts -->\r\n        <tbody class=\"scrollContent\" *ngIf=\"consultations.length\">\r\n          <tr>\r\n            <td class=\"tbody-tittle clinical-row\">{{'OPD.APPOINTMENT_TEXT' | translate\r\n              }} &amp; {{'OPD.CLINICAL_SERVICES_TEXT' | translate }}</td>\r\n          </tr>\r\n          <tr *ngFor=\"let services of consultations; index as i\">\r\n            <ng-container>\r\n              <td class=\"serial-num\">\r\n                <p>{{i+1}}</p>\r\n              </td>\r\n              <td class=\"service-list\">\r\n                <p>{{services.serviceName}}</p>\r\n              </td>\r\n              <td class=\"service-units\">\r\n                <p>{{services.quantity}}</p>\r\n              </td>\r\n              <td class=\"unit-cost\">\r\n                <p><i class=\"rupee-icon fas fa-rupee-sign\"></i> {{services.serviceAmount}}</p>\r\n              </td>\r\n              <td class=\"discount-amt\">\r\n                <div class=\"discount-inputs d-flex\">\r\n                  <input type=\"number\" placeholder=\"₹\" oninput=\"this.value = Math.abs(this.value)\" class=\"rupees-disc\"\r\n                    [appDisableControl]=\"globalDiscountPercent===0||globalDiscountAmt===0\" [(ngModel)]=\"services.discountAmount\"\r\n                    (ngModelChange)=\"discountPercent(services)\">\r\n                  <input type=\"number\" placeholder=\"%\" oninput=\"this.value = Math.abs(this.value)\" class=\"percent-disc\"\r\n                    [appDisableControl]=\"globalDiscountPercent===0||globalDiscountAmt===0\" [(ngModel)]=\"services.discountpercent\"\r\n                    (ngModelChange)=\"discountAmt(services)\">\r\n                </div>\r\n              </td>\r\n              <td class=\"net-amt\">\r\n                <i class=\"rupee-icon fas fa-rupee-sign\"></i>\r\n                <p> {{(services.totalServiceAmount) | number:'.2'}}</p>\r\n              </td>\r\n              <td class=\"action-items\">\r\n                <ul>\r\n                  <li>\r\n                    <i class=\"mdi mdi-delete\" (click)=\"deleteSelectedServices(services,'clinical')\"></i>\r\n                  </li>\r\n                </ul>\r\n              </td>\r\n            </ng-container>\r\n          </tr>\r\n        </tbody>\r\n        <!-- clinical  services table  Ends -->\r\n\r\n        <!-- lab  services table  starts -->\r\n        <tbody class=\"scrollContent\" *ngIf=\"labServicesList.length\">\r\n          <tr>\r\n            <td class=\"tbody-tittle lab-row\">{{'OPD.LAB_TESTS_TEXT' | translate }}</td>\r\n          </tr>\r\n          <tr *ngFor=\"let services of labServicesList; index as i\">\r\n            <ng-container>\r\n              <td class=\"serial-num\">\r\n                <p>{{i+1}}</p>\r\n              </td>\r\n              <td class=\"service-list\">\r\n                <p><strong>{{services.serviceType}}:</strong> {{services.serviceName}}</p>\r\n              </td>\r\n              <td class=\"service-units\">\r\n                <p>{{1}}</p>\r\n              </td>\r\n              <td class=\"unit-cost\">\r\n                <i class=\"rupee-icon fas fa-rupee-sign\"></i>\r\n                <p> {{services.serviceAmount}}</p>\r\n              </td>\r\n              <td class=\"discount-amt\">\r\n                <div class=\"discount-inputs d-flex\">\r\n                  <input type=\"number\" placeholder=\"₹\" class=\"rupees-disc\" oninput=\"this.value = Math.abs(this.value)\"\r\n                    [appDisableControl]=\"globalDiscountPercent===0||globalDiscountAmt===0\" [(ngModel)]=\"services.discountAmount\"\r\n                    (ngModelChange)=\"discountPercent(services)\">\r\n                  <input type=\"number\" placeholder=\"%\" class=\"percent-disc\" oninput=\"this.value = Math.abs(this.value)\"\r\n                    [appDisableControl]=\"globalDiscountPercent===0||globalDiscountAmt===0\" [(ngModel)]=\"services.discountpercent\"\r\n                    (ngModelChange)=\"discountAmt(services)\">\r\n                </div>\r\n              </td>\r\n              <td class=\"net-amt\">\r\n                <i class=\"rupee-icon fas fa-rupee-sign \"></i>\r\n                <p> {{(services.totalServiceAmount) | number:'.2'}}</p>\r\n              </td>\r\n              <td class=\"action-items\">\r\n                <ul>\r\n                  <li class=\"delete-ico\">\r\n                    <i class=\"mdi mdi-delete\" (click)=\"deleteSelectedServices(services,'lab')\"></i>\r\n                  </li>\r\n                </ul>\r\n              </td>\r\n            </ng-container>\r\n          </tr>\r\n        </tbody>\r\n        <!-- imaging  services table starts -->\r\n\r\n        <tbody class=\"scrollContent\" *ngIf=\"imagingServicesList.length\">\r\n          <tr>\r\n            <td class=\"tbody-tittle imaging-row\">{{'OPD.IMAGING_TESTS_TEXT' | translate }}</td>\r\n          </tr>\r\n          <tr *ngFor=\"let services of imagingServicesList; index as i\">\r\n            <ng-container>\r\n              <td class=\"serial-num\">\r\n                <p>{{i+1}}</p>\r\n              </td>\r\n              <td class=\"service-list\">\r\n                <p><strong>{{services.serviceType}}:</strong>{{services.serviceName}}</p>\r\n              </td>\r\n              <td class=\"service-units\">\r\n                <p>{{services.quantity}}</p>\r\n              </td>\r\n              <td class=\"unit-cost\">\r\n                <i class=\"rupee-icon fas fa-rupee-sign\"></i>\r\n                <p> {{services.serviceAmount}}</p>\r\n              </td>\r\n              <td class=\"discount-amt\">\r\n                <div class=\"discount-inputs d-flex\">\r\n                  <input type=\"number\" placeholder=\"₹\" class=\"rupees-disc\" oninput=\"this.value = Math.abs(this.value)\"\r\n                    [appDisableControl]=\"globalDiscountPercent===0||globalDiscountAmt===0\" [(ngModel)]=\"services.discountAmount\"\r\n                    (ngModelChange)=\"discountPercent(services)\">\r\n                  <input type=\"number\" placeholder=\"%\" class=\"percent-disc\" oninput=\"this.value = Math.abs(this.value)\"\r\n                    [appDisableControl]=\"globalDiscountPercent===0||globalDiscountAmt===0\" [(ngModel)]=\"services.discountpercent\"\r\n                    (ngModelChange)=\"discountAmt(services)\">\r\n                </div>\r\n              </td>\r\n              <td class=\"net-amt\">\r\n                <i class=\"rupee-icon fas fa-rupee-sign \"></i>\r\n                <p> {{(services.totalServiceAmount) | number:'.2'}}</p>\r\n              </td>\r\n              <td class=\"action-items\">\r\n                <ul>\r\n                  <li>\r\n                    <i class=\"mdi mdi-delete\" (click)=\"deleteSelectedServices(services,'imaging')\"></i>\r\n                  </li>\r\n                </ul>\r\n              </td>\r\n            </ng-container>\r\n          </tr>\r\n        </tbody>\r\n        <!-- imaging  services table ends -->\r\n      </table>\r\n    </div>\r\n    <div class=\"display-amounts col-sm-12 p-l-r-5\">\r\n      <div class=\"dis-remarks\">\r\n        <div class=\"col-sm-12 p-l-r-0 p-t-10\" *ngIf=\"totalInvoiceDiscountAmount > 0\">\r\n          <label for=\"amount\">{{'OPD.DISCOUNT_REMARKS_TEXT' | translate }}\r\n            <span class=\"required-field-star-color\">*</span>\r\n          </label>\r\n          <textarea type=\"text\" name=\"discountRemark\" [(ngModel)]=\"discountRemark\"></textarea>\r\n          <div *ngIf=\"isFormSubmitted \" class=\"has-error popover-style\" role=\"alert\">\r\n            <div *ngIf=\"this.totalInvoiceDiscountAmount&&!this.discountRemark\" class=\"dynamic_popover\">\r\n              * Please enter discount remarks\r\n              <span class=\"doArrow\"></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"total-amount-words p-t-b-10 row m-0\" *ngIf=\"consultations.length||labServicesList.length||imagingServicesList.length\">\r\n          <label class=\"label-num\">{{'OPD.TOTAL_AMOUNT_IN_WORDS_TEXT' | translate }}: </label> &nbsp;\r\n          <p>&nbsp; {{totalAMountInWords}} rupees only</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"payment-details\">\r\n        <div class=\"col-sm-12 p-l-r-0 p-t-10 payment-dtls\">\r\n          <label>{{'OPD.TOTAL_AMOUNT_TEXT' | translate }}: </label>\r\n          <p>\r\n            <i class=\"rupee-icon fas fa-rupee-sign\"></i> {{totalAllServiceAmountWithOutDiscount | number:'.2'}}\r\n          </p>\r\n        </div>\r\n        <div class=\"col-sm-12 p-l-r-0 p-t-10 payment-dtls d-flex\">\r\n          <!-- <div class=\"discount-inputs\"> -->\r\n            <!-- <div class=\"dis-label\"> -->\r\n              <label class=\"p-t-5\">{{'OPD.GLOBAL_DISCOUNT_TEXT' | translate }}:</label>\r\n            <!-- </div> -->\r\n            <!-- <div class=\"dis-inputs\"> -->\r\n              <input type=\"number\" placeholder=\"₹\" class=\"input-left input-height-width\" oninput=\"this.value = Math.abs(this.value)\"\r\n                [(ngModel)]=\"discountAmount\" (ngModelChange)=\"getGlobalDiscountPercentage()\">\r\n              <input type=\"number\" placeholder=\"%\" class=\"input-right input-height-width\" oninput=\"this.value = Math.abs(this.value)\"\r\n                [(ngModel)]=\"discountpercent\" (ngModelChange)=\"getGlobalDiscountAmount()\">\r\n            <!-- </div> -->\r\n          <!-- </div> -->\r\n        </div>\r\n        <div class=\"col-sm-12 p-l-r-0 p-t-10 payment-dtls\">\r\n          <label>{{'OPD.AMOUNT_TEXT' | translate }}: </label>\r\n          <p>\r\n            <i class=\"rupee-icon fas fa-rupee-sign\"></i> {{totalInvoiceAmount | number:'.2'}}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-12 no-padding border-bottom \" *ngIf=\"consultations.length||labServicesList.length||imagingServicesList.length\">\r\n      <div class=\"col-sm-12 no-padding border-bottom border-top form-section-tittle\">\r\n        <h3 class=\"p-l-5\">{{'OPD.PAYMENT_MODE_TEXT' | translate }}</h3>\r\n      </div>\r\n      <div class=\"col-sm-12 no-padding\" *ngIf=\"consultations.length||labServicesList.length||imagingServicesList.length\">\r\n        <table class=\"scroll-table table payment-mode\">\r\n          <thead class=\"fixedHeader\">\r\n            <tr>\r\n              <th class=\"serial-num\">SNO.</th>\r\n              <th class=\"payment-mode\">\r\n                <span for=\"paymentName\">{{'OPD.PAYMENT_MODE_TEXT' | translate }}</span><span class=\"required-field-star-color\">*</span>\r\n              </th>\r\n              <th class=\"bank-name\">\r\n                <span for=\"bankName\">{{'OPD.BANK_TEXT' | translate }}</span><span class=\"required-field-star-color\">*</span>\r\n              </th>\r\n              <th class=\"account-num\">\r\n                <span for=\"accuntNumber\">{{'OPD.ACCOUNT_NUMBER_TEXT' | translate }}</span><span class=\"required-field-star-color\">*</span>\r\n              </th>\r\n              <th class=\"payment-date\">\r\n                <span>{{'OPD.PAYMENT_DATE_TEXT' | translate }}</span><span class=\"required-field-star-color\">*</span>\r\n              </th>\r\n              <th class=\"payment-amt\">\r\n                <span for=\"amount\">{{'OPD.AMOUNT_TEXT' | translate }}</span><span class=\"required-field-star-color\">*</span>\r\n              </th>\r\n              <th class=\"action-items\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n            <tr [formGroup]=\"paymentModesForm\" class=\"payment-sort-row\">\r\n              <th class=\"serial-num\"></th>\r\n              <th class=\"payment-mode\">\r\n                <select class=\"\" name=\"paymentMode\" id=\"paymntMode\" formControlName=\"paymentMode\" (change)=\"onChangePaymentMode('paymentModeChange')\">\r\n                  <option></option>\r\n                  <option [ngValue]=\"mode.attributeCode\" *ngFor=\"let mode of paymentModesList\">{{mode.attributeCode}}</option>\r\n                </select>\r\n              </th>\r\n              <th class=\"bank-name\">\r\n                <input type=\"text\" name=\"bankName\" id=\"bankName\" formControlName=\"issuedBank\" minlength=\"3\" maxlength=\"20\"\r\n                  (ngModelChange)=\"onChangePaymentMode(null)\">\r\n                <div *ngIf=\"paymentModesForm.controls['issuedBank'].invalid && (paymentModesForm.controls['issuedBank'].dirty || paymentModesForm.controls['issuedBank'].touched)\"\r\n                  class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"paymentModesForm.controls['issuedBank'].errors.required\" class=\"dynamic_popover\">\r\n                    Bank name required\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"paymentModesForm.controls['issuedBank'].errors.pattern\" class=\"dynamic_popover\">\r\n                    Enter Valid Bank name\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"paymentModesForm.controls['issuedBank'].errors.minlength\" class=\"dynamic_popover\">\r\n                    Enter valid Bank Name\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"paymentModesForm.controls['issuedBank'].errors.maxlength\" class=\"dynamic_popover\">\r\n                    Enter Valid Bank name\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                </div>\r\n              </th>\r\n              <th class=\"account-num\">\r\n                <input type=\"text\" minLength=\"9\" maxLength=\"18\" name=\"checkNumber\" id=\"chequeNo\" formControlName=\"chequeDdNo\"\r\n                  (ngModelChange)=\"onChangePaymentMode(null)\">\r\n                <div *ngIf=\"paymentModesForm.controls['chequeDdNo'].invalid && (paymentModesForm.controls['chequeDdNo'].dirty || paymentModesForm.controls['chequeDdNo'].touched)\"\r\n                  class=\"has-error popover-style\" role=\"alert\">\r\n                  <div *ngIf=\"paymentModesForm.controls['chequeDdNo'].errors.required\" class=\"dynamic_popover\">\r\n                    Account number required\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"paymentModesForm.controls['chequeDdNo'].errors.pattern\" class=\"dynamic_popover\">\r\n                    Enter Valid Number\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"paymentModesForm.controls['chequeDdNo'].errors.minlength\" class=\"dynamic_popover\">\r\n                    Minimum 9 numbers\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                  <div *ngIf=\"paymentModesForm.controls['chequeDdNo'].errors.maxlength\" class=\"dynamic_popover\">\r\n                    Maximum 18 numbers\r\n                    <span class=\"doArrow\"></span>\r\n                  </div>\r\n                </div>\r\n              </th>\r\n              <th class=\"payment-date\">\r\n                <div class=\"dateTime-picker-p\">\r\n                  <p class=\"input-group\">\r\n                    <input type=\"text\" [matDatepicker]=\"paymentDt\" (ngModelChange)=\"onChangePaymentMode(null)\"\r\n                      formControlName=\"paymentDt\" class=\"input-width\">\r\n                    <mat-datepicker #paymentDt></mat-datepicker>\r\n                    <span class=\"input-group-btn w-10\">\r\n                      <button class=\"btn btn-default btn-calender calender-button-height\" type=\"button\" (click)=\"datePickerToggler(paymentDt)\">\r\n                        <i class=\"fa fa-calendar\"></i>\r\n                      </button>\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </th>\r\n              <th class=\"payment-amt\">\r\n                <input type=\"number\" name=\"amount\" id=\"paidAmountByMode\" oninput=\"this.value = Math.abs(this.value)\"\r\n                  formControlName=\"paidAmountByMode\" (ngModelChange)=\"OnKeyUpPayingAmount($event)\" class=\"\" />\r\n              </th>\r\n              <th class=\"action-items\"><button type=\"button\" (click)=\"addPaymentModes()\" [disabled]=\"!paymentModesForm.valid || disabledButn\"\r\n                  class=\"add-btn\">\r\n                  <i class=\"fas fa-plus\"></i>\r\n                </button></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"scrollContent\">\r\n            <ng-container *ngIf=\"currentPaymentModesList.length\">\r\n              <tr *ngFor=\"let modes of currentPaymentModesList; index as i\">\r\n                <td class=\"serial-num\">{{i+1}}</td>\r\n                <td class=\"payment-mode\">{{modes.paymentMode}}</td>\r\n                <td class=\"bank-name\">{{modes.issuedBank}}</td>\r\n                <td class=\"account-num\">{{modes.chequeDdNo}}</td>\r\n                <td class=\"payment-date\">{{modes.displayDt}}</td>\r\n                <td class=\"payment-amt\"><i class=\"rupee-icon fas fa-rupee-sign \"></i> {{modes.paidAmountByMode}}</td>\r\n                <td class=\"action-items\">\r\n                  <ul>\r\n                    <li (click)=\"removePaymentMode(i,modes)\">\r\n                      <i class=\"mdi mdi-delete\"></i>\r\n                    </li>\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n            </ng-container>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"col-sm-12 no-padding\" *ngIf=\"consultations.length||labServicesList.length||imagingServicesList.length\">\r\n        <div class=\"display-balance-amounts p-b-10 d-flex\" *ngIf=\"currentPaymentModesList.length\">\r\n          <label>{{'OPD.BALANCE_AMOUNT_TEXT' | translate }}:&nbsp;</label>\r\n          <p><i class=\"rupee-icon fas fa-rupee-sign\"></i> {{totalDueAmount | number:'.2'}}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-12 no-padding form-section-tittle mt-4 border-top\">\r\n        <div class=\"col-sm-4 p-l-r-5 p-b-5 m-t-5\">\r\n          <label class=\"p-l-5\">Print Type</label>\r\n          <div class=\"col-md-12 zero-padding radio-element-group\">\r\n            <label>\r\n              <input id=\"summarized\" type=\"radio\" [value]=\"true\" [(ngModel)]=\"summerized\" name=\"summarized\" checked />\r\n              <i></i>\r\n              <span>Summarized</span>\r\n            </label>\r\n            <label>\r\n              <input id=\"detailed\" type=\"radio\" [value]=\"false\" [(ngModel)]=\"summerized\" name=\"summarized\">\r\n              <i></i>\r\n              <span>Detailed</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ng-template #noData>\r\n        <div class=\"col-sm-12\">\r\n          <div class=\"grid-msg-text-branch margin-top-40\" role=\"alert\"></div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n    <!-- <p>Form value: {{ paymentModesForm.value | json }}</p> -->\r\n  </div>\r\n  <div class=\"col-sm-10 p-l-r-0 m-t-b-15 form-button-group\" *ngIf=\"consultations.length||labServicesList.length||imagingServicesList.length\">\r\n    <ul>\r\n      <li><button [disabled]=\"isDisable\" id=\"request_Invoice\" type=\"submit\" class=\"btn-app btn-save\" (click)=\"requestInvoice()\">\r\n          <i class=\"fas fa-print m-r-5\"></i>{{'OPD.PAY_PRINT_TEXT' | translate }}</button></li>\r\n      <li>\r\n        <button [disabled]=\"isDisable\" id=\"cancel_Form\" type=\"button\" class=\"btn-app btn-delete\" (click)=\"cancelForm()\">\r\n          <i class=\"fa fa-times fa-btn-icon margin-right-5\" aria-hidden=\"true\"></i> {{'COMMONLABELS.CANCEL' | translate\r\n          }}</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BillingserviceService } from '@app/modules/opd/components/billing/billingservice.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatDatepicker, MatDialog } from '@angular/material';\r\nimport {\r\n  OpdApiService,\r\n  CLONEDEEP,\r\n  UserService,\r\n  UtilService,\r\n  PrintService\r\n} from '@core/services';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport { CommentsDialogComponent } from '@shared/components/comments-dialog/comments-dialog.component';\r\nimport { PatientdataService } from '@app/modules/opd/components/allpatients/patientdata.service';\r\nimport { Router } from '@angular/router';\r\nimport { OpdService } from './../../../services/opd.service';\r\nimport { NumberToWordsPipe } from '@shared/pipes/numberTowords';\r\nimport { ConfirmationDialogComponent } from '@shared/components/confirmation-dialog/confirmation-dialog.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { ReportsService } from '@core/services/reports-api.service';\r\n\r\n// const filter = require('lodash/filter');\r\n// const each = require('lodash/each');\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.scss']\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n  public imagingServicesList: any[] = [];\r\n  private imagingTest: any[] = [];\r\n  private imagingPanels: any[] = [];\r\n  private imagingPackages: any[] = [];\r\n  public labServicesList: any[] = [];\r\n  private labTests: any[] = [];\r\n  private labPanels: any[] = [];\r\n  private labPackages: any[] = [];\r\n  public consultations: any[] = [];\r\n  private amountList: any[];\r\n  private duplicateAllservicesList: any;\r\n  public discountpercent: any;\r\n  public discountAmount;\r\n  public globalDiscountPercent = 0;\r\n  public globalDiscountAmt = 0;\r\n  public isFormSubmitted = false;\r\n  public apiSubscription: Subscription;\r\n  disabledButn = false;\r\n  isDisable = false;\r\n  summerized = true;\r\n  storeValue = 0;\r\n  formGroup: FormGroup;\r\n  paymentModesForm: FormGroup;\r\n  paymentModesList = [];\r\n  currentPaymentModesList = [];\r\n  totalInvoiceClinicalAmount: any;\r\n  totalAllServiceAmountWithOutDiscount = 0;\r\n  totalInvoiceLabAmount: any;\r\n  totalInvoiceImagingAmount: any;\r\n  totalInvoiceAmount: any;\r\n  totalInvoiceDiscountAmount = 0;\r\n  totalInvoicetotalAmount = 0;\r\n  discountRemark: string;\r\n  totalDueAmount;\r\n  patientDetails: any;\r\n  isValidDiscount = true;\r\n  totalInvoiceServiceAmount = 0;\r\n  totalAMountInWords: string;\r\n  totalCgstTaxAmount = 0;\r\n  totalSgstTaxAmount = 0;\r\n  globalDiscAmt;\r\n  globalDiscPercent;\r\n  duplicateTotalInvoiceAmt;\r\n  constructor(\r\n    @Inject(CLONEDEEP) private cloneDeep,\r\n    private billingserviceService: BillingserviceService,\r\n    private formBuilder: FormBuilder,\r\n    private opdService: OpdApiService,\r\n    private OpdServicePrint: OpdService,\r\n    private datePipe: DatePipe,\r\n    private toastr: ToastrService,\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private patientdataService: PatientdataService,\r\n    private utilService: UtilService,\r\n    private printService: PrintService,\r\n    private numberTowords: NumberToWordsPipe,\r\n    private  reportsService: ReportsService,\r\n    private userService: UserService\r\n  ) {\r\n    this.userSession = this.userService.getUser();\r\n  }\r\n  private userSession: UserSession;\r\n\r\n  ngOnInit() {\r\n    this.paymentModesInitForm();\r\n    // this.initForm();\r\n    this.fetchPaymentModes();\r\n    this.dataFromBillingservice();\r\n    this.duplicateTotalInvoiceAmt = this.totalInvoiceAmount;\r\n  }\r\n  datePickerToggler(datePicker: MatDatepicker<Date>) {\r\n    datePicker[datePicker.opened ? 'close' : 'open']();\r\n  }\r\n  paymentModesInitForm() {\r\n    this.paymentModesForm = this.formBuilder.group({\r\n      paymentMode: [null, [Validators.required]],\r\n      issuedBank: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(20),\r\n          Validators.pattern('^[a-zA-Z ]*$')\r\n        ]\r\n      ],\r\n      chequeDdNo: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(9),\r\n          Validators.maxLength(18),\r\n          Validators.pattern('^[0-9]*$')\r\n        ]\r\n      ],\r\n      paymentDt: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n      paidAmountByMode: [null, [Validators.required]],\r\n      alternateContactNo: null,\r\n      cardPayment: null,\r\n      paidAmtByCard: null,\r\n      onlinePayment: null,\r\n      paidAmtByOnline: null\r\n    });\r\n  }\r\n\r\n  fetchPaymentModes() {\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      masterType: 'PAYMENT_MODE',\r\n      authenticatedUserId: this.userSession.regId\r\n    };\r\n\r\n    this.opdService.fetchCommonValues(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.paymentModesList = response.data;\r\n          this.paymentModesList.map(val => {\r\n            if (val.attributeCode === 'CHEQUE' || val.attributeCode === 'DD') {\r\n              val.modeValidation = true;\r\n            }\r\n          });\r\n        } else if (response.response === 'E400') {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  addPaymentModes() {\r\n    this.paymentModesForm.get('issuedBank').clearValidators();\r\n    this.paymentModesForm.get('issuedBank').updateValueAndValidity();\r\n    this.paymentModesForm.get('chequeDdNo').clearValidators();\r\n    this.paymentModesForm.get('chequeDdNo').updateValueAndValidity();\r\n    const mode = { ...this.paymentModesForm.value };\r\n    this.paymentModesList = this.paymentModesList.filter(function(value) {\r\n      return value.attributeCode !== mode.paymentMode;\r\n    });\r\n    this.currentPaymentModesList.push({\r\n      ...this.paymentModesForm.value,\r\n      displayDt: this.datePipe.transform(\r\n        this.paymentModesForm.value.paymentDt,\r\n        'dd-MM-yyyy'\r\n      ),\r\n      paymentDt: this.datePipe.transform(\r\n        this.paymentModesForm.value.paymentDt,\r\n        'yyyy-MM-dd'\r\n      )\r\n    });\r\n    let decreaseAmt = 0;\r\n    if (this.currentPaymentModesList.length > 0) {\r\n      for (let i = 0; i < this.currentPaymentModesList.length; i++) {\r\n        decreaseAmt +=\r\n          Number(this.currentPaymentModesList[i].paidAmountByMode) || 0;\r\n      }\r\n      if (this.totalInvoiceAmount < decreaseAmt) {\r\n        this.toastr.clear();\r\n        this.toastr.warning(\r\n          'Failure!',\r\n          'Given amount is more than required payable amount'\r\n        );\r\n        return false;\r\n      }\r\n    }\r\n    this.totalDueAmount = Math.round(this.totalInvoiceAmount - decreaseAmt);\r\n    this.paymentModesForm.reset();\r\n  }\r\n\r\n  removePaymentMode = function(index, mode) {\r\n    mode.attributeCode = mode.paymentMode;\r\n    this.paymentModesList.push(mode);\r\n    this.currentPaymentModesList.splice(index, 1);\r\n    let decreaseAmt = 0;\r\n    if (this.currentPaymentModesList.length > 0) {\r\n      for (let i = 0; i < this.currentPaymentModesList.length; i++) {\r\n        decreaseAmt += Number(this.currentPaymentModesList[i].paidAmountByMode);\r\n      }\r\n    }\r\n    this.totalDueAmount = Math.round(this.totalInvoiceAmount - decreaseAmt);\r\n  };\r\n  validatingEnteredAmount(event) {\r\n    if (event < this.totalDueAmount || event === this.totalDueAmount) {\r\n      this.disabledButn = false;\r\n    }\r\n    if (event === 0) {\r\n      this.disabledButn = true;\r\n      return false;\r\n    }\r\n    if (\r\n      !this.isValidDiscount &&\r\n      (event < this.totalDueAmount || event > this.totalDueAmount)\r\n    ) {\r\n      this.disabledButn = true;\r\n      return false;\r\n    }\r\n    if (event > this.totalDueAmount) {\r\n      this.toastr.clear();\r\n      this.toastr.warning(\r\n        'Failure!',\r\n        'Given amount is more than required payable amount'\r\n      );\r\n      this.disabledButn = true;\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  OnKeyUpPayingAmount(event) {\r\n    const paidAmountByMode = this.paymentModesForm.get('paidAmountByMode')\r\n      .value;\r\n\r\n    if (\r\n      this.paymentModesForm.get('paymentMode').value === 'DD' ||\r\n      this.paymentModesForm.get('paymentMode').value === 'CHEQUE'\r\n    ) {\r\n      if (\r\n        this.paymentModesForm.get('issuedBank').value &&\r\n        this.paymentModesForm.get('chequeDdNo').value &&\r\n        this.paymentModesForm.get('paymentDt').value &&\r\n        this.paymentModesForm.get('paidAmountByMode').value &&\r\n        event !== 0\r\n      ) {\r\n        if (this.validatingEnteredAmount(event)) {\r\n          this.disabledButn = false;\r\n          return true;\r\n        }\r\n      }\r\n      this.disabledButn = true;\r\n      return false;\r\n    }\r\n    this.validatingEnteredAmount(event);\r\n    let decreaseAmt = 0;\r\n    if (this.currentPaymentModesList.length > 0) {\r\n      for (let i = 0; i < this.currentPaymentModesList.length; i++) {\r\n        decreaseAmt +=\r\n          Number(this.currentPaymentModesList[i].paidAmountByMode) || 0;\r\n      }\r\n      if (this.totalInvoiceAmount < decreaseAmt) {\r\n        this.toastr.clear();\r\n        this.toastr.warning(\r\n          'Failure!',\r\n          'Given amount is more than required payable amount'\r\n        );\r\n        this.disabledButn = true;\r\n      }\r\n    }\r\n  }\r\n  onChangePaymentMode(type) {\r\n    if (type === 'paymentModeChange') {\r\n      // Here we are removing already entered dd or check and bank name\r\n    this.paymentModesForm.patchValue({issuedBank: null}) ;\r\n    this.paymentModesForm.patchValue({chequeDdNo: null}) ;\r\n    }\r\n    if (!this.isValidDiscount) {\r\n      this.toastr.clear();\r\n      this.toastr.warning('Warning', 'Please give Valid discount');\r\n      return false;\r\n    }\r\n    const modeVal = this.paymentModesForm.get('paymentMode').value;\r\n    this.paymentModesForm.patchValue({ paidAmountByMode: this.totalDueAmount });\r\n    if (modeVal === 'DD' || modeVal === 'CHEQUE') {\r\n      this.paymentModesForm.get('issuedBank').enable();\r\n      this.paymentModesForm.get('chequeDdNo').enable();\r\n      this.paymentModesForm.get('paymentDt').enable();\r\n      this.paymentModesForm.controls['issuedBank'].setValidators([Validators.required, Validators.minLength(3),\r\n      Validators.maxLength(20),\r\n      Validators.pattern('^[a-zA-Z ]*$')]);\r\n      this.paymentModesForm.controls['chequeDdNo'].setValidators([Validators.required, Validators.minLength(9),\r\n        Validators.maxLength(18),\r\n        Validators.pattern('^[0-9]*$')]);\r\n      this.paymentModesForm.get('issuedBank').updateValueAndValidity();\r\n      this.paymentModesForm.get('chequeDdNo').updateValueAndValidity();\r\n      this.paymentModesForm.get('paymentDt').updateValueAndValidity();\r\n      this.disabledButn = true;\r\n      if (\r\n        this.paymentModesForm.get('paymentMode').value === 'DD' ||\r\n        this.paymentModesForm.get('paymentMode').value === 'CHEQUE'\r\n      ) {\r\n        if (\r\n          this.paymentModesForm.get('issuedBank').value &&\r\n          this.paymentModesForm.get('chequeDdNo').value &&\r\n          this.paymentModesForm.get('paymentDt').value &&\r\n          this.paymentModesForm.get('paidAmountByMode').value\r\n        ) {\r\n          this.disabledButn = false;\r\n          return true;\r\n        }\r\n        this.disabledButn = true;\r\n        return false;\r\n      }\r\n    } else {\r\n      // this.disabledButn = true;\r\n      this.paymentModesForm.get('issuedBank').disable();\r\n      this.paymentModesForm.get('chequeDdNo').disable();\r\n      this.paymentModesForm.get('paymentDt').disable();\r\n      this.paymentModesForm.get('issuedBank').clearValidators();\r\n      this.paymentModesForm.get('chequeDdNo').clearValidators();\r\n      this.paymentModesForm.get('paymentDt').clearValidators();\r\n    }\r\n  }\r\n\r\n  getGlobalDiscountPercentage() {\r\n    this.duplicateAllservicesList = [];\r\n    this.duplicateAllservicesList = this.consultations.concat(\r\n      this.labServicesList,\r\n      this.imagingServicesList\r\n    );\r\n    if (this.discountAmount > this.totalAllServiceAmountWithOutDiscount) {\r\n      this.toastr.clear();\r\n      this.toastr.warning(\r\n        'Failure!',\r\n        'Discount Amount should not be greater than Total Amount'\r\n      );\r\n      this.isValidDiscount = false;\r\n      return false;\r\n    }\r\n    this.paymentModesForm.reset();\r\n    this.isValidDiscount = true;\r\n    this.discountpercent =\r\n      (this.discountAmount / this.totalAllServiceAmountWithOutDiscount) * 100;\r\n    this.discountpercent = this.discountpercent.toFixed(2) / 1;\r\n    this.duplicateAllservicesList.forEach(element => {\r\n      element.discountAmount =\r\n        (this.discountpercent * (element.serviceAmount * element.quantity)) /\r\n        100;\r\n      element.discountAmount = element.discountAmount.toFixed(1) / 1;\r\n      // element.discountAmount = Math.round(element.discountAmount);\r\n      element.discountAmount = element.discountAmount;\r\n      element.discountpercent = this.discountpercent;\r\n      element.totalServiceAmount =\r\n        element.quantity * element.serviceAmount - element.discountAmount;\r\n      element.totalAmt = element.totalServiceAmount;\r\n      element.totalServiceAmt = element.quantity * element.serviceAmount;\r\n      element.totalServiceAmt = element.totalServiceAmt.toFixed(2) / 1;\r\n      element.totalServiceAmt = Math.round(element.totalServiceAmt);\r\n      element.totalServiceAmount = element.totalServiceAmount.toFixed(2) / 1;\r\n      element.totalServiceAmount = Math.round(element.totalServiceAmount);\r\n\r\n      // this two values are used for disabling the service lecl discount after global discount given\r\n      this.globalDiscountPercent = this.discountpercent;\r\n      this.globalDiscountAmt = this.discountAmount;\r\n      this.calculateTaxAmt(element);\r\n    });\r\n    this.calculateTotalInvoiceAmt();\r\n  }\r\n  getGlobalDiscountAmount() {\r\n    this.discountAmount = 0;\r\n    this.duplicateAllservicesList = [];\r\n    this.duplicateAllservicesList = this.consultations.concat(\r\n      this.labServicesList,\r\n      this.imagingServicesList\r\n    );\r\n    if (this.discountpercent > 100) {\r\n      this.toastr.clear();\r\n      this.toastr.warning(\r\n        'Failure!',\r\n        'Discount percent  should not be greater than 100%'\r\n      );\r\n      this.isValidDiscount = false;\r\n      return false;\r\n    }\r\n    this.paymentModesForm.reset();\r\n    this.isValidDiscount = true;\r\n    this.discountAmount =\r\n      (this.discountpercent * this.totalAllServiceAmountWithOutDiscount) / 100;\r\n    this.discountAmount = this.discountAmount.toFixed(1) / 1;\r\n    this.duplicateAllservicesList.forEach(element => {\r\n      element.discountAmount =\r\n        (this.discountpercent * element.serviceAmount * element.quantity) / 100;\r\n      element.discountAmount = element.discountAmount.toFixed(1) / 1;\r\n      element.discountpercent = this.discountpercent;\r\n      element.totalServiceAmount =\r\n        element.quantity * element.serviceAmount - element.discountAmount;\r\n      element.totalServiceAmount = element.totalServiceAmount.toFixed(2) / 1;\r\n      element.totalServiceAmount = Math.round(element.totalServiceAmount);\r\n      element.totalAmt = element.totalServiceAmount;\r\n      element.totalServiceAmt = element.quantity * element.serviceAmount;\r\n      element.totalServiceAmt = element.totalServiceAmt.toFixed(2) / 1;\r\n      element.totalServiceAmt = Math.round(element.totalServiceAmt);\r\n      // this two values are used for disabling the service levell discount after global discount given\r\n      this.globalDiscountPercent = this.discountpercent;\r\n      this.globalDiscountAmt = this.discountAmount;\r\n      this.calculateTaxAmt(element);\r\n    });\r\n    this.calculateTotalInvoiceAmt();\r\n  }\r\n  calculateTaxAmt(val) {\r\n    // calculating tax amount\r\n    val.taxAmt =\r\n      (val.totalServiceAmount ? val.totalServiceAmount : 0) *\r\n      ((val.taxPercentage ? val.taxPercentage : 0) / 100);\r\n    val.taxAmt = val.taxAmt.toFixed(3);\r\n    val.cgstTaxAmt =\r\n      val.taxAmt * ((val.cgstTaxPercentage ? val.cgstTaxPercentage : 0) / 100);\r\n    val.sgstTaxAmt =\r\n      val.taxAmt * ((val.sgstTaxPercentage ? val.sgstTaxPercentage : 0) / 100);\r\n    val.cgstTaxAmt = val.cgstTaxAmt.toFixed(3) / 1;\r\n    val.sgstTaxAmt = val.sgstTaxAmt.toFixed(3) / 1;\r\n  }\r\n  calculateTotalServiceAmt(val) {\r\n    val.totalServiceAmount =\r\n      val.serviceAmount * val.quantity - val.discountAmount;\r\n    val.totalServiceAmount = val.totalServiceAmount.toFixed(2) / 1;\r\n    val.totalServiceAmount = Math.round(val.totalServiceAmount);\r\n    val.totalAmt = val.totalServiceAmount;\r\n    val.totalServiceAmt = val.quantity * val.serviceAmount;\r\n    val.totalServiceAmt = val.totalServiceAmt.toFixed(2) / 1;\r\n    val.totalServiceAmt = Math.round(val.totalServiceAmt);\r\n    this.calculateTaxAmt(val);\r\n    this.calculateTotalInvoiceAmt();\r\n  }\r\n  calculateTotalInvoiceAmt() {\r\n    /**\r\n     * calculating clinical total invoice amount\r\n     */\r\n    let totalAllServiceAmountWithOutDiscount = 0;\r\n    this.totalAllServiceAmountWithOutDiscount = 0;\r\n    let totalAmount = 0;\r\n    let clinicalDiscountAmount = 0;\r\n    let labDiscountAmount = 0;\r\n    let imagingDiscountAmount = 0;\r\n    let clinicalCgstTaxAmount = 0;\r\n    let labCgstTaxAmount = 0;\r\n    let imagingCgstTaxAmount = 0;\r\n    let clinicalSgstTaxAmount = 0;\r\n    let labSgstTaxAmount = 0;\r\n    let imagingSgstTaxAmount = 0;\r\n    this.consultations.forEach(element => {\r\n      totalAllServiceAmountWithOutDiscount +=\r\n        element.quantity * (element.serviceAmount || 0);\r\n      totalAmount +=\r\n        element.quantity * element.serviceAmount - element.discountAmount ||\r\n        0 ||\r\n        0;\r\n      clinicalDiscountAmount += element.discountAmount;\r\n      clinicalCgstTaxAmount += element.cgstTaxAmt;\r\n      clinicalSgstTaxAmount += element.sgstTaxAmt;\r\n    });\r\n    this.totalInvoiceClinicalAmount = totalAmount;\r\n    /**\r\n     * calculating lab total invoice amount\r\n     */\r\n    totalAmount = 0;\r\n    this.labServicesList.forEach(element => {\r\n      totalAllServiceAmountWithOutDiscount +=\r\n        element.quantity * (element.serviceAmount || 0);\r\n\r\n      totalAmount =\r\n        totalAmount + (element.serviceAmount - element.discountAmount || 0) ||\r\n        0;\r\n      labDiscountAmount += element.discountAmount;\r\n      labCgstTaxAmount += element.cgstTaxAmt;\r\n      labSgstTaxAmount += element.sgstTaxAmt;\r\n    });\r\n    this.totalInvoiceLabAmount = totalAmount;\r\n\r\n    /**\r\n     * calculating imaging total invoice amount\r\n     */\r\n    totalAmount = 0;\r\n    this.imagingServicesList.forEach(element => {\r\n      totalAllServiceAmountWithOutDiscount +=\r\n        element.quantity * (element.serviceAmount || 0);\r\n      totalAmount =\r\n        totalAmount + (element.serviceAmount - element.discountAmount || 0) ||\r\n        0;\r\n      imagingDiscountAmount += element.discountAmount;\r\n      imagingCgstTaxAmount += element.cgstTaxAmt;\r\n      imagingSgstTaxAmount += element.sgstTaxAmt;\r\n    });\r\n    this.totalInvoiceImagingAmount = totalAmount;\r\n    this.totalAllServiceAmountWithOutDiscount = Math.round(\r\n      totalAllServiceAmountWithOutDiscount\r\n    );\r\n    this.totalCgstTaxAmount =\r\n      clinicalCgstTaxAmount + labCgstTaxAmount + imagingCgstTaxAmount;\r\n    this.totalSgstTaxAmount =\r\n      clinicalSgstTaxAmount + labSgstTaxAmount + imagingSgstTaxAmount;\r\n    this.totalInvoiceAmount =\r\n      this.totalInvoiceClinicalAmount +\r\n      this.totalInvoiceLabAmount +\r\n      this.totalInvoiceImagingAmount;\r\n    this.totalInvoiceAmount =\r\n      this.totalInvoiceAmount +\r\n      (this.totalCgstTaxAmount + this.totalSgstTaxAmount);\r\n    this.totalInvoiceAmount = Math.round(this.totalInvoiceAmount);\r\n    this.totalAMountInWords = this.numberTowords.transform(\r\n      this.totalInvoiceAmount\r\n    );\r\n    this.totalInvoiceDiscountAmount =\r\n      clinicalDiscountAmount + labDiscountAmount + imagingDiscountAmount;\r\n    this.totalInvoiceDiscountAmount = Math.round(\r\n      this.totalInvoiceDiscountAmount\r\n    );\r\n    this.totalCgstTaxAmount =\r\n      clinicalCgstTaxAmount + labCgstTaxAmount + imagingCgstTaxAmount;\r\n    this.totalSgstTaxAmount =\r\n      clinicalSgstTaxAmount + labSgstTaxAmount + imagingSgstTaxAmount;\r\n    this.totalDueAmount = this.totalInvoiceAmount;\r\n  }\r\n  dataFromBillingservice() {\r\n    this.consultations = this.billingserviceService.getConsultations();\r\n    /**\r\n     * calculating clinical servicesamount\r\n     */\r\n    this.consultations.forEach(val => {\r\n      val.discountAmount = 0;\r\n      val.discountPercent = 0;\r\n      this.calculateTotalServiceAmt(val);\r\n    });\r\n    /* **\r\n     prefixing labtests as Tests\r\n    */\r\n    this.labTests = this.billingserviceService.getLabTests().map(val => {\r\n      val = this.cloneDeep(val);\r\n      val.serviceType = 'Tests ';\r\n      return val;\r\n    });\r\n    /* **\r\n     prefixing labpanels as Panels\r\n    */\r\n    this.labPanels = this.billingserviceService.getLabPanels().map(val => {\r\n      val = this.cloneDeep(val);\r\n      val.serviceType = 'Panels ';\r\n      return val;\r\n    });\r\n    /* **\r\n     prefixing labpackages  as Packages\r\n    */\r\n    this.labPackages = this.billingserviceService.getLabPackages().map(val => {\r\n      val = this.cloneDeep(val);\r\n      val.serviceType = 'Packages ';\r\n      return val;\r\n    });\r\n    this.labServicesList = this.labTests.concat(\r\n      this.labPanels,\r\n      this.labPackages\r\n    );\r\n    /**\r\n     * calculating lab servicesamount\r\n     */\r\n    this.labServicesList.forEach(val => {\r\n      val.discountAmount = 0;\r\n      val.discountPercent = 0;\r\n      this.calculateTotalServiceAmt(val);\r\n    });\r\n\r\n    /* **\r\n     prefixing imaging as Tests\r\n    */\r\n    this.imagingTest = this.billingserviceService.getImageTests().map(val => {\r\n      val = this.cloneDeep(val);\r\n      val.serviceType = 'Tests ';\r\n      return val;\r\n    });\r\n    /* **\r\n   prefixing imaging as Panels\r\n  */\r\n    this.imagingPanels = this.billingserviceService\r\n      .getImagePanels()\r\n      .map(val => {\r\n        val = this.cloneDeep(val);\r\n        val.serviceType = 'Panels ';\r\n        return val;\r\n      });\r\n    /* **\r\n   prefixing imaging  as Packages\r\n  */\r\n    this.imagingPackages = this.billingserviceService\r\n      .getImagePackages()\r\n      .map(val => {\r\n        val = this.cloneDeep(val);\r\n        val.serviceType = 'Packages ';\r\n        return val;\r\n      });\r\n    // this.imagingPackages = this.billingserviceService.getImagePackages();\r\n    this.imagingServicesList = this.imagingTest.concat(\r\n      this.imagingPanels,\r\n      this.imagingPackages\r\n    );\r\n    /**\r\n     * calculating imaging servicesamount\r\n     */\r\n    this.imagingServicesList.forEach(val => {\r\n      val.discountAmount = 0;\r\n      val.discountPercent = 0;\r\n      this.calculateTotalServiceAmt(val);\r\n    });\r\n  }\r\n\r\n  requestInvoice() {\r\n    this.isFormSubmitted = true;\r\n    if (this.discountAmount) {\r\n      if (!this.discountRemark) {\r\n        return false;\r\n      }\r\n      // return true;\r\n    }\r\n    if (this.totalDueAmount > 0) {\r\n      const dialogRef = this.dialog.open(CommentsDialogComponent, {\r\n        data: {\r\n          title: 'Remaining Due is ' + this.totalDueAmount,\r\n          data: 'Reason'\r\n        },\r\n        disableClose: true\r\n      });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          this.proceedToBilling(result);\r\n        }\r\n      });\r\n    } else {\r\n      this.proceedToBilling();\r\n    }\r\n  }\r\n  proceedToBilling(dueRemarks?: any) {\r\n    this.unSubscribingSubscriptionObj();\r\n    this.isDisable = true;\r\n    this.amountList = this.consultations.concat(\r\n      this.labServicesList,\r\n      this.imagingServicesList\r\n    );\r\n    // let itemOrder = 0;\r\n    // this.amountList.forEach(element => {\r\n    //   itemOrder = itemOrder + 1;\r\n    //   this.amountList['invoiceItemNo'] = itemOrder;\r\n    // });\r\n    let paidAmt = 0;\r\n    if (this.currentPaymentModesList.length > 0) {\r\n      this.currentPaymentModesList.forEach(item => {\r\n        paidAmt += Number(item.paidAmountByMode);\r\n      });\r\n    }\r\n    let labOrderObj = null;\r\n    if (\r\n      this.labPackages.length > 0 ||\r\n      this.labPanels.length > 0 ||\r\n      this.labTests.length > 0\r\n    ) {\r\n      labOrderObj = {};\r\n      labOrderObj['packageList'] = this.labPackages;\r\n      labOrderObj['panelList'] = this.labPanels;\r\n      labOrderObj['testList'] = this.labTests;\r\n      labOrderObj['orderType'] = 'L';\r\n      labOrderObj['emrTests'] = null;\r\n      labOrderObj['emrPanels'] = null;\r\n      labOrderObj['emrSubPanels'] = null;\r\n    }\r\n\r\n    let imagingOrderObj = null;\r\n    if (\r\n      this.imagingPackages.length > 0 ||\r\n      this.imagingPanels.length > 0 ||\r\n      this.imagingTest.length > 0\r\n    ) {\r\n      imagingOrderObj = {};\r\n      imagingOrderObj['packageList'] = this.imagingPackages;\r\n      imagingOrderObj['panelList'] = this.imagingPanels;\r\n      imagingOrderObj['testList'] = this.imagingTest;\r\n      imagingOrderObj['orderType'] = 'I';\r\n      imagingOrderObj['emrTests'] = null;\r\n      imagingOrderObj['emrPanels'] = null;\r\n      imagingOrderObj['emrSubPanels'] = null;\r\n    }\r\n\r\n    const payload = {\r\n      clinicalServicesList: this.consultations,\r\n      paymentModeList: this.currentPaymentModesList,\r\n      billServicesList: this.amountList,\r\n      imagingServicesList: this.imagingServicesList,\r\n      createdUsrId: this.userSession.regId,\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      paidAmt: paidAmt,\r\n      invoiceType: 'REG',\r\n      discountRemarks: this.discountRemark,\r\n      visitDt: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n      invoiceDt: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),\r\n      invoiceFrom: 'REG',\r\n      totalInvoiceAmt: this.totalInvoiceAmount,\r\n      totalInvoiceDiscountAmt: this.totalInvoiceDiscountAmount,\r\n      totalServiceAmt: this.totalAllServiceAmountWithOutDiscount,\r\n      totalInvoiceServiceAmt: this.totalAllServiceAmountWithOutDiscount,\r\n      totalInvoicetotalAmount: this.totalInvoicetotalAmount,\r\n      totalInvoiceDueAmt: this.totalDueAmount,\r\n      totalCgstTaxAmt: this.totalCgstTaxAmount,\r\n      totalSgstTaxAmt: this.totalSgstTaxAmount,\r\n      totalTaxAmt: this.totalCgstTaxAmount + this.totalSgstTaxAmount,\r\n      invoiceDueRemarks: dueRemarks && dueRemarks,\r\n      honorificNm: ''\r\n    };\r\n    const clinicalFormData = this.billingserviceService.getconsultationFormData();\r\n    // this object construction is for imaging emr tests and panles for the patient ;\r\n    const labFormData = this.billingserviceService.getLabFormData();\r\n    if (\r\n      labFormData &&\r\n      (labFormData.emrLabTests ||\r\n        labFormData.emrLabpanels ||\r\n        labFormData.emrSubPanels)\r\n    ) {\r\n      labOrderObj.emrTests =\r\n        labFormData.emrLabTests && labFormData.emrLabTests.length\r\n          ? labFormData.emrLabTests\r\n          : [];\r\n      labOrderObj.emrPanels =\r\n        labFormData.emrLabpanels && labFormData.emrLabpanels.length\r\n          ? labFormData.emrLabpanels\r\n          : [];\r\n      labOrderObj.emrSubPanels =\r\n        labFormData.emrSubPanels && labFormData.emrSubPanels.length\r\n          ? labFormData.emrSubPanels\r\n          : [];\r\n    }\r\n    // this object construction is for lab emr tests and panles for the patient ;\r\n    const imagingFormData = this.billingserviceService.getImageFormdata();\r\n    if (\r\n      imagingFormData &&\r\n      (imagingFormData.emrImagingTests ||\r\n        imagingFormData.emrImagingpanels ||\r\n        imagingFormData.emrSubPanels)\r\n    ) {\r\n      imagingOrderObj.emrTests =\r\n        imagingFormData.emrImagingTests &&\r\n        imagingFormData.emrImagingTests.length\r\n          ? imagingFormData.emrImagingTests\r\n          : [];\r\n      imagingOrderObj.emrPanels =\r\n        imagingFormData.emrImagingpanels &&\r\n        imagingFormData.emrImagingpanels.length\r\n          ? imagingFormData.emrImagingpanels\r\n          : [];\r\n      imagingOrderObj.emrSubPanels =\r\n        imagingFormData.emrSubPanels && imagingFormData.emrSubPanels.length\r\n          ? imagingFormData.emrSubPanels\r\n          : [];\r\n    }\r\n    if (labFormData && labFormData.patientVisitId) {\r\n      payload['patientVisitId'] = labFormData.patientVisitId;\r\n    }\r\n    if (imagingFormData && imagingFormData.patientVisitId) {\r\n      payload['patientVisitId'] = imagingFormData.patientVisitId;\r\n    }\r\n    if (!clinicalFormData || !clinicalFormData.length) {\r\n      if (imagingFormData && imagingFormData.patientCategoryNm) {\r\n        payload['patientCategoryNm'] =\r\n          imagingFormData.patientCategoryNm.patientCategoryName;\r\n        payload['patientCategoryId'] =\r\n          imagingFormData.patientCategoryNm.patientCategoryId;\r\n      }\r\n      if (labFormData && labFormData.patientCategoryNm) {\r\n        payload['patientCategoryNm'] =\r\n          labFormData.patientCategoryNm.patientCategoryName;\r\n        payload['patientCategoryId'] =\r\n          labFormData.patientCategoryNm.patientCategoryId;\r\n      }\r\n    }\r\n\r\n    if (\r\n      clinicalFormData &&\r\n      clinicalFormData.doctorId &&\r\n      clinicalFormData.deptId\r\n    ) {\r\n      payload['visitedPatientCount'] = clinicalFormData.visitedPatientCount;\r\n      payload['deptId'] = clinicalFormData.deptId;\r\n      const doctorId = clinicalFormData.doctorId;\r\n      payload['doctorId'] = clinicalFormData.doctorId.empId;\r\n      payload['doctorNm'] = clinicalFormData.doctorId.firstNm;\r\n      payload['feeValidDays'] = doctorId.feeValidDays;\r\n      payload['feeValidVisits'] = doctorId.feeValidVisits;\r\n      payload['patientCategoryNm'] =\r\n        clinicalFormData.patientCategoryNm.patientCategoryName;\r\n      payload['patientAppointmentId'] = clinicalFormData.patientAppointmentId;\r\n\r\n      payload['patientCategoryId'] =\r\n        clinicalFormData.patientCategoryNm.patientCategoryId;\r\n        if (clinicalFormData ) {\r\n          payload['refDocContactNo'] = clinicalFormData.refDoctorContactNo;\r\n          payload['refOrgNm'] = clinicalFormData.refOrgNm;\r\n          const refDoctorData = clinicalFormData.refDoctorNm;\r\n          payload['refDoctorId'] = refDoctorData ? refDoctorData.refDoctorId : null;\r\n          payload['refDoctorNm'] = refDoctorData ? refDoctorData.refDoctorNm : null;\r\n          payload['referralType'] =  clinicalFormData.referralType;\r\n          payload.honorificNm = (refDoctorData && refDoctorData.honorificNm) ? refDoctorData.honorificNm : '';\r\n        }\r\n      payload['visitType'] = clinicalFormData.visitTypeId;\r\n      if (clinicalFormData.visitTypeId === 'NEW') {\r\n        payload['visitTypeId'] = 1;\r\n        payload['visitType'] = 'NEW';\r\n      } else {\r\n        payload['visitTypeId'] = 2;\r\n        payload['visitType'] = 'FOLLOWUP';\r\n      }\r\n      payload['paymentStatus'] = clinicalFormData.paymentStatus;\r\n    }\r\n\r\n    if (clinicalFormData && !clinicalFormData.paymentStatus) {\r\n      payload['paymentStatus'] = true;\r\n    }\r\n    if (labOrderObj) {\r\n      payload['labOrderObj'] = labOrderObj;\r\n    }\r\n    if (imagingOrderObj) {\r\n      payload['imagingOrderObj'] = imagingOrderObj;\r\n    }\r\n    const patientData = this.patientdataService.getPatienDataForBilling();\r\n    if (patientData) {\r\n      payload['hosPatientId'] = patientData.hosPatientId;\r\n      payload['patientId'] = patientData.patientId;\r\n      payload['imagePath'] = patientData.imagePath;\r\n      if (patientData.tempHosPatientId) {\r\n        payload['tempHosPatientId'] = patientData.tempHosPatientId;\r\n      }\r\n    }\r\n\r\n    if (imagingFormData && imagingFormData.length) {\r\n      payload['refDocContactNo'] = imagingFormData.refDoctorContactNo\r\n        ? imagingFormData.refDoctorContactNo\r\n        : null;\r\n      payload['refOrgNm'] = imagingFormData.refOrgNm\r\n        ? imagingFormData.refOrgNm\r\n        : null;\r\n\r\n      const refDoctorData = imagingFormData.refDoctorNm;\r\n      if (refDoctorData) {\r\n        payload['refDoctorId'] = refDoctorData.refDoctorId;\r\n        payload['refDoctorNm'] = refDoctorData.refDoctorNm;\r\n        payload['referralType'] = refDoctorData.referralType;\r\n        payload['honorificNm'] = refDoctorData.honorificNm;\r\n        payload['dateOfOrder'] = imagingFormData.dateOfOrder;\r\n        payload['prescribedBy'] = refDoctorData.refDoctorNm;\r\n        payload['refDocContactNo'] = refDoctorData.refDocContactNo;\r\n      }\r\n    }\r\n    if (labFormData && labFormData.refDoctorNm) {\r\n      // payload['patientVisitId'] = labFormData.patientVisitId;\r\n      payload['refDocContactNo'] = labFormData.refDoctorContactNo;\r\n      const refDoctorData = labFormData.refDoctorNm ? labFormData.refDoctorNm : null;\r\n      payload['refOrgNm'] = labFormData.refOrgNm ? labFormData.refOrgNm : null;\r\n      if (!clinicalFormData) {\r\n        payload['patientCategoryNm'] =\r\n          labOrderObj.patientCategoryNm.patientCategoryName;\r\n        payload['patientCategoryId'] =\r\n          labOrderObj.patientCategoryNm.patientCategoryId;\r\n      }\r\n\r\n      if (refDoctorData) {\r\n        payload['refDoctorId'] = refDoctorData.refDoctorId;\r\n        payload['refDoctorNm'] = refDoctorData.refDoctorNm;\r\n        payload['referralType'] = refDoctorData.referralType;\r\n        payload['honorificNm'] = refDoctorData.honorificNm;\r\n        payload['dateOfOrder'] = labFormData.dateOfOrder;\r\n        payload['prescribedBy'] = refDoctorData.refDoctorNm;\r\n        payload['refDocContactNo'] = refDoctorData.refDocContactNo;\r\n      }\r\n    }\r\n    this.apiSubscription = this.opdService\r\n      .insertPatientBill<any>(payload)\r\n      .subscribe(\r\n        response => {\r\n          if (response.responseCode === 'E200' && response.data) {\r\n            if (response !== null) {\r\n              this.isDisable = false;\r\n              if (\r\n                response.data.clinicalServicesList &&\r\n                response.data.clinicalServicesList.length\r\n              ) {\r\n                this.billingserviceService.setInvoiceItemNumber(0);\r\n                if (\r\n                  response.data.registrationPrintType &&\r\n                  response.data.registrationPrintType === 'Case Sheet'\r\n                ) {\r\n                  this.OpdServicePrint.generateCasesheet(response.data);\r\n                } else {\r\n                  this.OpdServicePrint.generateToken(response.data);\r\n                }\r\n              }\r\n              // this.OpdServicePrint.generateInvoice(response.data);\r\n              this.posPrint(response.data);\r\n              this.toastr.success('success!', response.responseMessage);\r\n              this.consultations = [];\r\n              this.billingserviceService.setConsultations(this.consultations);\r\n              this.labServicesList = [];\r\n              this.patientdataService.setUserData([]);\r\n              this.billingserviceService.setLabTests([]);\r\n              this.billingserviceService.setLabPanels([]);\r\n              this.billingserviceService.setLabPackages([]);\r\n              this.imagingServicesList = [];\r\n              this.billingserviceService.setImageTests([]);\r\n              this.billingserviceService.setImagePanels([]);\r\n              this.billingserviceService.setImagePackages([]);\r\n              this.billingserviceService.setEmrTests(null);\r\n              this.paymentModesForm.reset();\r\n              this.patientdataService.setUserData(null);\r\n              this.patientdataService.setPatienDataForBilling(null);\r\n              this.patientdataService.setAppointmentData(null);\r\n              this.billingserviceService.setEmrImagingTests(null);\r\n              this.router.navigate(['registration/add-patient']);\r\n            }\r\n          } else if (response.responseCode === 'E400') {\r\n            this.isDisable = false;\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n        },\r\n        () => {\r\n          this.isDisable = false;\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n  }\r\n  posPrint(data) {\r\n    const queryparams = {\r\n      orgId: this.userSession.orgId,\r\n      createdUserId: this.userSession.regId,\r\n      invoiceNo: data.invoiceNo,\r\n      token: true,\r\n      isSummarized: this.summerized\r\n    };\r\n    this.reportsService\r\n      .fetchOpBillPrint(queryparams)\r\n      .subscribe(\r\n        response => {\r\n          if (response instanceof ArrayBuffer) {\r\n            const posReport = new Blob([response], {\r\n              type: 'application/pdf'\r\n            });\r\n            const reportURL = URL.createObjectURL(posReport);\r\n            const win = window.open('', '_blank');\r\n            win.location.href = reportURL;\r\n            setTimeout(() => {\r\n              win.print();\r\n            }, 1000);\r\n          } else if (response.responseCode) {\r\n            this.toastr.error('Failure!', response.responseMessage);\r\n          }\r\n        },\r\n        () => {\r\n          this.toastr.error('Failure!', 'Something went wrong');\r\n        }\r\n      );\r\n  }\r\n\r\n  // initForm() {\r\n  //   this.paymentModesForm = this.formBuilder.group({\r\n  //     paymentMode: this.formBuilder.control(null, Validators.required),\r\n  //     issuedBank: this.formBuilder.control(null),\r\n  //     chequeDdNo: this.formBuilder.control(null),\r\n  //     paymentDt: this.formBuilder.control(null),\r\n  //     paidAmountByMode: this.formBuilder.control(null, Validators.required)\r\n  //   });\r\n  // }\r\n  // paymentModes() {\r\n  //   this.formGroup = this.formBuilder.group({\r\n  //     cardPayment: null,\r\n  //     paidAmtByCard: null,\r\n  //     onlinePayment: null,\r\n  //     paidAmtByOnline: null\r\n  //   });\r\n  // }\r\n  discountPercent(services) {\r\n    if (\r\n      services.discountAmount >\r\n      services.quantity * (services.serviceAmount || 0)\r\n    ) {\r\n      this.toastr.clear();\r\n      this.toastr.warning(\r\n        'Failure!',\r\n        'Discount Amount should not be greater than total service amount'\r\n      );\r\n      this.isValidDiscount = false;\r\n      return false;\r\n    }\r\n    this.paymentModesForm.reset();\r\n    this.isValidDiscount = true;\r\n    services.discountpercent =\r\n      (1 / services.quantity) *\r\n      (services.discountAmount / services.serviceAmount) *\r\n      100;\r\n    services.discountpercent = services.discountpercent.toFixed(2) / 1;\r\n\r\n    this.calculateTotalServiceAmt(services);\r\n  }\r\n  discountAmt(services) {\r\n    if (services.discountpercent > 100) {\r\n      this.toastr.clear();\r\n      this.toastr.warning(\r\n        'Failure!',\r\n        'Discount Amount should not be greater than total service amount'\r\n      );\r\n      this.isValidDiscount = false;\r\n      return false;\r\n    }\r\n    this.isValidDiscount = true;\r\n    this.paymentModesForm.reset();\r\n    services.discountAmount =\r\n      (services.quantity *\r\n        (services.discountpercent * services.serviceAmount)) /\r\n      100;\r\n    services.discountAmount = services.discountAmount.toFixed(2) / 1;\r\n\r\n    this.calculateTotalServiceAmt(services);\r\n  }\r\n  deleteSelectedServices(obj, type) {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Delete ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        if (type === 'clinical') {\r\n          this.consultations = this.consultations.filter(function(value) {\r\n            return value.serviceId !== obj.serviceId;\r\n          });\r\n          this.billingserviceService.setConsultations(this.consultations);\r\n        }\r\n        if (type === 'lab') {\r\n          if (obj.serviceType === 'Tests ') {\r\n            this.labTests = this.labTests.filter(function(value) {\r\n              return value.serviceId !== obj.serviceId;\r\n            });\r\n            this.billingserviceService.setLabTests(this.labTests);\r\n          } else if (obj.serviceType === 'Panels ') {\r\n            this.labPanels = this.labPanels.filter(function(value) {\r\n              return value.serviceId !== obj.serviceId;\r\n            });\r\n            this.billingserviceService.setLabPanels(this.labPanels);\r\n          } else if (obj.serviceType === 'Packages ') {\r\n            this.labPackages = this.labPackages.filter(function(value) {\r\n              return value.serviceId !== obj.serviceId;\r\n            });\r\n            this.billingserviceService.setLabPackages(this.labPackages);\r\n          }\r\n          this.labServicesList = this.labTests.concat(\r\n            this.labPanels,\r\n            this.labPackages\r\n          );\r\n        }\r\n        if (type === 'imaging') {\r\n          if (obj.serviceType === 'Tests ') {\r\n            this.imagingTest = this.imagingTest.filter(function(value) {\r\n              return value.serviceId !== obj.serviceId;\r\n            });\r\n            this.billingserviceService.setImageTests(this.imagingTest);\r\n          } else if (obj.serviceType === 'Panels ') {\r\n            this.imagingPanels = this.imagingPanels.filter(function(value) {\r\n              return value.serviceId !== obj.serviceId;\r\n            });\r\n            this.billingserviceService.setImagePanels(this.imagingPanels);\r\n          } else if (obj.serviceType === 'Packages ') {\r\n            this.imagingPackages = this.imagingPackages.filter(function(value) {\r\n              return value.serviceId !== obj.serviceId;\r\n            });\r\n            this.billingserviceService.setImagePackages(this.imagingPackages);\r\n          }\r\n          this.imagingServicesList = this.imagingTest.concat(\r\n            this.imagingPanels,\r\n            this.imagingPackages\r\n          );\r\n        }\r\n        this.calculateTotalInvoiceAmt();\r\n      }\r\n    });\r\n  }\r\n  clearForm() {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Clear ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.consultations = [];\r\n        this.labTests = [];\r\n        this.labPanels = [];\r\n        this.labPackages = [];\r\n        this.imagingTest = [];\r\n        this.imagingPanels = [];\r\n        this.imagingPackages = [];\r\n        this.imagingServicesList = [];\r\n        this.labServicesList = [];\r\n        this.billingserviceService.setConsultationFormData([]);\r\n        this.billingserviceService.setConsultations([]);\r\n        this.billingserviceService.setLabFormData([]);\r\n        this.billingserviceService.setLabTests([]);\r\n        this.billingserviceService.setLabPanels([]);\r\n        this.billingserviceService.setLabPackages([]);\r\n        this.billingserviceService.setImageFormdata([]);\r\n        this.billingserviceService.setImageTests([]);\r\n        this.billingserviceService.setImagePanels([]);\r\n        this.billingserviceService.setImagePackages([]);\r\n      }\r\n    });\r\n  }\r\n  cancelForm() {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      data: { title: 'Are You Sure Want To Cancel ?' },\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.router.navigate(['registration/add-patient']);\r\n      }\r\n    });\r\n  }\r\n  // this is used for unsubscribing the subscription object for this we are stopping the multiple insertions\r\n  unSubscribingSubscriptionObj() {\r\n    if (this.apiSubscription) {\r\n      this.apiSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<div class=\"confirmation-modal\">\r\n  <div *ngIf=\"!isContinue\">\r\n    <i class=\"fa fa-window-close close\" aria-hidden=\"true\" (click)=\"cancel()\"></i>\r\n    <p class=\"header-text \">\r\n      <strong>Following information is missing would you like to provide?</strong>\r\n    </p>\r\n    <ul class=\"info-text\">\r\n      <li>\r\n        <span class=\"bullet-icon\">\r\n          <i class=\"fa fa-circle\"></i>\r\n        </span> Mobile Number\r\n      </li>\r\n      <li>\r\n        <span class=\"bullet-icon\">\r\n          <i class=\"fa fa-circle\"></i>\r\n        </span> Aadhaar Number</li>\r\n    </ul>\r\n  </div>\r\n  <form *ngIf=\"isContinue\" [formGroup]=\"formGroup\" #formDir=\"ngForm\">\r\n    <i class=\"fa fa-window-close close\" aria-hidden=\"true\" (click)=\"cancel()\"></i>\r\n    <div class=\"model_size m-t-10\">\r\n      <div class=\"col-md-12 col-sm-12 col-xs-12\">\r\n        <label>MOBILE NO</label>\r\n        <span class=\"astrik-symbol \">\r\n          <i class=\"fa fa-asterisk \"></i>\r\n        </span>\r\n        <input id=\"mobileNo\" type=\"text\" formControlName=\"mobileNo\" minLength=\"10\" maxLength=\"10\" tabindex=\"4\">\r\n        <div *ngIf=\"formGroup.controls[ 'mobileNo'].invalid && (formGroup.controls[ 'mobileNo'].dirty || formGroup.controls[\r\n                'mobileNo'].touched||formDir.submitted) \" class=\"has-error popover-style\" role=\"alert\">\r\n          <div *ngIf=\"formGroup.controls[ 'mobileNo'].errors.required \" class=\"dynamic_popover\">\r\n            * mobile number is required\r\n            <span class=\"doArrow\"></span>\r\n          </div>\r\n          <div *ngIf=\"formGroup.controls[ 'mobileNo'].errors.pattern\" class=\"dynamic_popover\">\r\n            * Enter valid mobile number\r\n            <span class=\"doArrow\"></span>\r\n          </div>\r\n          <div *ngIf=\"formGroup.controls[ 'mobileNo'].errors.minlength \" class=\"dynamic_popover\">\r\n            * mobile number is too small\r\n            <span class=\"doArrow\"></span>\r\n          </div>\r\n          <div *ngIf=\"formGroup.controls[ 'mobileNo'].errors.maxlength \" class=\"dynamic_popover\">\r\n            * mobile number is too long\r\n            <span class=\"doArrow\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12 col-sm-12 col-xs-12\">\r\n        <label>AADHAAR NO</label>\r\n        <input id=\"aadhaarNo\" type=\"text\" formControlName=\"aadhaarNo\" minLength=\"12\" maxLength=\"12\" tabindex=\"2\">\r\n        <div *ngIf=\"formGroup.controls[ 'aadhaarNo'].invalid && (formGroup.controls[ 'aadhaarNo'].dirty || formGroup.controls[\r\n                  'aadhaarNo'].touched||formDir.submitted) \" class=\"has-error popover-style\" role=\"alert\">\r\n          <div *ngIf=\"formGroup.controls[ 'aadhaarNo'].errors.pattern\" class=\"dynamic_popover\">\r\n            * Enter numbers\r\n            <span class=\"doArrow\"></span>\r\n          </div>\r\n          <div *ngIf=\"formGroup.controls[ 'aadhaarNo'].errors.minlength \" class=\"dynamic_popover\">\r\n            * aadhaar number is too small\r\n            <span class=\"doArrow\"></span>\r\n          </div>\r\n          <div *ngIf=\"formGroup.controls[ 'aadhaarNo'].errors.maxlength \" class=\"dynamic_popover\">\r\n            * aadhaar number is too long\r\n            <span class=\"doArrow\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button id=\"Submit\" *ngIf=\"isContinue\" class=\"btn-app btn-save m-t-10 m-l-16\" type=\"submit\" [disabled]=\"!formDir.valid\" (click)=\"getMobileOrAadhaarNo()\">Submit</button>\r\n      <button id=\"skip\" class=\"btn-app btn-delete m-t-10\" type=\"button\" (click)=\"skipModel()\">Skip</button>\r\n    </div>\r\n  </form>\r\n  <div class=\"col-sm-offset-2 col-sm-10 p-l-r-5 m-t-b-15 form-button-group\">\r\n    <ul>\r\n    <li id=\"continue\" *ngIf=\"!isContinue\" class=\"btn-app btn-save\" type=\"button\" (click)=\"continue()\">Continue</li>\r\n    <li id=\"skipModel\" *ngIf=\"!isContinue\" class=\"btn-app btn-delete\" type=\"button\" (click)=\"skipModel()\">Skip</li>\r\n  </ul>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-conform-model',\r\n  templateUrl: './conform-model.component.html',\r\n  styleUrls: ['./conform-model.component.scss']\r\n})\r\nexport class ConformModelComponent implements OnInit {\r\n  public isContinue = false;\r\n  public formGroup: FormGroup;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConformModelComponent>,\r\n    private formBuilder: FormBuilder\r\n  ) {}\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n  initForm() {\r\n    this.formGroup = this.formBuilder.group({\r\n      mobileNo: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(/(5|6|7|8|9)\\d{9}$/),\r\n          Validators.minLength(10),\r\n          Validators.maxLength(10)\r\n        ]\r\n      ],\r\n      aadhaarNo: [\r\n        null,\r\n        [\r\n          Validators.pattern('[0-9]*'),\r\n          Validators.minLength(12),\r\n          Validators.maxLength(12)\r\n        ]\r\n      ]\r\n    });\r\n  }\r\n  skipModel() {\r\n    this.dialogRef.close('skipped');\r\n  }\r\n  continue() {\r\n    this.isContinue = true;\r\n  }\r\n  getMobileOrAadhaarNo() {\r\n    this.dialogRef.close(this.formGroup.value);\r\n  }\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"container-fluid model-background\">\r\n  <form [formGroup]=\"formGroup\" #formDir=\"ngForm\">\r\n    <i class=\"fa fa-times-circle cancel\" (click)=\"cancelModel()\"></i>\r\n    <div class=\"otp-model_size\">\r\n      <p class=\"text\">A OTP has been sent to</p>\r\n\r\n      <div class=\"col-md-12 zero-padding\">\r\n        <div class=\"row m-l-r-5\">\r\n          <div class=\"p-0 mobile-icon col-md-2\">\r\n            <i class=\"fas fa-mobile-alt\" aria-hidden=\"true\"></i>\r\n          </div>\r\n          <!-- <pre>{{modelData.mobileOrAadhaarNo}}</pre> -->\r\n          <div class=\"col-md-10 p-0 m-t-8\">\r\n            <p class=\"mobile-no text-center\">+91-{{modelData.inputValue}}</p>\r\n          </div>\r\n        </div>\r\n        <p class=\"text\">Please enter the OTP to Access Patient details</p>\r\n      </div>\r\n      <div class=\"col-md-12 otp-dialog-m-l\">\r\n        <input id=\"otp\" type=\"text\" formControlName=\"otp\" minlength=\"6\" maxlength=\"6\">\r\n      </div>\r\n      <div class=\"row m-l-r-5 m-t-md\">\r\n        <div class=\"col-md-6 pl-4\">\r\n          <button id=\"otpVerification\" type=\"submit\" class=\"btn validate-otp\" (click)=\"otpVerification()\">\r\n            VALIDATE OTP</button>\r\n        </div>\r\n        <div class=\"col-md-6 p-0 text-right resend-m-t\">\r\n          <a (click)=\"resendOtp()\" class=\"resend\">\r\n            RESEND OTP</a>\r\n        </div>\r\n        <!-- <div class=\"col-md-4\">\r\n          <button class=\"btn btn-app btn-cancel\" (click)=\"cancelModel()\" type=\"button\">\r\n            <i class=\"fa fa-repeat\" aria-hidden=\"true\"></i> cancel</button>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, ViewEncapsulation, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { OpdApiService, UserService } from '@core/services';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PatientdataService } from '@app/modules/opd/components/allpatients/patientdata.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { UserSession } from '@core/models/user-session';\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'app-otpgeneration',\r\n  templateUrl: './otpgeneration.component.html',\r\n  styleUrls: ['./otpgeneration.component.scss']\r\n})\r\nexport class OtpgenerationComponent implements OnInit {\r\n  formGroup: FormGroup;\r\n  patientDataForOtpGeneration: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private opdService: OpdApiService,\r\n    private patientdataService: PatientdataService,\r\n    private toastr: ToastrService,\r\n    public dialogRef: MatDialogRef<OtpgenerationComponent>,\r\n    private userService: UserService,\r\n    @Inject(MAT_DIALOG_DATA) public modelData\r\n  ) {\r\n    this.userSession = this.userService.getUser();\r\n  }\r\n  private userSession: UserSession;\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n  initForm() {\r\n    console.log('modal data', this.modelData);\r\n    this.formGroup = this.formBuilder.group({\r\n      otp: null\r\n    });\r\n  }\r\n  otpVerification() {\r\n    const patientId = this.patientdataService.getUserData();\r\n    const payload = this.formGroup.value;\r\n    payload.patientId = patientId;\r\n    this.opdService.otpVerification(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          // if otp verified we need to path the patient data to the form\r\n          this.dialogRef.close(response);\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      () => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  resendOtp() {\r\n    this.patientDataForOtpGeneration = this.patientdataService.getPatienDataForBilling();\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      patientId: this.patientDataForOtpGeneration.patientId,\r\n      isReGenerate: true\r\n    };\r\n    this.opdService.otpGeneration(payload).subscribe(\r\n      (response: any) => {\r\n        if (response.responseCode === 'E200') {\r\n          this.toastr.info(\r\n            'info',\r\n            'OTP IS GENERATED AND SENT TO PATIENT REGISTERED MOBILE NUMBER'\r\n          );\r\n          this.patientdataService.setUserData(\r\n            this.patientDataForOtpGeneration.patientId\r\n          );\r\n        } else if (response.responseCode === 'E400') {\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n      },\r\n      err => {\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  cancelModel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"col-md-12 p-0 reg-search-result\">\r\n  <div class=\"\" *ngIf=\"isFetchingData\" class=\"loading\">\r\n    Loading ...\r\n  </div>\r\n  <div *ngIf=\"patientList.length===0&&!isFetchingData\" class=\"page-info-message col-sm-12 no-padding\">\r\n    <ul>\r\n      <li class=\"info-icon\"><i class=\"mdi mdi-information\"></i></li>\r\n      <li class=\"info-message\">\r\n        <p>{{'COMMONLABELS.NO_PATIENT_AVAILABLE_SEARCH' | translate }}</p>\r\n        <!-- <p>There are no Clinical Services available for the Above Selected Department, Kindly add some Clinical Services in Billing Catalogue Page or Contact Your Administrator.</p> -->\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"col-md-12 p-l-r-10 search-result-tab\">\r\n    <h3 *ngIf=\"patientList.length && patientData\">{{'COMMONLABELS.YOUR_SEARCH_RESULT_TEXT' | translate }} -\r\n      {{patientData}}</h3>\r\n  </div>\r\n  <div class=\"row m-0 p-l-r-10 reg-search-result\">\r\n    <div class=\"col-md-3 col-sm-4 col-xs-12 cards-padding\" *ngFor=\"let patientData of patientList\">\r\n      <div class=\"col-md-12 patient-card-box\">\r\n        <div class=\"pt-img\">\r\n          <div class=\"col-sm-12 p-0\">\r\n            <img *ngIf=\"patientData.imagePath \" class=\"profile-bg-img\" src=\"{{patientData.imagePath}} \">\r\n            <div *ngIf=\"!patientData.imagePath\">\r\n              <img src=\"{{getAvatorImg(patientData)}}\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-12 p-0\" *ngIf=\"patientData.totalInvoiceDueAmt\">\r\n            <span class=\"pt-due\">\r\n              Due: {{patientData.totalInvoiceDueAmt}}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"pt-reg-dtls\">\r\n          <div class=\"col-md-12 p-0\">\r\n            <h2>{{patientData.honorificNm}}{{patientData.patientNm}}</h2>\r\n          </div>\r\n          <div class=\"col-md-12 p-0\">\r\n            <ul class=\"pt-dtls\">\r\n              <li *ngIf=\"patientData.hosPatientId\">{{patientData.hosPatientId}}</li>\r\n              <li>{{patientData.gender}}</li>\r\n              <li>{{patientData.ageYears}}</li>\r\n            </ul>\r\n            <div *ngIf=\"!patientData.hosPatientId\">\r\n              <ul class=\"reg-btn-group\">\r\n                <li>\r\n                  <button id=\"registerPatient\" class=\"button-design-registernow btn-group-element\" (click)=\"registerPatient(patientData)\">\r\n                    {{'OPD.REGISTER_NOW_TEXT' | translate }}\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"patientData.hosPatientId\">\r\n            <div class=\"col-md-12 p-0\">\r\n              <ul class=\"reg-btn-group\">\r\n                <li>\r\n                  <button id=\"clinicalBilling\" class=\"button-design-appointment btn-group-element\" (click)=\"clinicalBilling(patientData)\">\r\n                    {{'OPD.APPOINTMENT_TEXT' | translate }}\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button id=\"labBilling\" class=\"button-design-lab btn-group-element\" (click)=\"labBilling(patientData)\">\r\n                    {{'OPD.LAB_TEST_TEXT' | translate }}\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button id=\"imagingBilling\" class=\"button-design-img btn-group-element\" (click)=\"imagingBilling(patientData)\">\r\n                    {{'OPD.IMAGING_TEXT' | translate }}\r\n                  </button>\r\n                </li>\r\n\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"patientData.hosPatientId &&patientData.orgId\" class=\"pt-card-edit-ico\">\r\n          <i class=\"mdi mdi-pencil\" (click)=\"editPatientDetails(patientData)\"></i>\r\n        </div>\r\n        <div *ngIf=\"patientData.appointmentDt\">\r\n          <p class=\"pt-card-booked-dt\">Booked:{{patientData.appointmentDt|date:'yyyy-MM-dd h:mm:ss a'}}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UtilService } from '@core/services/utils.service';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { Params } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\r\nimport { OpdApiService, UserService } from '@core/services';\r\nimport { PatientdataService } from '@app/modules/opd/components/allpatients/patientdata.service';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport { OpdService } from '../../services/opd.service';\r\n\r\n@AutoUnsubscribe()\r\n@Component({\r\n  selector: 'app-search-patient',\r\n  templateUrl: './search-patient.component.html',\r\n  styleUrls: ['./search-patient.component.scss']\r\n})\r\nexport class SearchPatientComponent implements OnInit, OnDestroy {\r\n  searchType: string;\r\n  patientData: string;\r\n  screen: string;\r\n  isFetchingData = false;\r\n  navigateToSearchPatient = false;\r\n  public patientType: string;\r\n  queryParamSubscription: Subscription;\r\n  public editable = false;\r\n  constructor(\r\n    private opdApiService: OpdApiService,\r\n    private toastr: ToastrService,\r\n    private utilService: UtilService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private patientdataService: PatientdataService,\r\n    private userService: UserService,\r\n    private opdService: OpdService\r\n  ) {\r\n    this.userSession = this.userService.getUser();\r\n  }\r\n  private userSession: UserSession;\r\n  patientId: string;\r\n  name: string;\r\n  aadhaar: string;\r\n  mobile: string;\r\n  patientList = [];\r\n  FingerPrintData = [];\r\n\r\n  ngOnInit() {\r\n    this.queryParamSubscription = this.activatedRoute.queryParams.subscribe(\r\n      (params: Params) => {\r\n        this.patientData = params['patientData'];\r\n        this.searchType = params['searchType'];\r\n        // this code for get the subscribed finger print data.\r\n        this.opdService.fingerData.subscribe(res => {\r\n          if (res) {\r\n            this.FingerPrintData = res;\r\n          } else {\r\n            this.FingerPrintData = [];\r\n          }\r\n        });\r\n        this.patientSearch(this.patientData, this.searchType);\r\n    });\r\n  }\r\n\r\n/**\r\n * @description this method is used for search the patint based on data.\r\n * @function patientSearch\r\n * @param searchType\r\n * @param patientData\r\n */\r\n    patientSearch(patientData, searchType) {\r\n    this.patientdataService.setUserData(null);\r\n    this.patientList = [];\r\n    this.isFetchingData = true;\r\n    const payload = {\r\n      orgId: this.userSession.orgId,\r\n      authenticatedUserId: this.userSession.regId,\r\n      orgGrpId: this.userSession.orgGroupId,\r\n      searchType: this.searchType,\r\n      patientData: this.patientData,\r\n    };\r\n    if (this.FingerPrintData.length) {\r\n      payload['fingerType'] = this.FingerPrintData[0].fingerType;\r\n      payload['fingerprint'] = this.FingerPrintData[0].fingerprint;\r\n      payload['leftRightIndicator'] = this.FingerPrintData[0].leftRightIndicator;\r\n    }\r\n    this.opdApiService.patientSearchDetailsWithFingerPrint(payload).subscribe(\r\n      (response: any) => {\r\n        this.isFetchingData = false;\r\n        if (response.responseCode === 'E200') {\r\n          this.patientList = response.data.patientList;\r\n          this.patientType = response.data.patientType;\r\n          if (response.data && response.data.patientList.length) {\r\n            this.patientList = response.data.patientList.map(patient => {\r\n              patient.mobileOrAadhaarNo = this.patientData;\r\n              if (patient.age || patient.age === 0) {\r\n                patient.ageYears = this.utilService\r\n                  .parseAgeIndays(patient.age)\r\n                  .get('patientAge');\r\n              }\r\n              if (patient.birthDt) {\r\n                patient.ageYears = this.utilService\r\n                  .parseDob(patient.birthDt)\r\n                  .get('patientAge');\r\n              }\r\n              return patient;\r\n            });\r\n          } else {\r\n            this.isFetchingData = false;\r\n            // const navigationExtras: NavigationExtras = {};  , navigationExtras\r\n            // this.router.navigate(['/registration']);\r\n            this.patientData = '';\r\n          }\r\n          this.FingerPrintData = [];\r\n          this.opdService.fingerData.next(null);\r\n        } else if (response.response === 'E400') {\r\n          // const navigationExtras: NavigationExtras = {};\r\n          // this.router.navigate(['/search-patient'], { replaceUrl: true });\r\n          this.toastr.error('Failure!', response.responseMessage);\r\n        }\r\n        this.FingerPrintData = [];\r\n        this.opdService.fingerData.next(null);\r\n      },\r\n      () => {\r\n        this.isFetchingData = false;\r\n        this.toastr.error('Failure!', 'Something went wrong');\r\n      }\r\n    );\r\n  }\r\n  // navigate to the clinical billing screen\r\n  clinicalBilling(patientData) {\r\n    if (patientData.patientAdmitId) {\r\n      this.patientdataService.setPatienDataForBilling(patientData);\r\n      this.toastr.warning(\r\n        'success!',\r\n        'Ipd patient not allowed for consultation'\r\n      );\r\n      return;\r\n    }\r\n    if (!patientData.patientAdmitId) {\r\n      this.patientdataService.setPatienDataForBilling(patientData);\r\n      this.router.navigate(['../billing'], {\r\n        relativeTo: this.activatedRoute\r\n      });\r\n    }\r\n  }\r\n  // navigate to the lab billing screen\r\n  labBilling(patientData) {\r\n    this.patientdataService.setPatienDataForBilling(patientData);\r\n    this.router.navigate(['../billing', 'lab'], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n  // navigate to the imaging billing screen\r\n  imagingBilling(patientData) {\r\n    this.patientdataService.setPatienDataForBilling(patientData);\r\n    this.router.navigate(['../billing', 'imaging'], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n  editPatientDetails(patientData) {\r\n    this.editable = true;\r\n    this.opdService.fingerPrintApiData.next(patientData.fingerPrints);\r\n    this.opdService.editable.next(this.editable);\r\n    this.navigateToSearchPatient = true;\r\n    this.patientdataService.setUserData(patientData.patientId);\r\n    this.patientdataService.setNavigateToSearchPatient(\r\n      this.navigateToSearchPatient\r\n    );\r\n    this.router.navigate(['../add-patient'], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n  getAvatorImg(patientData) {\r\n    const image =\r\n      patientData && patientData.gender === 'Female'\r\n        ? 'female-ico.png'\r\n        : 'male-ico.png';\r\n    return `https://s3.ap-south-1.amazonaws.com/dru.assets/images/app/icons/${image}`;\r\n  }\r\n  registerPatient(patientData) {\r\n    if (patientData && !patientData.hosPatientId && !patientData.patientOrgId) {\r\n      this.patientdataService.setPatienDataForBilling(patientData);\r\n      const navigationExtras: NavigationExtras = {\r\n        queryParams: {\r\n          screen: 'otherOrgPatient'\r\n        }\r\n      };\r\n      this.router.navigate(['/registration/add-patient'], navigationExtras);\r\n    }\r\n    if (patientData && patientData.patientOrgId) {\r\n      this.patientdataService.setUserData(patientData.patientId);\r\n      const navigationExtras: NavigationExtras = {\r\n        queryParams: {\r\n          screen: 'withinOrg'\r\n        }\r\n      };\r\n      this.router.navigate(['/registration/add-patient'], navigationExtras);\r\n    }\r\n    if (patientData && patientData.appointmentDt) {\r\n      this.patientdataService.setUserData(patientData.patientId);\r\n      const navigationExtras: NavigationExtras = {\r\n        queryParams: {\r\n          appointment: 'appointment'\r\n        }\r\n      };\r\n      this.router.navigate(['/registration/add-patient'], navigationExtras);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, Router } from '@angular/router';\r\nimport { OpdComponent } from './opd.component';\r\nimport { AllpatientsComponent } from '../opd/components/allpatients/allpatients.component';\r\nimport { AddpatientComponent } from '../opd/components/addpatient/addpatient.component';\r\nimport { SearchPatientComponent } from '@app/modules/opd/components/search-patient/search-patient.component';\r\nimport { BillingComponent } from '@app/modules/opd/components/billing/billing.component';\r\nimport { ClinicalComponent } from '@app/modules/opd/components/billing/clinical/clinical.component';\r\nimport { ImagingComponent } from '@app/modules/opd/components/billing/imaging/imaging.component';\r\nimport { LabComponent } from '@app/modules/opd/components/billing/lab/lab.component';\r\nimport { PaymentComponent } from '@app/modules/opd/components/billing/payment/payment.component';\r\nimport { PageNotFoundComponentComponent } from './page-not-found-component/page-not-found-component.component';\r\n\r\nexport const OpdRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OpdComponent,\r\n    children: [\r\n      {\r\n        path: 'all-patients',\r\n        component: AllpatientsComponent\r\n      },\r\n      {\r\n        path: 'add-patient',\r\n        component: AddpatientComponent\r\n      },\r\n      {\r\n        path: 'search-patient',\r\n        component: SearchPatientComponent\r\n      },\r\n      {\r\n        path: 'billing',\r\n        component: BillingComponent,\r\n        children: [\r\n          {\r\n            path: 'clinical',\r\n            component: ClinicalComponent\r\n          },\r\n          {\r\n            path: 'imaging',\r\n            component: ImagingComponent\r\n          },\r\n          {\r\n            path: 'lab',\r\n            component: LabComponent\r\n          },\r\n          {\r\n            path: 'payment',\r\n            component: PaymentComponent\r\n          },\r\n          {\r\n            path: '',\r\n            redirectTo: 'clinical',\r\n            pathMatch: 'prefix'\r\n          }\r\n        ]\r\n      },\r\n      { path: '**', component: PageNotFoundComponentComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(OpdRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OpdRoutingModule {}\r\nexport const routingComponents = [\r\n  AllpatientsComponent,\r\n  AddpatientComponent,\r\n  SearchPatientComponent,\r\n  BillingComponent,\r\n  ClinicalComponent,\r\n  ImagingComponent,\r\n  LabComponent,\r\n  PaymentComponent,\r\n  PageNotFoundComponentComponent\r\n];\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { APP_CONSTANTS } from '@app/app.constant';\r\nimport { AppConstant } from '@core/models/app-constant';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OpdServiceService {\r\n\r\n  constructor(@Inject(APP_CONSTANTS) private appConstants: AppConstant) {\r\n\r\n   }\r\n\r\n\r\n  getBucketsConfig() {\r\n    return {\r\n      accessKeyId: this.appConstants.buckets.profileBuckt.accessKeyId,\r\n      secretAccessKey: this.appConstants.buckets.profileBuckt.secretAccessKey,\r\n      region: this.appConstants.buckets.profileBuckt.region\r\n    };\r\n  }\r\n\r\n  getBucketName() {\r\n    return {\r\n      bucketURL: this.appConstants.buckets.profileBuckt.BucketURL,\r\n      url: this.appConstants.buckets.profileBuckt.url\r\n    };\r\n  }\r\n}\r\n","<div class=\"col-sm-12 p-l-r-10  page-tittle-txt\" >\r\n    <h1 *ngIf=\"!editable\">REGISTER PATIENT &amp; BOOK APPOINTMENT/LAB TESTS/IMAGING TESTS </h1>\r\n    <h1 *ngIf=\"editable\">UPDATE PATIENT DETAILS</h1>\r\n</div>\r\n<div class=\"row no-margins white-bg box-shadow\" *ngIf=\"!editable\">\r\n    <!-- <label for=\"Patient\" class=\"m-t-20\">{{'COMMONLABELS.SEARCH_PATEINT_TEXT' | translate}}</label> -->\r\n      <div class=\"col-md-6 col-sm-6 p-10 clearfix\">\r\n        <div class=\"patient-search\">\r\n          <input name=\"patinetSearchControl\" type=\"radio\" [formControl]=\"patinetSearchControl\" id=\"patientId\" value=\"patientId\"\r\n            placeholder=placeholderValue>\r\n          <label for=\"patientId\" class=\"patient-search__type\">Patient Id</label>\r\n\r\n          <input name=\"patinetSearchControl\" type=\"radio\" [formControl]=\"patinetSearchControl\" id=\"name\" value=\"name\"\r\n            placeholder=\"Enter Your Name\">\r\n          <label for=\"name\" class=\"border-left patient-search__type\">Name </label>\r\n\r\n          <input name=\"patinetSearchControl\" type=\"radio\" [formControl]=\"patinetSearchControl\" id=\"aadhaar\" value=\"aadhaar\"\r\n            placeholder=\"Enter Your Aadhar No\" />\r\n          <label for=\"aadhaar\" class=\"border-left patient-search__type\">Aadhaar</label>\r\n\r\n          <input name=\"patinetSearchControl\" checked=\"checked\" type=\"radio\" [formControl]=\"patinetSearchControl\" id=\"mobile\"\r\n            value=\"mobile\" placeholder=\"Enter Your Mobile No\">\r\n          <label for=\"mobile\" class=\"border-left patient-search__type\">Mobile</label>\r\n          <input type=\"text\" (keyup.enter)=\"searchPatient(searchType, patientData)\" [(ngModel)]=\"patientData\" minLength=\"15\"\r\n          maxLength=\"15\" [pattern]=\"pattern\" autocomplete=\"on\" class=\"patient-search__input\" [placeholder]=\"placeholderValue\" (ngModelChange)=\"checkValidations()\"\r\n          >\r\n          <button type=\"button\" class=\"patient-search__btn\" [disabled]=\"!isEnable\" (click)=\"searchPatient(searchType, patientData)\">\r\n            <i class=\"fa fa-search\"></i>\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-2 p-0 mt-2\">\r\n        <button type=\"button\" class=\"patient-search__finger-btn\" (click)=\"searchPatient(searchType, patientData, 'search')\" *ngIf=\"isEnable\">\r\n          {{ 'OPD.SEARCH_BY_FINGER_PRINT' | translate }}\r\n        </button>\r\n      </div>\r\n      <div class=\"col-md-4 col-sm-4 p-0 reg-top-menu \">\r\n        <ul class=\"pull-right\">\r\n          <!-- (click)=\"addPatient()\" -->\r\n          <li  class=\"new-reg\" routerLinkActive='activePage' routerLink=\"add-patient\">\r\n            <span>\r\n              <i class=\"wfmi wfmi-i-outpatient\" aria-hidden=\"true\"></i>\r\n            </span>\r\n            <p>{{ 'OPD.QUICK_REGISTRATION_TEXT' | translate }}</p>\r\n          </li>\r\n          <!-- (click)=\"totalCount()\" -->\r\n          <li class=\"all-pts\" routerLinkActive='activePage' routerLink=\"all-patients\">\r\n            <span>\r\n              <i class=\"wfmi wfmi-i-outpatient\" aria-hidden=\"true\"></i>\r\n            </span>\r\n            <p> {{ 'OPD.ALLPATIENTS_TEXT' | translate }}</p>\r\n\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    <!-- <div *ngIf=\"opdScreen\" class=\"col-md-12\"> -->\r\n    <!-- {{'COMMONLABELS.NO_DATA_TEXT' | translate }} -->\r\n    <!-- <div class=\"no-message-text\">please search for patient or register a new patient to book consultation/labtests/imaging tests </div> -->\r\n    <!-- </div> -->\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, NavigationExtras, Router, Params } from '@angular/router';\r\nimport { FormControl, AbstractControl } from '@angular/forms';\r\nimport { BillingserviceService } from '@app/modules/opd/components/billing/billingservice.service';\r\nimport { OpdService } from './services/opd.service';\r\nimport { Subscription } from 'aws-sdk/clients/workdocs';\r\nimport { PatientdataService } from './components/allpatients/patientdata.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FingerPrintComponent } from '@shared/components/finger-print/finger-print.component';\r\n@Component({\r\n  selector: 'app-opd',\r\n  templateUrl: './opd.component.html',\r\n  styleUrls: ['./opd.component.scss']\r\n})\r\nexport class OpdComponent implements OnInit {\r\n  public allPatients;\r\n  isEnable = false;\r\n  patientId = '';\r\n  name = '';\r\n  aadhaar = '';\r\n  mobile = '';\r\n  searchType = '';\r\n  patientData: any;\r\n  inputValue: string;\r\n  public placeholderValue: string;\r\n  public editable = false;\r\n  patinetSearchControl: AbstractControl;\r\n  public pattern = '[0-9]*';\r\n  public i = 0;\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private billingserviceService: BillingserviceService,\r\n    private opdService: OpdService,\r\n    private patientDataService: PatientdataService,\r\n    private dialog: MatDialog\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.opdService.editable.subscribe(\r\n      (data: any) => {\r\n       this.editable = data;\r\n      }\r\n    );\r\n    this.activatedRoute.queryParams.subscribe(\r\n      (params: Params) => {\r\n        this.allPatients = params['allPatientScreen'];\r\n\r\n        if (!this.allPatients) {\r\n          this.editable = false;\r\n        }\r\n      }\r\n    );\r\n    this.patinetSearchControl = new FormControl('mobile');\r\n    this.placeholderValue = 'Search Patient by Mobile Number';\r\n    this.searchType = 'mobile';\r\n    this.patinetSearchControl.valueChanges.subscribe(value => {\r\n      this.searchType = value;\r\n      this.patientData = null;\r\n      switch (this.searchType) {\r\n        case 'name':\r\n          this.placeholderValue = 'Search Patient by Name';\r\n          break;\r\n        case 'aadhaar':\r\n          this.placeholderValue = 'Search Patient by Aadhaar Number';\r\n          break;\r\n        case 'patientId':\r\n          this.placeholderValue = 'Search Patient by Hospital ID';\r\n          break;\r\n        default:\r\n          this.placeholderValue = 'Search Patient by Mobile Number';\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  checkValidations() {\r\n    this.isEnable = false;\r\n\r\n    if (this.searchType === 'name') {\r\n      if (this.patientData && this.patientData.length > 2 ) {\r\n        this.isEnable = true;\r\n\r\n      }\r\n    }\r\n    if (this.searchType === 'aadhaar') {\r\n      if (this.patientData && this.patientData.length === 12) {\r\n        this.isEnable = true;\r\n\r\n      }\r\n\r\n    }\r\n    if (this.searchType === 'patientId') {\r\n      if (this.patientData && this.patientData.length > 6 ) {\r\n        this.isEnable = true;\r\n\r\n      }\r\n\r\n    }\r\n    if (this.searchType === 'mobile') {\r\n      if (this.patientData && this.patientData.length === 10 ) {\r\n        this.isEnable = true;\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n  totalCount() {\r\n    this.router.navigate(['all-patients'], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n  addPatient() {\r\n    this.router.navigate(['add-patient'], {\r\n      relativeTo: this.activatedRoute\r\n    });\r\n  }\r\n  quickRegister() {\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n        type: 'quick'\r\n      }\r\n    };\r\n    this.router.navigate(['/registration/add-patient'], navigationExtras);\r\n  }\r\n\r\n/**\r\n * @description this method is used for search the patient based on condition.\r\n * @function searchPatient\r\n * @param patientData\r\n * @param searchType\r\n * @param data is optional\r\n */\r\n  searchPatient(searchType, patientData, data?) {\r\n    this.patientDataService.setUserVisitIdData(null);\r\n    this.checkValidations();\r\n    if (!this.isEnable) {\r\n     return false;\r\n    }\r\n\r\n    // this code is checking for search with finger or not\r\n    if (data) {\r\n      const dialog = this.dialog.open(FingerPrintComponent, {\r\n        width: '350px',\r\n        data: {\r\n          data: '',\r\n          isSearch: true\r\n        }\r\n      });\r\n      dialog.afterClosed().subscribe(res => {\r\n        if (res) {\r\n          this.opdService.fingerData.next(res);\r\n          this.proceedSearch(searchType, patientData);\r\n        }\r\n      });\r\n    } else {\r\n      this.opdService.fingerData.next(null);\r\n      this.proceedSearch(searchType, patientData);\r\n    }\r\n  }\r\n\r\n/**\r\n * @description this method is used for proceeding search and navigate to search patint screen.\r\n * @function proceedSearch\r\n * @param searchType\r\n * @param patientData\r\n */\r\n  proceedSearch(searchType, patientData) {\r\n    this.i = ++ this.i;\r\n    const navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n        patientData,\r\n        searchType,\r\n        i: this.i\r\n      }\r\n    };\r\n    this.isEnable = false;\r\n    this.billingserviceService.setConsultationFormData([]);\r\n    this.billingserviceService.setConsultations([]);\r\n    this.billingserviceService.setLabFormData([]);\r\n    this.billingserviceService.setLabTests([]);\r\n    this.billingserviceService.setLabPanels([]);\r\n    this.billingserviceService.setLabPackages([]);\r\n    this.billingserviceService.setImageFormdata([]);\r\n    this.billingserviceService.setImageTests([]);\r\n    this.billingserviceService.setImagePanels([]);\r\n    this.billingserviceService.setImagePackages([]);\r\n    this.billingserviceService.setEmrTests(null);\r\n    this.billingserviceService.setEmrImagingTests(null);\r\n    this.patientData = null;\r\n    this.router.navigate(['/registration/search-patient'], navigationExtras);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { OpdComponent } from './opd.component';\r\nimport { OpdRoutingModule, routingComponents } from './opd-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { SearchfilterPipe } from './components/allpatients/searchfilter.pipe';\r\nimport { PatientdataService } from '@app/modules/opd/components/allpatients/patientdata.service';\r\nimport { AddreferencedoctorsComponent } from './components/addreferencedoctors/addreferencedoctors.component';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { OtpgenerationComponent } from './components/otpgeneration/otpgeneration.component';\r\nimport { CommentsDialogComponent } from '@shared/components/comments-dialog/comments-dialog.component';\r\nimport { NumberToWordsPipe } from '@shared/pipes/numberTowords';\r\nimport { ConformModelComponent } from './components/conform-model/conform-model.component';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ConfirmationDialogComponent } from '@shared/components/confirmation-dialog/confirmation-dialog.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { OpdService } from './services/opd.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { IpdRegistrationComponent } from './components/ipd-registration/ipd-registration.component';\r\n\r\n\r\n@NgModule({\r\n  providers: [PatientdataService, NumberToWordsPipe, OpdService],\r\n  declarations: [\r\n    OpdComponent,\r\n    SearchfilterPipe,\r\n    AddreferencedoctorsComponent,\r\n    OtpgenerationComponent,\r\n    ConformModelComponent,\r\n    routingComponents,\r\n    IpdRegistrationComponent\r\n  ],\r\n  imports: [\r\n    MatSlideToggleModule,\r\n    OpdRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatDatepickerModule,\r\n    SharedModule,\r\n    TranslateModule,\r\n    NgSelectModule,\r\n    MatTooltipModule\r\n  ],\r\n  entryComponents: [\r\n    AddreferencedoctorsComponent,\r\n    OtpgenerationComponent,\r\n    CommentsDialogComponent,\r\n    ConformModelComponent,\r\n    ConfirmationDialogComponent,\r\n  ]\r\n})\r\nexport class OpdModule {}\r\n","<div class=\"page-info-message col-sm-12 no-padding\">\r\n  <ul>\r\n    <li class=\"info-icon\"><i class=\"mdi mdi-information\"></i></li>\r\n    <li class=\"info-message\">\r\n      <p>Please use the above search box for Patient Search or to Register a new patient, Using the searched patient you\r\n        can book a Consultation/ Lab Tests / Imaging Tests</p>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found-component',\r\n  templateUrl: './page-not-found-component.component.html',\r\n  styleUrls: ['./page-not-found-component.component.scss']\r\n})\r\nexport class PageNotFoundComponentComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport {\r\n  UtilService,\r\n  UserService,\r\n  PrintService,\r\n  PRINT_SETTINGS_TOKEN,\r\n  CLONEDEEP\r\n} from '@core/services';\r\nimport { UserSession } from '@core/models/user-session';\r\nimport { DatePipe } from '@angular/common';\r\nimport { CaseSheetTokenPrint } from '@app/modules/opd/models/case-sheet-token-print.model';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class OpdService {\r\n  editable = new BehaviorSubject(null);\r\n  fingerData = new BehaviorSubject(null);\r\n  fingerPrintApiData = new BehaviorSubject(null);\r\n  constructor(\r\n    private utilService: UtilService,\r\n    private userService: UserService,\r\n    private datePipe: DatePipe,\r\n    private printService: PrintService,\r\n    @Inject(CLONEDEEP) private cloner,\r\n    @Inject(PRINT_SETTINGS_TOKEN) private defSettings\r\n  ) {\r\n    this.userSession = this.userService.getUser();\r\n  }\r\n\r\n  private userSession: UserSession;\r\n\r\n  private getCasesheetData(data) {\r\n\r\n    const printData = <CaseSheetTokenPrint>{\r\n      consultantDoc: '',\r\n      generatedBy: ''\r\n    };\r\n\r\n    // consultantDoc\r\n    printData.consultantDoc = data.doctorNm || '';\r\n    // visit number\r\n\r\n    // printData.visitNo = data.patientVisitId || '';\r\n\r\n    printData.visitNo =\r\n      data.visitType === 'NEW' ? '1 - NEW' : data.visitCount + ' - FOLLOW UP';\r\n\r\n    // payment applicable\r\n    printData.paymentApplicable = data.paymentStatus ? 'Yes' : 'No';\r\n    // referred by\r\n    printData.referredBy = data.refDoctorNm || '';\r\n    // dept name\r\n    printData.deptName = data.deptNm || '';\r\n    // patient name\r\n    printData.patientName = (data.honorificNm ? (data.honorificNm + ' ') : '') + data.patientNm || '';\r\n    // patientid\r\n    printData.patientId = data.hosPatientId || '';\r\n    // mobile number\r\n    printData.mobile = data.mobileNo || '';\r\n    // genderprint-changes__common-reg-fix\r\n    printData.gender = data.gender || '';\r\n    // token no\r\n    printData.tokenNo = data.tokenNo || '';\r\n    // date of birth\r\n    if (data.birthDt) {\r\n      const ageMap = this.utilService.parseDob(data.birthDt);\r\n      // printData.age = ageFormatter(ageMap);\r\n      printData.age = String(ageMap.get('patientAge'));\r\n    } else if (data.age) {\r\n      const ageMap = this.utilService.parseAgeIndays(data.age);\r\n      printData.age = String(ageMap.get('patientAge'));\r\n    }\r\n    // pin code\r\n    printData.pincode = data.pincode || '';\r\n    // country\r\n    printData.country = data.countrynm || '';\r\n    // address one\r\n    printData.addressOne = data.addressline1 || '';\r\n    // country\r\n    printData.city = data.citynm || '';\r\n    // patientAddress\r\n    printData.patientAddress = data.addressLine1;\r\n\r\n    // valid upto\r\n    printData.validUpto =\r\n      (data.feeValidDt &&\r\n        data.feeValidVisits &&\r\n        this.datePipe.transform(data.feeValidDt, 'dd-MM-yyyy') +\r\n          ' / ' +\r\n          data.feeValidVisits +\r\n          ' visits which ever is earlier') ||\r\n      'NA';\r\n\r\n    // generated by\r\n    printData.generatedBy = this.userSession.userName;\r\n    // hospital name\r\n    if (this.userSession.orgList) {\r\n      const currentOrg = this.userSession.orgList.find(org => {\r\n        return org.orgId === this.userSession.orgId;\r\n      });\r\n      const orgName = currentOrg && currentOrg.orgName;\r\n      printData.companyName = orgName;\r\n    }\r\n\r\n    if (data.visitDt) {\r\n      printData.date = this.datePipe.transform(\r\n        data.visitDt,\r\n        'dd-MM-yyyy - hh: mm a'\r\n      );\r\n    } else {\r\n      printData.date = this.datePipe.transform(\r\n        new Date(),\r\n        'dd-MM-yyyy - hh: mm a'\r\n      );\r\n    }\r\n\r\n    return printData;\r\n  }\r\n\r\n  generateToken(data) {\r\n    const caseSheetData = this.getCasesheetData(data);\r\n    let printSettings;\r\n    const printSettingsObject = this.printService.getPrintSettingsObject();\r\n    if (printSettingsObject && Object.keys(printSettingsObject).length) {\r\n      printSettings = this.cloner(printSettingsObject.token);\r\n    } else {\r\n      printSettings = this.cloner(this.defSettings.token);\r\n    }\r\n    this.printService.printToken(caseSheetData, printSettings);\r\n  }\r\n\r\n  async generateCasesheet(data) {\r\n    let printSettings;\r\n    const printSettingsObject = this.printService.getPrintSettingsObject();\r\n\r\n    if (printSettingsObject && Object.keys(printSettingsObject).length) {\r\n      printSettings = this.cloner(printSettingsObject.casesheet);\r\n    } else {\r\n      printSettings = this.cloner(this.defSettings.casesheet);\r\n    }\r\n    // const printSettings = this.userSession.printsettingsObj\r\n    //   ? this.cloner(this.userSession.printsettingsObj.casesheet)\r\n    //   : this.cloner(this.defSettings.casesheet);git\r\n\r\n    const caseSheetData = this.getCasesheetData(data) as any;\r\n    const companyAddress = ['', ''];\r\n    const {getCurrentOrgName } = this.utilService;\r\n\r\n    // company address line 1\r\n    if (this.userSession.orgInfo.addressOne) {\r\n      companyAddress[0] =  (`${this.userSession.orgInfo.addressOne}, `);\r\n    }\r\n\r\n    if (this.userSession.orgInfo.city) {\r\n      companyAddress[0] += (`${this.userSession.orgInfo.city}`);\r\n    }\r\n\r\n    if (this.userSession.orgInfo.state) {\r\n      companyAddress[1] = (`${this.userSession.orgInfo.state}, `);\r\n    }\r\n    if (this.userSession.orgInfo.country) {\r\n      companyAddress[1] += (this.userSession.orgInfo.country);\r\n    }\r\n\r\n    caseSheetData.header = {\r\n      companyName: (getCurrentOrgName(this.userSession)),\r\n      companyAddress\r\n    };\r\n\r\n    await this.printService.downloadHeaderAndFooter(printSettings);\r\n\r\n    const profileDataUri = await this.utilService.convertToDataURLviaCanvas(\r\n      this.userSession.imagePath + '?q=' + Date.now()\r\n    );\r\n\r\n    caseSheetData.profileLogo = profileDataUri;\r\n\r\n    if (printSettings.patientImageNeeded && data.imagePath) {\r\n      const patientImageDataUri = await this.utilService.convertToDataURLviaCanvas(\r\n        data.imagePath + '?' + new Date().getTime()\r\n      );\r\n      caseSheetData.patientImage = patientImageDataUri;\r\n    }\r\n\r\n    const type1 = [49, 93]; // emr optho case-sheet\r\n    const type2 = [454, 137, 139, 527, 126, 127, 1164]; // highsight eye hospital\r\n\r\n    // emr case optho casesheet\r\n    if (type1.includes(this.userSession.orgId)) {\r\n      const eyeImage = await this.utilService.convertToDataURLviaCanvas(\r\n        `https://s3.ap-south-1.amazonaws.com/dru.assets/images/app/Eye-Diagrams.jpg?q=${Date.now()}`\r\n      );\r\n      caseSheetData.eyeDiagram = eyeImage;\r\n      this.printService.getOpthoPrint(caseSheetData);\r\n    } else if (type2.includes(this.userSession.orgId)) {\r\n      // highsight eye hospital\r\n      const headerBannerImage = await this.utilService.convertToDataURLviaCanvas(\r\n        'https://s3.ap-south-1.amazonaws.com/dru.assets/images/app/HS_BNR.jpg?' +\r\n          Date.now()\r\n      );\r\n      caseSheetData.headerBanner = headerBannerImage;\r\n      this.printService.getNewOptometristPrint(caseSheetData);\r\n    } else {\r\n      this.printService.printCaseSheeet(caseSheetData, printSettings);\r\n    }\r\n  }\r\n\r\n  // async generateInvoice(data) {\r\n\r\n  //   const invoiceData = {\r\n  //     tableData: [],\r\n  //     invoiceSummary: [\r\n  //       ['Final Amount', `Rs. ${data.totalInvoiceAmt.toFixed(2)}`]\r\n  //     ]\r\n  //   } as any;\r\n\r\n  //   let printSettings;\r\n\r\n  //   if (\r\n  //     this.userSession.printsettingsObj &&\r\n  //     Object.keys(this.userSession.printsettingsObj).length\r\n  //   ) {\r\n  //     printSettings = this.cloner(this.userSession.printsettingsObj.invoice);\r\n  //   } else {\r\n  //     printSettings = this.cloner(this.defSettings.invoice);\r\n  //   }\r\n\r\n  //   // const printSettings = this.userSession.printsettingsObj\r\n  //   //   ? this.cloner(this.userSession.printsettingsObj.invoice)\r\n  //   //   : this.cloner(this.defSettings.invoice);\r\n\r\n  //   // GroupBy on billServiceType\r\n  //   const serviceGroups = this.utilService.groupBy(\r\n  //     data.billServicesList,\r\n  //     'billServiceType'\r\n  //   );\r\n\r\n  //   const tableData = [], colTotals = Array(6).fill('');\r\n\r\n  //   let col_total_service_amt = 0,\r\n  //     col_total_discount = 0,\r\n  //     col_total_net_amt = 0,\r\n  //     curr_index = 1,\r\n  //     services = [],\r\n  //     servicesInPanel = [];\r\n\r\n\r\n  //   Object.keys(serviceGroups).forEach((key, _index) => {\r\n  //     serviceGroups[key].forEach((service, index) => {\r\n  //       if (service.isPackage && service.testList) {\r\n  //         if (service.testList.length) {\r\n  //           services = service.testList.map(tests => tests.serviceNm);\r\n  //         }\r\n  //       }\r\n  //       if (service.isPackage && service.panelList) {\r\n  //         if (service.panelList.length) {\r\n  //           servicesInPanel = service.panelList.map(tests => tests.serviceName);\r\n  //           services = services.concat(servicesInPanel);\r\n  //         }\r\n  //       }\r\n\r\n  //       const row = [\r\n  //         curr_index++,\r\n  //         service.isPackage\r\n  //           ? [service.serviceName, [services]]\r\n  //           : service.serviceName,\r\n  //         service.quantity,\r\n  //         service.totalServiceAmt.toFixed(2),\r\n  //         service.discountAmount.toFixed(2),\r\n  //         service.totalAmt.toFixed(2)\r\n  //       ];\r\n\r\n  //       col_total_service_amt += (service.totalServiceAmt || 0);\r\n  //       col_total_discount += (service.discountAmount || 0);\r\n  //       col_total_net_amt += (service.totalAmt || 0);\r\n\r\n  //       if (index === 0) {\r\n  //         const header = [];\r\n  //         let headerText;\r\n  //         if (key === 'LAB') {\r\n  //           headerText = `Lab - Order Id: ${data.labOrderObj.cstmrOrderNo}`;\r\n  //         } else if (key === 'Imaging') {\r\n  //           headerText = `Imaging - Order Id: ${\r\n  //             data.imagingOrderObj.cstmrOrderNo\r\n  //           }`;\r\n  //         } else {\r\n  //           headerText = key;\r\n  //         }\r\n  //         header.push({ text: headerText, colSpan: row.length, bold: true });\r\n  //         Array.prototype.push.apply(header, Array(row.length - 1).fill(''));\r\n  //         tableData.push(header);\r\n  //       }\r\n  //       tableData.push(row);\r\n  //     });\r\n  //   });\r\n\r\n  //   colTotals[3] = { text: col_total_service_amt.toFixed(2), bold: true };\r\n  //   colTotals[4] = { text: col_total_discount.toFixed(2), bold: true };\r\n  //   colTotals[5] = { text: col_total_net_amt.toFixed(2), bold: true };\r\n\r\n  //   invoiceData.tableData = tableData;\r\n  //   invoiceData.tableData.push(colTotals);\r\n  //   invoiceData.tableData.unshift([\r\n  //     '#',\r\n  //     'Service Name',\r\n  //     'Qty.',\r\n  //     'Service Amt.',\r\n  //     'Discount',\r\n  //     'Net Amt.'\r\n  //   ]);\r\n  //   // total Invoice Amount\r\n  //   invoiceData.invoiceSummary.push([\r\n  //     'Paid Amount',\r\n  //     `Rs ${Math.round(data.paidAmt).toFixed(2)}`\r\n  //   ]);\r\n\r\n  //   invoiceData.header = {} as any;\r\n  //   invoiceData.billTo = {} as any;\r\n\r\n  //   // due amount\r\n  //   invoiceData.header.due = data.totalInvoiceDueAmt && Math.round(data.totalInvoiceDueAmt);\r\n\r\n  //   const { toTitleCase, getCurrentOrgName } = this.utilService;\r\n\r\n  //   // hospital's name\r\n  //   invoiceData.header.companyName = toTitleCase(getCurrentOrgName(this.userSession));\r\n\r\n  //   invoiceData.header.gstNumber = this.userSession.gstNumber;\r\n\r\n  //   invoiceData.header.contactNumber = this.userSession.contactNo1 ?\r\n  //     this.userSession.contactNo1 : (this.userSession.contactNo2 ? this.userSession.contactNo2 : ''),\r\n\r\n  //   invoiceData.header.tanNumber = this.userSession.tanNo;\r\n\r\n  //   // hospital's address\r\n\r\n  //   const companyAddress = ['', ''];\r\n\r\n  //   // company address line 1\r\n  //   if (this.userSession.orgInfo.addressOne) {\r\n  //     companyAddress[0] = toTitleCase(`${this.userSession.orgInfo.addressOne}, `);\r\n  //   }\r\n\r\n  //   if (this.userSession.orgInfo.city) {\r\n  //     companyAddress[0] += toTitleCase(`${this.userSession.orgInfo.city}`);\r\n  //   }\r\n\r\n  //   if (this.userSession.orgInfo.state) {\r\n  //     companyAddress[1] = toTitleCase(`${this.userSession.orgInfo.state}, `);\r\n  //   }\r\n  //   if (this.userSession.orgInfo.country) {\r\n  //     companyAddress[1] += toTitleCase(this.userSession.orgInfo.country);\r\n  //   }\r\n\r\n  //   // printed by\r\n  //   invoiceData.printedBy = this.userSession.fullName;\r\n\r\n  //   invoiceData.header.companyAddress = companyAddress;\r\n\r\n  //   // bill to address - it is an array of string and can contain anything\r\n  //   // please don't add more than four items for the best print\r\n  //   let age;\r\n\r\n  //   if (data.age || data.age === 0) {\r\n  //     age = this.utilService.parseAgeIndays(data.age).get('patientAge');\r\n  //   } else if (data.dateOfBirth) {\r\n  //     age = this.utilService.parseDob(data.dateOfBirth).get('patientAge');\r\n  //   }\r\n\r\n  //   invoiceData.billTo.address = [\r\n  //     toTitleCase(`${data.honorificNm ? data.honorificNm + ' ' : ''}${data.patientNm} | ${age} | ${data.gender}`),\r\n  //     data.patientEmailId || '',\r\n  //     `Patient ID: ${data.hosPatientId}`,\r\n  //     `${data.addressLine1}, ${data.cityNm}`,\r\n  //     data.mobileNo ? `Phone No: ${data.mobileNo}` : ''\r\n  //   ];\r\n\r\n  //   invoiceData.invoice = {} as any;\r\n\r\n  //   // invoice id\r\n  //   invoiceData.invoice.id = data.invoiceNo;\r\n  //   // invoice date\r\n  //   invoiceData.invoice.date = this.datePipe.transform(\r\n  //     data.invoiceDt,\r\n  //     'dd-MM-yyyy'\r\n  //   );\r\n  //   // invoice terms\r\n  //   invoiceData.invoice.terms = 'Due on Receipt';\r\n\r\n  //   // total amount in words\r\n  //   invoiceData.totAmtInWords =\r\n  //     'Rupees ' +\r\n  //     toTitleCase(this.utilService.toWords(Math.round(data.totalInvoiceAmt))) +\r\n  //     ' only';\r\n\r\n  //   await this.printService.downloadHeaderAndFooter(printSettings);\r\n\r\n  //   const profileLogo = await this.utilService.convertToDataURLviaCanvas(\r\n  //     `${this.userSession.imagePath}?q=${Date.now()}`\r\n  //   );\r\n  //   printSettings.hzHeader.profileLogo = profileLogo;\r\n\r\n  //   invoiceData.validUpto =\r\n  //     (data.feeValidDt &&\r\n  //       data.feeValidVisits &&\r\n  //       this.datePipe.transform(data.feeValidDt, 'dd-MM-yyyy') +\r\n  //         ' / ' +\r\n  //         data.feeValidVisits +\r\n  //         ' visits which ever is earlier');\r\n\r\n  //   invoiceData.paymentMode = data.paymentModeList\r\n  //     .map(mode => `${mode.paymentMode}: Rs ${mode.paidAmountByMode}`)\r\n  //     .join(', ');\r\n\r\n  //   this.printService.getInvoicePrint(invoiceData, printSettings);\r\n\r\n  // }\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appDisableControl]'\r\n})\r\nexport class DisableControlDirective {\r\n  constructor(private ngControl: NgControl) {}\r\n  @Input()\r\n  set appDisableControl(disabledState: boolean) {\r\n    const action = disabledState ? 'enable' : 'disable';\r\n    this.ngControl.control[action]();\r\n  }\r\n}\r\n"],"sourceRoot":""}